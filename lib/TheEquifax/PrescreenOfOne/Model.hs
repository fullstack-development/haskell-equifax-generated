{-
   Prescreen of One

   # Introduction      Equifax’s Prescreen of One is a sales tool that is intended to entice the consumer to take a step toward opening a credit or loan account. Lenders can make offers of credit or insurance, in real time, in person or over the phone.    # Getting Started  1. **<a href=\"/user/applications\" target=\"_blank\">Create</a>** an application  2. **<a href=\"/user/applications\" target=\"_blank\">Subscribe</a>** to Prescreen of One API  3. **<a href=\"/products/consumer-credit-report\" target=\"_blank\">Explore</a>** the Sandbox environment  # Promoting to UAT  To successfully submit test transactions through your application in the UAT environment, a test member number is required.  You may use your existing Equifax test member number(s).  Please contact your Equifax Account Representative if a new test member number is needed. The steps below can be used to test in the UAT environment.  Transactions generated using a test member number do not return identical results as a sandbox transaction.  A sandbox transaction will reflect everything that is exposed in the API whereas a test member number is configured to align with the specifications of your contract. Please contact us to ensure your test member number is configured to your expectations.      1. **<a href=\"/user/applications\" target=\"_blank\">Promote</a>** application to test  2. **<a href=\"/documentation\" target=\"_blank\">Update</a>** requests details for UAT  3. **<a href=\"/documentation\" target=\"_blank\">Test</a>** scenarios in UAT environment   # For More Details    * **<a href=\"/contact\" target=\"_blank\">Contact Us</a>** - Equifax Developer Center Support Website   * **ACRO Migration Support**       * phone: 1-888-407-0359; Option 2 followed by Option 5         * email:  BT.Acro.tech@equifax.com

   OpenAPI Version: 3.0.0
   Prescreen of One API version: 1.0.0
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}
{-# LANGUAGE DeriveDataTypeable #-}
{-# LANGUAGE DeriveFoldable #-}
{-# LANGUAGE DeriveGeneric #-}
{-# LANGUAGE DeriveTraversable #-}
{-# LANGUAGE GeneralizedNewtypeDeriving #-}
{-# LANGUAGE LambdaCase #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE RecordWildCards #-}
{-# LANGUAGE TupleSections #-}
{-# LANGUAGE TypeFamilies #-}
{-# OPTIONS_GHC -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

-- |
-- Module : PrescreenOfOne.Model
module TheEquifax.PrescreenOfOne.Model where

import Control.Applicative (Alternative, (<|>))
import qualified Control.Arrow as P (left)
import Data.Aeson ((.:), (.:!), (.:?), (.=))
import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Base64 as B64
import qualified Data.ByteString.Char8 as BC
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (TypeRep, Typeable, typeOf, typeRep)
import qualified Data.Foldable as P
import Data.Function ((&))
import qualified Data.HashMap.Lazy as HM
import qualified Data.Map as Map
import qualified Data.Maybe as P
import Data.Monoid ((<>))
import qualified Data.Set as Set
import Data.Text (Text)
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Time as TI
import qualified Lens.Micro as L
import TheEquifax.Core
import TheEquifax.Core.MimeTypes
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH
import Prelude (Applicative, Bool (..), Char, Double, FilePath, Float, Functor, Int, Integer, Maybe (..), Monad, String, fmap, maybe, mempty, pure, undefined, ($), (.), (/=), (<$>), (<*>), (=<<), (>>=))
import qualified Prelude as P

-- * Parameter newtypes

-- ** EfxClientCorrelationId

newtype EfxClientCorrelationId = EfxClientCorrelationId {unEfxClientCorrelationId :: Text} deriving (P.Eq, P.Show)

-- * Models

-- ** APIErrorResponse

-- | APIErrorResponse
data APIErrorResponse = APIErrorResponse
  { -- | /Required/ "efxErrorCode" - Error code
    aPIErrorResponseEfxErrorCode :: !(Double),
    -- | /Required/ "description"
    aPIErrorResponseDescription :: !(Text),
    -- | "additionalErrorDetails"
    aPIErrorResponseAdditionalErrorDetails :: !(Maybe AdditionalErrorDetails)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON APIErrorResponse
instance A.FromJSON APIErrorResponse where
  parseJSON = A.withObject "APIErrorResponse" $ \o ->
    APIErrorResponse
      <$> (o .: "efxErrorCode")
      <*> (o .: "description")
      <*> (o .:? "additionalErrorDetails")

-- | ToJSON APIErrorResponse
instance A.ToJSON APIErrorResponse where
  toJSON APIErrorResponse {..} =
    A.object
      [ "efxErrorCode" .= aPIErrorResponseEfxErrorCode,
        "description" .= aPIErrorResponseDescription,
        "additionalErrorDetails" .= aPIErrorResponseAdditionalErrorDetails
      ]

-- | Construct a value of type 'APIErrorResponse' (by applying it's required fields, if any)
mkAPIErrorResponse ::
  -- | 'aPIErrorResponseEfxErrorCode': Error code
  Double ->
  -- | 'aPIErrorResponseDescription'
  Text ->
  APIErrorResponse
mkAPIErrorResponse aPIErrorResponseEfxErrorCode aPIErrorResponseDescription =
  APIErrorResponse
    { aPIErrorResponseEfxErrorCode,
      aPIErrorResponseDescription,
      aPIErrorResponseAdditionalErrorDetails = Nothing
    }

-- ** AccountDesignatorCode

-- | AccountDesignatorCode
-- Consumer relationship with account
data AccountDesignatorCode = AccountDesignatorCode
  { -- | "code" - Code value
    accountDesignatorCodeCode :: !(Maybe Text),
    -- | "description" - - A: Authorized User – This is an authorized user of this account; another individual has contractual responsibility. - B: On behalf of another person – The subject has financial responsibility for an account, which is used exclusively by another person. - C: Co-maker – The subject has co-signed for a loan, and will be responsible for payment if the borrower should default. - I: Individual Account – The subject of the report has contractual responsibility for this account and is primarily responsible for its payment. - J: Joint Account – The subject and another person (or persons) are jointly responsible for payment on this account. - M: Maker – The subject is responsible for payment of a loan, but a co-maker will be responsible for payment if maker defaults. - S: Shared, but otherwise undesignated – This code is an indication that the credit grantor knows that the subject and at least one other person share the account, but not enough information is available to designate the account as “J” or “A”. - T: Terminated – The subject’s relationship to this account has ended, although other parties who once shared the account may continue to maintain the account. - U: Undesignated - X: Deceased (Not returned on Trade Lines)
    accountDesignatorCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON AccountDesignatorCode
instance A.FromJSON AccountDesignatorCode where
  parseJSON = A.withObject "AccountDesignatorCode" $ \o ->
    AccountDesignatorCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON AccountDesignatorCode
instance A.ToJSON AccountDesignatorCode where
  toJSON AccountDesignatorCode {..} =
    A.object
      [ "code" .= accountDesignatorCodeCode,
        "description" .= accountDesignatorCodeDescription
      ]

-- | Construct a value of type 'AccountDesignatorCode' (by applying it's required fields, if any)
mkAccountDesignatorCode ::
  AccountDesignatorCode
mkAccountDesignatorCode =
  AccountDesignatorCode
    { accountDesignatorCodeCode = Nothing,
      accountDesignatorCodeDescription = Nothing
    }

-- ** AccountTypeCode

-- | AccountTypeCode
-- Codes describing the account type
data AccountTypeCode = AccountTypeCode
  { -- | "code" - Code value
    accountTypeCodeCode :: !(Maybe Text),
    -- | "description" - Account Type Codes:   - 00: Auto   - 01: Unsecured   - 02: Secured   - 03: Partially Secured   - 04: Home Improvement   - 05: Federal Housing Administration Home Improvement   - 06: Installment Sales Contract   - 07: Charge Account   - 08: Real Estate   - 10: Business Loan - Individual is personally liable   - 11: Recreational Merchandise   - 12: Education Loan   - 13: Lease   - 14: Co-Maker Not Borrower (Retired 9-18-09)   - 15: Line of Credit   - 17: Manufactured Housing   - 18: Credit Card   - 19: Federal Housing Administration Real Estate Mortgage   - 20: Note Loan   - 21: Note Loan With Co-Maker   - 22: Secured By Household Goods   - 23: Secured By Household Goods/Collateral   - 25: Veteran’s Administration Real Estate Mortgage   - 26: Conventional Real Estate Mortgage   - 27: Real Estate Mortgage   - 29: Rental Agreement   - 34: Debt Counseling Service   - 37: Combined Credit Plan (represents two credit plans being reported as one account)   - 43: Debit Card (used when backed by a line of credit or overdraft protection)   - 47: Credit Line Secured   - 48: Collection Agency/Attorney   - 49: Insurance Claim Pending   - 50: Family Support   - 65: Government Unsecured Guaranteed Loan   - 66: Government Secured Guaranteed Loan   - 67: Government Unsecured Direct Loan   - 68: Government Secured Direct Loan   - 69: Government Grant   - 70: Government Overpayment   - 71: Government Fine   - 72: Government Fee for Services   - 73: Government Employee Advance   - 74: Government Miscellaneous Debt   - 75: Government Benefit   - 77: Returned Check   - 78: Installment Loan   - 85: Bi-Monthly Mortgage Payment (every other month)   - 87: Semi-Monthly Mortgage Payment (twice per month)   - 89: Home Equity Line of Credit   - 90: Medical Debt   - 91: Debt Consolidation   - 92: Utility Company   - 93: Child Support   - 94: Spouse Support   - 95: Attorney Fees   - 0A: Time Share Loan (a purchased time share)   - 1A: Lender Placed Insurance   - 2A: Secured Credit Card   - 3A: Auto Lease   - 5A: Real Estate (junior liens and non-purchase money first)   - 6A: Commercial Installment Loan (Individual personally liable; company is guarantor)   - 7A: Commercial Line of Credit (Individual personally liable; company is guarantor)   - 8A: Business Credit Card (Individual has primary responsibility)   - 9A: Secured Home Improvement   - 5B: Second Mortgage   - 6B: Commercial Mortgage Loan (Individual is personally liable; company is guarantor)   - 7B: Agricultural   - 8B: Deposit Related (overdrawn account)   - 9B: Business Line Personally Guaranteed   - 0C: Debt Buyer Account   - 1C: Household Goods   - 2C: US Department of Agriculture Real Estate Mortgage Loan   - 4D: Telecommunication/Cellular   - 6D: Home Equity   - 0F: Construction Loan   - 0G: Flexible Spending Credit Card
    accountTypeCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON AccountTypeCode
instance A.FromJSON AccountTypeCode where
  parseJSON = A.withObject "AccountTypeCode" $ \o ->
    AccountTypeCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON AccountTypeCode
instance A.ToJSON AccountTypeCode where
  toJSON AccountTypeCode {..} =
    A.object
      [ "code" .= accountTypeCodeCode,
        "description" .= accountTypeCodeDescription
      ]

-- | Construct a value of type 'AccountTypeCode' (by applying it's required fields, if any)
mkAccountTypeCode ::
  AccountTypeCode
mkAccountTypeCode =
  AccountTypeCode
    { accountTypeCodeCode = Nothing,
      accountTypeCodeDescription = Nothing
    }

-- ** AdditionalErrorDetails

-- | AdditionalErrorDetails
-- Additional error details
data AdditionalErrorDetails = AdditionalErrorDetails
  { -- | /Required/ "status" - HTTP status code
    additionalErrorDetailsStatus :: !(Double),
    -- | "errors"
    additionalErrorDetailsErrors :: !(Maybe [A.Value]),
    -- | "code" - Internal code to identify the error
    additionalErrorDetailsCode :: !(Maybe Double),
    -- | "message" - Short error message
    additionalErrorDetailsMessage :: !(Maybe Text),
    -- | "timeStamp" - Date and time when the error occurred
    additionalErrorDetailsTimeStamp :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON AdditionalErrorDetails
instance A.FromJSON AdditionalErrorDetails where
  parseJSON = A.withObject "AdditionalErrorDetails" $ \o ->
    AdditionalErrorDetails
      <$> (o .: "status")
      <*> (o .:? "errors")
      <*> (o .:? "code")
      <*> (o .:? "message")
      <*> (o .:? "timeStamp")

-- | ToJSON AdditionalErrorDetails
instance A.ToJSON AdditionalErrorDetails where
  toJSON AdditionalErrorDetails {..} =
    A.object
      [ "status" .= additionalErrorDetailsStatus,
        "errors" .= additionalErrorDetailsErrors,
        "code" .= additionalErrorDetailsCode,
        "message" .= additionalErrorDetailsMessage,
        "timeStamp" .= additionalErrorDetailsTimeStamp
      ]

-- | Construct a value of type 'AdditionalErrorDetails' (by applying it's required fields, if any)
mkAdditionalErrorDetails ::
  -- | 'additionalErrorDetailsStatus': HTTP status code
  Double ->
  AdditionalErrorDetails
mkAdditionalErrorDetails additionalErrorDetailsStatus =
  AdditionalErrorDetails
    { additionalErrorDetailsStatus,
      additionalErrorDetailsErrors = Nothing,
      additionalErrorDetailsCode = Nothing,
      additionalErrorDetailsMessage = Nothing,
      additionalErrorDetailsTimeStamp = Nothing
    }

-- ** Address

-- | Address
-- Subject's address(es) information
data Address = Address
  { -- | "addressType" - The address type:   - current: Current Address. A maximum of 1 current Address can be returned per report   - former: Former Address. A maximum of 1 former Address can be returned per report   - additional: Additional Address. A maximum of 8 additional Addresses can be returned per report
    addressAddressType :: !(Maybe E'AddressType),
    -- | "houseNumber" - Street Number/House number
    addressHouseNumber :: !(Maybe Text),
    -- | "streetName" - Street name
    addressStreetName :: !(Maybe Text),
    -- | "streetType" - Street type/Direction/Apartment number
    addressStreetType :: !(Maybe Text),
    -- | "cityName" - City name
    addressCityName :: !(Maybe Text),
    -- | "stateAbbreviation" - State abbreviation
    addressStateAbbreviation :: !(Maybe Text),
    -- | "zipCode" - Zip code
    addressZipCode :: !(Maybe Text),
    -- | "rentOwnBuy" - Rent/Own/Buy
    addressRentOwnBuy :: !(Maybe Text),
    -- | "sourceOfAddress"
    -- FIXME: returns Either Object or Array of Objects
    -- "addresses" : [ {
    --    "sourceOfAddress" : {
    --      "code" : "C",
    --      "description" : "EQUIFAX"
    --    },
    --  },
    --  {
    --    "sourceOfAddress" : [ {
    --      "code" : "C",
    --      "description" : "EQUIFAX"
    --    } ],
    --  },
    --  {
    --    "sourceOfAddress" : [ {
    --      "code" : "C",
    --      "description" : "EQUIFAX"
    --    } ]
    -- addressSourceOfAddress :: !(Maybe AddressSourceOfAddress),
    -- | "telephoneNumber" - Telephone number including a valid area code
    addressTelephoneNumber :: !(Maybe Text),
    -- | "sourceOfTelephoneNumber"
    addressSourceOfTelephoneNumber :: !(Maybe AddressSourceOfTelephoneNumber),
    -- | "addressVarianceIndicator"
    addressAddressVarianceIndicator :: !(Maybe AddressAddressVarianceIndicator),
    -- | "addressLine1" - Combination of address components
    addressAddressLine1 :: !(Maybe Text),
    -- | "dateFirstReported" - First date the address was reported to Equifax
    addressDateFirstReported :: !(Maybe Date),
    -- | "dateLastReported" - Last date the address was reported to Equifax
    addressDateLastReported :: !(Maybe Date),
    -- | "dateTelephoneReported" - Date the telephone number was reported to Equifax
    addressDateTelephoneReported :: !(Maybe Date)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON Address
instance A.FromJSON Address where
  parseJSON = A.withObject "Address" $ \o ->
    Address
      <$> (o .:? "addressType")
      <*> (o .:? "houseNumber")
      <*> (o .:? "streetName")
      <*> (o .:? "streetType")
      <*> (o .:? "cityName")
      <*> (o .:? "stateAbbreviation")
      <*> (o .:? "zipCode")
      <*> (o .:? "rentOwnBuy")
      --  <*> (o .:? "sourceOfAddress")
      <*> (o .:? "telephoneNumber")
      <*> (o .:? "sourceOfTelephoneNumber")
      <*> (o .:? "addressVarianceIndicator")
      <*> (o .:? "addressLine1")
      <*> (o .:? "dateFirstReported")
      <*> (o .:? "dateLastReported")
      <*> (o .:? "dateTelephoneReported")

-- | ToJSON Address
instance A.ToJSON Address where
  toJSON Address {..} =
    A.object
      [ "addressType" .= addressAddressType,
        "houseNumber" .= addressHouseNumber,
        "streetName" .= addressStreetName,
        "streetType" .= addressStreetType,
        "cityName" .= addressCityName,
        "stateAbbreviation" .= addressStateAbbreviation,
        "zipCode" .= addressZipCode,
        "rentOwnBuy" .= addressRentOwnBuy,
        -- "sourceOfAddress" .= addressSourceOfAddress,
        "telephoneNumber" .= addressTelephoneNumber,
        "sourceOfTelephoneNumber" .= addressSourceOfTelephoneNumber,
        "addressVarianceIndicator" .= addressAddressVarianceIndicator,
        "addressLine1" .= addressAddressLine1,
        "dateFirstReported" .= addressDateFirstReported,
        "dateLastReported" .= addressDateLastReported,
        "dateTelephoneReported" .= addressDateTelephoneReported
      ]

-- | Construct a value of type 'Address' (by applying it's required fields, if any)
mkAddress ::
  Address
mkAddress =
  Address
    { addressAddressType = Nothing,
      addressHouseNumber = Nothing,
      addressStreetName = Nothing,
      addressStreetType = Nothing,
      addressCityName = Nothing,
      addressStateAbbreviation = Nothing,
      addressZipCode = Nothing,
      addressRentOwnBuy = Nothing,
      --addressSourceOfAddress = Nothing,
      addressTelephoneNumber = Nothing,
      addressSourceOfTelephoneNumber = Nothing,
      addressAddressVarianceIndicator = Nothing,
      addressAddressLine1 = Nothing,
      addressDateFirstReported = Nothing,
      addressDateLastReported = Nothing,
      addressDateTelephoneReported = Nothing
    }

-- ** AddressAddressVarianceIndicator

-- | AddressAddressVarianceIndicator
-- The Address Variance Indicator will alert you to the differences between the address submitted current and other addresses displayed on the consumer report.The Address Variance Indicator will return a code, for each address displayed on the report, informing you of the degree to which the first address submitted in the inquiry matched the address on the Equifax database. Address Variance Indicator is an optional feature offered by Equifax.  Please contact your Equifax Sales Associate for additional information and activation.
data AddressAddressVarianceIndicator = AddressAddressVarianceIndicator
  { -- | "code" - Code value
    addressAddressVarianceIndicatorCode :: !(Maybe Text),
    -- | "description"
    addressAddressVarianceIndicatorDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON AddressAddressVarianceIndicator
instance A.FromJSON AddressAddressVarianceIndicator where
  parseJSON = A.withObject "AddressAddressVarianceIndicator" $ \o ->
    AddressAddressVarianceIndicator
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON AddressAddressVarianceIndicator
instance A.ToJSON AddressAddressVarianceIndicator where
  toJSON AddressAddressVarianceIndicator {..} =
    A.object
      [ "code" .= addressAddressVarianceIndicatorCode,
        "description" .= addressAddressVarianceIndicatorDescription
      ]

-- | Construct a value of type 'AddressAddressVarianceIndicator' (by applying it's required fields, if any)
mkAddressAddressVarianceIndicator ::
  AddressAddressVarianceIndicator
mkAddressAddressVarianceIndicator =
  AddressAddressVarianceIndicator
    { addressAddressVarianceIndicatorCode = Nothing,
      addressAddressVarianceIndicatorDescription = Nothing
    }

-- ** AddressRequest

-- | AddressRequest
data AddressRequest = AddressRequest
  { -- | /Required/ "identifier" - Address type of the report subject
    addressRequestIdentifier :: !(Text),
    -- | "houseNumber" - House number
    addressRequestHouseNumber :: !(Maybe Text),
    -- | "quadrant" - Quadrant
    addressRequestQuadrant :: !(Maybe Text),
    -- | "streetName" - Street name
    addressRequestStreetName :: !(Maybe Text),
    -- | "streetType" - Street type
    addressRequestStreetType :: !(Maybe Text),
    -- | "apartmentNumber" - Apartment/Condo/Unit number
    addressRequestApartmentNumber :: !(Maybe Text),
    -- | /Required/ "city" - City name
    addressRequestCity :: !(Text),
    -- | /Required/ "state" - State abbreviation
    addressRequestState :: !(Text),
    -- | "zip" - Zip code
    addressRequestZip :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON AddressRequest
instance A.FromJSON AddressRequest where
  parseJSON = A.withObject "AddressRequest" $ \o ->
    AddressRequest
      <$> (o .: "identifier")
      <*> (o .:? "houseNumber")
      <*> (o .:? "quadrant")
      <*> (o .:? "streetName")
      <*> (o .:? "streetType")
      <*> (o .:? "apartmentNumber")
      <*> (o .: "city")
      <*> (o .: "state")
      <*> (o .:? "zip")

-- | ToJSON AddressRequest
instance A.ToJSON AddressRequest where
  toJSON AddressRequest {..} =
    A.object
      [ "identifier" .= addressRequestIdentifier,
        "houseNumber" .= addressRequestHouseNumber,
        "quadrant" .= addressRequestQuadrant,
        "streetName" .= addressRequestStreetName,
        "streetType" .= addressRequestStreetType,
        "apartmentNumber" .= addressRequestApartmentNumber,
        "city" .= addressRequestCity,
        "state" .= addressRequestState,
        "zip" .= addressRequestZip
      ]

-- | Construct a value of type 'AddressRequest' (by applying it's required fields, if any)
mkAddressRequest ::
  -- | 'addressRequestIdentifier': Address type of the report subject
  Text ->
  -- | 'addressRequestCity': City name
  Text ->
  -- | 'addressRequestState': State abbreviation
  Text ->
  AddressRequest
mkAddressRequest addressRequestIdentifier addressRequestCity addressRequestState =
  AddressRequest
    { addressRequestIdentifier,
      addressRequestHouseNumber = Nothing,
      addressRequestQuadrant = Nothing,
      addressRequestStreetName = Nothing,
      addressRequestStreetType = Nothing,
      addressRequestApartmentNumber = Nothing,
      addressRequestCity,
      addressRequestState,
      addressRequestZip = Nothing
    }

-- ** AddressSourceOfAddress

-- | AddressSourceOfAddress
-- The source of address data
data AddressSourceOfAddress = AddressSourceOfAddress
  { -- | "code" - Code value
    addressSourceOfAddressCode :: !(Maybe Text),
    -- | "description" - Sources of address:   - C: EQUIFAX   - D: OTH/Sys-Sys   - T: AUT
    addressSourceOfAddressDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON AddressSourceOfAddress
instance A.FromJSON AddressSourceOfAddress where
  parseJSON = A.withObject "AddressSourceOfAddress" $ \o ->
    AddressSourceOfAddress
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON AddressSourceOfAddress
instance A.ToJSON AddressSourceOfAddress where
  toJSON AddressSourceOfAddress {..} =
    A.object
      [ "code" .= addressSourceOfAddressCode,
        "description" .= addressSourceOfAddressDescription
      ]

-- | Construct a value of type 'AddressSourceOfAddress' (by applying it's required fields, if any)
mkAddressSourceOfAddress ::
  AddressSourceOfAddress
mkAddressSourceOfAddress =
  AddressSourceOfAddress
    { addressSourceOfAddressCode = Nothing,
      addressSourceOfAddressDescription = Nothing
    }

-- ** AddressSourceOfTelephoneNumber

-- | AddressSourceOfTelephoneNumber
-- Source of Telephone data
data AddressSourceOfTelephoneNumber = AddressSourceOfTelephoneNumber
  { -- | "code" - Code value
    addressSourceOfTelephoneNumberCode :: !(Maybe Text),
    -- | "description" - Sources of telephone number:   - 1: Special Vendor        - 2: Equifax        - 3: OTH/Sys-Sys        - 4: Automated Update Indicator
    addressSourceOfTelephoneNumberDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON AddressSourceOfTelephoneNumber
instance A.FromJSON AddressSourceOfTelephoneNumber where
  parseJSON = A.withObject "AddressSourceOfTelephoneNumber" $ \o ->
    AddressSourceOfTelephoneNumber
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON AddressSourceOfTelephoneNumber
instance A.ToJSON AddressSourceOfTelephoneNumber where
  toJSON AddressSourceOfTelephoneNumber {..} =
    A.object
      [ "code" .= addressSourceOfTelephoneNumberCode,
        "description" .= addressSourceOfTelephoneNumberDescription
      ]

-- | Construct a value of type 'AddressSourceOfTelephoneNumber' (by applying it's required fields, if any)
mkAddressSourceOfTelephoneNumber ::
  AddressSourceOfTelephoneNumber
mkAddressSourceOfTelephoneNumber =
  AddressSourceOfTelephoneNumber
    { addressSourceOfTelephoneNumberCode = Nothing,
      addressSourceOfTelephoneNumberDescription = Nothing
    }

-- ** AlertContactAddress

-- | AlertContactAddress
-- Contact's address information
data AlertContactAddress = AlertContactAddress
  { -- | "addressLine1" - House number, street name &amp; street type
    alertContactAddressAddressLine1 :: !(Maybe Text),
    -- | "addressLine2" - Apartment, condo, suite, or unit number
    alertContactAddressAddressLine2 :: !(Maybe Text),
    -- | "cityName" - City name
    alertContactAddressCityName :: !(Maybe Text),
    -- | "stateAbbreviation" - State name&#39;s abbreviation
    alertContactAddressStateAbbreviation :: !(Maybe Text),
    -- | "zipCode" - Zip code
    alertContactAddressZipCode :: !(Maybe Text),
    -- | "countryCode" - Country code
    alertContactAddressCountryCode :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON AlertContactAddress
instance A.FromJSON AlertContactAddress where
  parseJSON = A.withObject "AlertContactAddress" $ \o ->
    AlertContactAddress
      <$> (o .:? "addressLine1")
      <*> (o .:? "addressLine2")
      <*> (o .:? "cityName")
      <*> (o .:? "stateAbbreviation")
      <*> (o .:? "zipCode")
      <*> (o .:? "countryCode")

-- | ToJSON AlertContactAddress
instance A.ToJSON AlertContactAddress where
  toJSON AlertContactAddress {..} =
    A.object
      [ "addressLine1" .= alertContactAddressAddressLine1,
        "addressLine2" .= alertContactAddressAddressLine2,
        "cityName" .= alertContactAddressCityName,
        "stateAbbreviation" .= alertContactAddressStateAbbreviation,
        "zipCode" .= alertContactAddressZipCode,
        "countryCode" .= alertContactAddressCountryCode
      ]

-- | Construct a value of type 'AlertContactAddress' (by applying it's required fields, if any)
mkAlertContactAddress ::
  AlertContactAddress
mkAlertContactAddress =
  AlertContactAddress
    { alertContactAddressAddressLine1 = Nothing,
      alertContactAddressAddressLine2 = Nothing,
      alertContactAddressCityName = Nothing,
      alertContactAddressStateAbbreviation = Nothing,
      alertContactAddressZipCode = Nothing,
      alertContactAddressCountryCode = Nothing
    }

-- ** Bankruptcy

-- | Bankruptcy
-- Details associated with bankruptcy
data Bankruptcy = Bankruptcy
  { -- | "customerNumber" - Court customer number
    bankruptcyCustomerNumber :: !(Maybe Text),
    -- | "type" - Type of bankruptcy: - B: Business - I: Individual
    bankruptcyType :: !(Maybe Text),
    -- | "filer" - How filed: - I: Individual - J: Joint - W: Spouse
    bankruptcyFiler :: !(Maybe Text),
    -- | "industryCode" - Industry code
    bankruptcyIndustryCode :: !(Maybe Text),
    -- | "currentIntentOrDispositionCode"
    bankruptcyCurrentIntentOrDispositionCode :: !(Maybe BankruptcyCurrentIntentOrDispositionCode),
    -- | "narrativeCodes"
    bankruptcyNarrativeCodes :: !(Maybe [A.Value]),
    -- | "rawNarrativeCodes" - Raw narrative codes included in the report
    bankruptcyRawNarrativeCodes :: !(Maybe [Text]),
    -- | "caseNumber" - Case number
    bankruptcyCaseNumber :: !(Maybe Text),
    -- | "dispositionDate" - Disposition Date
    bankruptcyDispositionDate :: !(Maybe Text),
    -- | "dateFiled" - Date Last Filed
    bankruptcyDateFiled :: !(Maybe Date),
    -- | "currentDispositionDate" - Contains the date of the final status of the case whether discharged or dismissed
    bankruptcyCurrentDispositionDate :: !(Maybe Date),
    -- | "verifiedDate" - Date of verification for any updates to the bankruptcy disposition according to court records.
    bankruptcyVerifiedDate :: !(Maybe Date),
    -- | "priorIntentOrDispositionCode"
    bankruptcyPriorIntentOrDispositionCode :: !(Maybe BankruptcyPriorIntentOrDispositionCode),
    -- | "dateReported" - Date the bankruptcy was reported to Equifax
    bankruptcyDateReported :: !(Maybe Date)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON Bankruptcy
instance A.FromJSON Bankruptcy where
  parseJSON = A.withObject "Bankruptcy" $ \o ->
    Bankruptcy
      <$> (o .:? "customerNumber")
      <*> (o .:? "type")
      <*> (o .:? "filer")
      <*> (o .:? "industryCode")
      <*> (o .:? "currentIntentOrDispositionCode")
      <*> (o .:? "narrativeCodes")
      <*> (o .:? "rawNarrativeCodes")
      <*> (o .:? "caseNumber")
      <*> (o .:? "dispositionDate")
      <*> (o .:? "dateFiled")
      <*> (o .:? "currentDispositionDate")
      <*> (o .:? "verifiedDate")
      <*> (o .:? "priorIntentOrDispositionCode")
      <*> (o .:? "dateReported")

-- | ToJSON Bankruptcy
instance A.ToJSON Bankruptcy where
  toJSON Bankruptcy {..} =
    A.object
      [ "customerNumber" .= bankruptcyCustomerNumber,
        "type" .= bankruptcyType,
        "filer" .= bankruptcyFiler,
        "industryCode" .= bankruptcyIndustryCode,
        "currentIntentOrDispositionCode" .= bankruptcyCurrentIntentOrDispositionCode,
        "narrativeCodes" .= bankruptcyNarrativeCodes,
        "rawNarrativeCodes" .= bankruptcyRawNarrativeCodes,
        "caseNumber" .= bankruptcyCaseNumber,
        "dispositionDate" .= bankruptcyDispositionDate,
        "dateFiled" .= bankruptcyDateFiled,
        "currentDispositionDate" .= bankruptcyCurrentDispositionDate,
        "verifiedDate" .= bankruptcyVerifiedDate,
        "priorIntentOrDispositionCode" .= bankruptcyPriorIntentOrDispositionCode,
        "dateReported" .= bankruptcyDateReported
      ]

-- | Construct a value of type 'Bankruptcy' (by applying it's required fields, if any)
mkBankruptcy ::
  Bankruptcy
mkBankruptcy =
  Bankruptcy
    { bankruptcyCustomerNumber = Nothing,
      bankruptcyType = Nothing,
      bankruptcyFiler = Nothing,
      bankruptcyIndustryCode = Nothing,
      bankruptcyCurrentIntentOrDispositionCode = Nothing,
      bankruptcyNarrativeCodes = Nothing,
      bankruptcyRawNarrativeCodes = Nothing,
      bankruptcyCaseNumber = Nothing,
      bankruptcyDispositionDate = Nothing,
      bankruptcyDateFiled = Nothing,
      bankruptcyCurrentDispositionDate = Nothing,
      bankruptcyVerifiedDate = Nothing,
      bankruptcyPriorIntentOrDispositionCode = Nothing,
      bankruptcyDateReported = Nothing
    }

-- ** BankruptcyCurrentIntentOrDispositionCode

-- | BankruptcyCurrentIntentOrDispositionCode
-- Indicates the chapter type and the current status of the bankruptcy
data BankruptcyCurrentIntentOrDispositionCode = BankruptcyCurrentIntentOrDispositionCode
  { -- | "code" - Code value
    bankruptcyCurrentIntentOrDispositionCodeCode :: !(Maybe Text),
    -- | "description" - Chapter types and current status: - A: DISCHARGED CH-7 The amount owed was included in the “order of relief.” Debtor no longer liable for debts listed in “order of relief.” - C: CH-13 FILED Adjustment of debts of an individual with consistent income. Debtor petitions the court for permission to pay a percent of his income over a period of years until debt is satisfied (usually not over three years). - D: CH-11 FILED Business Reorganization. Business debtor is granted relief from payment under terms of initial contract reorganization period. - E: DISMSD/CLSD CH11 Petition for reorganization of debt has been withdrawn by debtor or honored - subject liable for debts. - F: DISCHARGED CH-11 Petition by debtor for complete relief of all debts is honored. Debtor no longer liable for debts listed in “order of relief.” - G: CH-12 FILED The Chapter 12 plan applies only to family farmers who have regular annual incomes sufficient to make payments under a proposed plan. Payment under the plan must be completed in three years. In certain situations, payment of no longer than five years is permitted. - H: DISCHARGED CH-12 A discharge is entered after the completion of all payments under the plan. However, certain payments on some long term claims, which are due after the last payment under the plan, will continue after the date of discharge. - I: INVOLUNTARY CH-7 The debtor is forced into bankruptcy by the petition of a sufficient number of his creditors. - J: DISMSD/CLSD CH12 The court may dismiss the plan or terminate the plan for various reasons, including unreasonable delays, gross mismanagement, non payment of any fees and charges, failure to file a plan in a timely manner, failure to make timely payments required by a confirmed plan, denial of confirmation or request made for additional time, and so forth. - K: DISMSD/CLSD CH13 The petition by debtor for permission to pay a percent of his income over a period of years has been withdrawn by debtor or has not been followed by debtor. Debtor remains liable for his debts under initial terms of the contract. - L: DISCHARGED CH-13 Plan by debtor to pay percent of income over a period of years has been completed. Debtor no longer liable for debts listed in payment plan. - M: DISMSD/CLSD CH7 The bankruptcy petition has been withdrawn by or has not been honored by the court. Subject remains liable for his debts under the terms of the initial contract. - V: VOLUNTARY CH-7 Bankruptcy proceeding is initiated by the debtor&#39;s own petition to be declared bankrupt and have benefit of the law.
    bankruptcyCurrentIntentOrDispositionCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON BankruptcyCurrentIntentOrDispositionCode
instance A.FromJSON BankruptcyCurrentIntentOrDispositionCode where
  parseJSON = A.withObject "BankruptcyCurrentIntentOrDispositionCode" $ \o ->
    BankruptcyCurrentIntentOrDispositionCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON BankruptcyCurrentIntentOrDispositionCode
instance A.ToJSON BankruptcyCurrentIntentOrDispositionCode where
  toJSON BankruptcyCurrentIntentOrDispositionCode {..} =
    A.object
      [ "code" .= bankruptcyCurrentIntentOrDispositionCodeCode,
        "description" .= bankruptcyCurrentIntentOrDispositionCodeDescription
      ]

-- | Construct a value of type 'BankruptcyCurrentIntentOrDispositionCode' (by applying it's required fields, if any)
mkBankruptcyCurrentIntentOrDispositionCode ::
  BankruptcyCurrentIntentOrDispositionCode
mkBankruptcyCurrentIntentOrDispositionCode =
  BankruptcyCurrentIntentOrDispositionCode
    { bankruptcyCurrentIntentOrDispositionCodeCode = Nothing,
      bankruptcyCurrentIntentOrDispositionCodeDescription = Nothing
    }

-- ** BankruptcyPriorIntentOrDispositionCode

-- | BankruptcyPriorIntentOrDispositionCode
-- Chapter type and status of the bankruptcy just prior to that in the Current Intent/Disposition Code field
data BankruptcyPriorIntentOrDispositionCode = BankruptcyPriorIntentOrDispositionCode
  { -- | "code" - Code value
    bankruptcyPriorIntentOrDispositionCodeCode :: !(Maybe Text),
    -- | "description"
    bankruptcyPriorIntentOrDispositionCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON BankruptcyPriorIntentOrDispositionCode
instance A.FromJSON BankruptcyPriorIntentOrDispositionCode where
  parseJSON = A.withObject "BankruptcyPriorIntentOrDispositionCode" $ \o ->
    BankruptcyPriorIntentOrDispositionCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON BankruptcyPriorIntentOrDispositionCode
instance A.ToJSON BankruptcyPriorIntentOrDispositionCode where
  toJSON BankruptcyPriorIntentOrDispositionCode {..} =
    A.object
      [ "code" .= bankruptcyPriorIntentOrDispositionCodeCode,
        "description" .= bankruptcyPriorIntentOrDispositionCodeDescription
      ]

-- | Construct a value of type 'BankruptcyPriorIntentOrDispositionCode' (by applying it's required fields, if any)
mkBankruptcyPriorIntentOrDispositionCode ::
  BankruptcyPriorIntentOrDispositionCode
mkBankruptcyPriorIntentOrDispositionCode =
  BankruptcyPriorIntentOrDispositionCode
    { bankruptcyPriorIntentOrDispositionCodeCode = Nothing,
      bankruptcyPriorIntentOrDispositionCodeDescription = Nothing
    }

-- ** Collection

-- | Collection
-- Provides information about any collection item
data Collection = Collection
  { -- | "industryCode" - Industry code
    collectionIndustryCode :: !(Maybe Text),
    -- | "customerNumber" - Collection agency customer number
    collectionCustomerNumber :: !(Maybe Text),
    -- | "clientNameOrNumber" - Original creditor name/number
    collectionClientNameOrNumber :: !(Maybe Text),
    -- | "statusCode"
    collectionStatusCode :: !(Maybe CollectionStatusCode),
    -- | "narrativeCodes"
    collectionNarrativeCodes :: !(Maybe [A.Value]),
    -- | "rawNarrativeCodes" - Raw narrative codes included in the report
    collectionRawNarrativeCodes :: !(Maybe [Text]),
    -- | "indicator" - Automated Update Indicator
    collectionIndicator :: !(Maybe Text),
    -- | "dateReported" - Date the collection was reported to Equifax
    collectionDateReported :: !(Maybe Date),
    -- | "dateAssigned" - Date Assigned
    collectionDateAssigned :: !(Maybe Date),
    -- | "originalAmount" - Original amount in USD
    collectionOriginalAmount :: !(Maybe Text),
    -- | "statusDate" - Current Status Date
    collectionStatusDate :: !(Maybe Date),
    -- | "balance" - Balance in USD
    collectionBalance :: !(Maybe Text),
    -- | "lastPaymentDate" - Date of most recent payment
    collectionLastPaymentDate :: !(Maybe Date),
    -- | "dateOfFirstDelinquency" - Indicates the date of first delinquency as reported by the original creditor
    collectionDateOfFirstDelinquency :: !(Maybe Date),
    -- | "accountNumber" - Account number
    collectionAccountNumber :: !(Maybe Text),
    -- | "accountDesignatorCode"
    collectionAccountDesignatorCode :: !(Maybe AccountDesignatorCode),
    -- | "creditorClassificationCode"
    collectionCreditorClassificationCode :: !(Maybe CreditorClassificationCode)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON Collection
instance A.FromJSON Collection where
  parseJSON = A.withObject "Collection" $ \o ->
    Collection
      <$> (o .:? "industryCode")
      <*> (o .:? "customerNumber")
      <*> (o .:? "clientNameOrNumber")
      <*> (o .:? "statusCode")
      <*> (o .:? "narrativeCodes")
      <*> (o .:? "rawNarrativeCodes")
      <*> (o .:? "indicator")
      <*> (o .:? "dateReported")
      <*> (o .:? "dateAssigned")
      <*> (o .:? "originalAmount")
      <*> (o .:? "statusDate")
      <*> (o .:? "balance")
      <*> (o .:? "lastPaymentDate")
      <*> (o .:? "dateOfFirstDelinquency")
      <*> (o .:? "accountNumber")
      <*> (o .:? "accountDesignatorCode")
      <*> (o .:? "creditorClassificationCode")

-- | ToJSON Collection
instance A.ToJSON Collection where
  toJSON Collection {..} =
    A.object
      [ "industryCode" .= collectionIndustryCode,
        "customerNumber" .= collectionCustomerNumber,
        "clientNameOrNumber" .= collectionClientNameOrNumber,
        "statusCode" .= collectionStatusCode,
        "narrativeCodes" .= collectionNarrativeCodes,
        "rawNarrativeCodes" .= collectionRawNarrativeCodes,
        "indicator" .= collectionIndicator,
        "dateReported" .= collectionDateReported,
        "dateAssigned" .= collectionDateAssigned,
        "originalAmount" .= collectionOriginalAmount,
        "statusDate" .= collectionStatusDate,
        "balance" .= collectionBalance,
        "lastPaymentDate" .= collectionLastPaymentDate,
        "dateOfFirstDelinquency" .= collectionDateOfFirstDelinquency,
        "accountNumber" .= collectionAccountNumber,
        "accountDesignatorCode" .= collectionAccountDesignatorCode,
        "creditorClassificationCode" .= collectionCreditorClassificationCode
      ]

-- | Construct a value of type 'Collection' (by applying it's required fields, if any)
mkCollection ::
  Collection
mkCollection =
  Collection
    { collectionIndustryCode = Nothing,
      collectionCustomerNumber = Nothing,
      collectionClientNameOrNumber = Nothing,
      collectionStatusCode = Nothing,
      collectionNarrativeCodes = Nothing,
      collectionRawNarrativeCodes = Nothing,
      collectionIndicator = Nothing,
      collectionDateReported = Nothing,
      collectionDateAssigned = Nothing,
      collectionOriginalAmount = Nothing,
      collectionStatusDate = Nothing,
      collectionBalance = Nothing,
      collectionLastPaymentDate = Nothing,
      collectionDateOfFirstDelinquency = Nothing,
      collectionAccountNumber = Nothing,
      collectionAccountDesignatorCode = Nothing,
      collectionCreditorClassificationCode = Nothing
    }

-- ** CollectionStatusCode

-- | CollectionStatusCode
-- Current status of the collection
data CollectionStatusCode = CollectionStatusCode
  { -- | "code" - Code value
    collectionStatusCodeCode :: !(Maybe Text),
    -- | "description" - - D: UNPAID Subject has not satisfied debt. - F: FINANCIAL COUNSELOR Identifies that a subject is receiving professional guidance on financial matters, and is under a payment plan. - J: ADJUSTMENT Settlement of a debt in which full payment is not made or when the amount involved is not certain. - M: WAGE EARNER Chapter 13 (Debtors with regular income). This chapter allows an individual to reorganize finances and protect assets while a court approved repayment plan is in effect. - N: NEW LISTING Collection account which has just been turned over for collection of past due debt. - P: PAID Subject has satisfied debt. - S: ACCOUNT DISPUTED Merchant and consumer disagree on various particulars regarding merchandise, terms of agreement or amount owing. - T: PAYMENT Subject submits portion of money owing. - U: STATUS UNKNOWN Indicates status is not verified. - X: CHECKED As of the date reported, the balance was not paid and the account was verified at the request of the consumer via a dispute. - Z: IN BANKRUPTCY The legal process under the Federal Bankruptcy Act by which debtors are granted some form of relief from their financial obligations.
    collectionStatusCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CollectionStatusCode
instance A.FromJSON CollectionStatusCode where
  parseJSON = A.withObject "CollectionStatusCode" $ \o ->
    CollectionStatusCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON CollectionStatusCode
instance A.ToJSON CollectionStatusCode where
  toJSON CollectionStatusCode {..} =
    A.object
      [ "code" .= collectionStatusCodeCode,
        "description" .= collectionStatusCodeDescription
      ]

-- | Construct a value of type 'CollectionStatusCode' (by applying it's required fields, if any)
mkCollectionStatusCode ::
  CollectionStatusCode
mkCollectionStatusCode =
  CollectionStatusCode
    { collectionStatusCodeCode = Nothing,
      collectionStatusCodeDescription = Nothing
    }

-- ** ConsumerCreditReport

-- | ConsumerCreditReport
data ConsumerCreditReport = ConsumerCreditReport
  { -- | "equifaxUSConsumerCreditReport"
    consumerCreditReportEquifaxUsConsumerCreditReport :: !(Maybe [ConsumerCreditReportEquifaxUSConsumerCreditReport])
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReport
instance A.FromJSON ConsumerCreditReport where
  parseJSON = A.withObject "ConsumerCreditReport" $ \o ->
    ConsumerCreditReport
      <$> (o .:? "equifaxUSConsumerCreditReport")

-- | ToJSON ConsumerCreditReport
instance A.ToJSON ConsumerCreditReport where
  toJSON ConsumerCreditReport {..} =
    A.object
      [ "equifaxUSConsumerCreditReport" .= consumerCreditReportEquifaxUsConsumerCreditReport
      ]

-- | Construct a value of type 'ConsumerCreditReport' (by applying it's required fields, if any)
mkConsumerCreditReport ::
  ConsumerCreditReport
mkConsumerCreditReport =
  ConsumerCreditReport
    { consumerCreditReportEquifaxUsConsumerCreditReport = Nothing
    }

-- ** ConsumerCreditReportAlertContacts

-- | ConsumerCreditReportAlertContacts
data ConsumerCreditReportAlertContacts = ConsumerCreditReportAlertContacts
  { -- | "alertType"
    consumerCreditReportAlertContactsAlertType :: !(Maybe ConsumerCreditReportAlertType),
    -- | "dateReported" - Date of reported alert
    consumerCreditReportAlertContactsDateReported :: !(Maybe Date),
    -- | "effectiveDate" - Date the contact info became effective
    consumerCreditReportAlertContactsEffectiveDate :: !(Maybe Date),
    -- | "status" -  - N: No Contact Information Provided
    consumerCreditReportAlertContactsStatus :: !(Maybe Text),
    -- | "telephoneNumbers"
    consumerCreditReportAlertContactsTelephoneNumbers :: !(Maybe [ConsumerCreditReportTelephoneNumbers]),
    -- | "address"
    consumerCreditReportAlertContactsAddress :: !(Maybe AlertContactAddress),
    -- | "additionalInformation" - Free text with extra info regarding the contact
    consumerCreditReportAlertContactsAdditionalInformation :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportAlertContacts
instance A.FromJSON ConsumerCreditReportAlertContacts where
  parseJSON = A.withObject "ConsumerCreditReportAlertContacts" $ \o ->
    ConsumerCreditReportAlertContacts
      <$> (o .:? "alertType")
      <*> (o .:? "dateReported")
      <*> (o .:? "effectiveDate")
      <*> (o .:? "status")
      <*> (o .:? "telephoneNumbers")
      <*> (o .:? "address")
      <*> (o .:? "additionalInformation")

-- | ToJSON ConsumerCreditReportAlertContacts
instance A.ToJSON ConsumerCreditReportAlertContacts where
  toJSON ConsumerCreditReportAlertContacts {..} =
    A.object
      [ "alertType" .= consumerCreditReportAlertContactsAlertType,
        "dateReported" .= consumerCreditReportAlertContactsDateReported,
        "effectiveDate" .= consumerCreditReportAlertContactsEffectiveDate,
        "status" .= consumerCreditReportAlertContactsStatus,
        "telephoneNumbers" .= consumerCreditReportAlertContactsTelephoneNumbers,
        "address" .= consumerCreditReportAlertContactsAddress,
        "additionalInformation" .= consumerCreditReportAlertContactsAdditionalInformation
      ]

-- | Construct a value of type 'ConsumerCreditReportAlertContacts' (by applying it's required fields, if any)
mkConsumerCreditReportAlertContacts ::
  ConsumerCreditReportAlertContacts
mkConsumerCreditReportAlertContacts =
  ConsumerCreditReportAlertContacts
    { consumerCreditReportAlertContactsAlertType = Nothing,
      consumerCreditReportAlertContactsDateReported = Nothing,
      consumerCreditReportAlertContactsEffectiveDate = Nothing,
      consumerCreditReportAlertContactsStatus = Nothing,
      consumerCreditReportAlertContactsTelephoneNumbers = Nothing,
      consumerCreditReportAlertContactsAddress = Nothing,
      consumerCreditReportAlertContactsAdditionalInformation = Nothing
    }

-- ** ConsumerCreditReportAlertType

-- | ConsumerCreditReportAlertType
-- Types of reported alerts
data ConsumerCreditReportAlertType = ConsumerCreditReportAlertType
  { -- | "code" - Code value
    consumerCreditReportAlertTypeCode :: !(Maybe Text),
    -- | "description" -  - E: Extended Fraud - L: Initial Fraud - M: Military
    consumerCreditReportAlertTypeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportAlertType
instance A.FromJSON ConsumerCreditReportAlertType where
  parseJSON = A.withObject "ConsumerCreditReportAlertType" $ \o ->
    ConsumerCreditReportAlertType
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportAlertType
instance A.ToJSON ConsumerCreditReportAlertType where
  toJSON ConsumerCreditReportAlertType {..} =
    A.object
      [ "code" .= consumerCreditReportAlertTypeCode,
        "description" .= consumerCreditReportAlertTypeDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportAlertType' (by applying it's required fields, if any)
mkConsumerCreditReportAlertType ::
  ConsumerCreditReportAlertType
mkConsumerCreditReportAlertType =
  ConsumerCreditReportAlertType
    { consumerCreditReportAlertTypeCode = Nothing,
      consumerCreditReportAlertTypeDescription = Nothing
    }

-- ** ConsumerCreditReportAlternateDataSources

-- | ConsumerCreditReportAlternateDataSources
-- Contains the output data for the Optional Alternate Data Sources. These Alternate Data Sources are: - Military Lending Covered Borrower Status - North American Link - FraudIQ® Synthetic ID Alert - Impacted Data Indicator
data ConsumerCreditReportAlternateDataSources = ConsumerCreditReportAlternateDataSources
  { -- | "alternateDataSourceErrorMessage" - It&#39;s returned whenever it encounters a communication problem or an error with the request of an Alternate Data Source. A separate \&quot;DERR\&quot; element will be returned per Data Source.  DERR: Alternate Data Source Message Response   CODE DESCRIPTION:   - 2001: COMMUNICATION ERROR   - 2002: COMMUNICATION ERROR   - 2003: COMMUNICATION ERROR   - 2004: COMMUNICATION ERROR   - 2005: COMMUNICATION ERROR   - 2006: COMMUNICATION ERROR   - 2007: COMMUNICATION ERROR   - 2008: COMMUNICATION ERROR   - 2009: COMMUNICATION ERROR   - 2010: COMMUNICATION ERROR   - 2011: COMMUNICATION ERROR   - 2012: COMMUNICATION ERROR   - 2013: COMMUNICATION ERROR   - 2014: COMMUNICATION ERROR   - 2015: COMMUNICATION ERROR   - 2016: COMMUNICATION ERROR   - 2017: COMMUNICATION ERROR   - 2018: COMMUNICATION ERROR   - 2019: COMMUNICATION ERROR   - 2020: COMMUNICATION ERROR   - 2021: COMMUNICATION ERROR   - 2022: COMMUNICATION ERROR   - 2023: COMMUNICATION ERROR   - 2024: COMMUNICATION ERROR   - 2025: COMMUNICATION ERROR
    consumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage :: !(Maybe [ConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage]),
    -- | "militaryLendingCoveredBorrower"
    consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower :: !(Maybe ConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower),
    -- | "northAmericanLink"
    consumerCreditReportAlternateDataSourcesNorthAmericanLink :: !(Maybe ConsumerCreditReportAlternateDataSourcesNorthAmericanLink),
    -- | "fraudIQSyntheticIDAlerts"
    consumerCreditReportAlternateDataSourcesFraudIqSyntheticIdAlerts :: !(Maybe ConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts),
    -- | "impactedDataIndicator"
    consumerCreditReportAlternateDataSourcesImpactedDataIndicator :: !(Maybe ConsumerCreditReportAlternateDataSourcesImpactedDataIndicator)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportAlternateDataSources
instance A.FromJSON ConsumerCreditReportAlternateDataSources where
  parseJSON = A.withObject "ConsumerCreditReportAlternateDataSources" $ \o ->
    ConsumerCreditReportAlternateDataSources
      <$> (o .:? "alternateDataSourceErrorMessage")
      <*> (o .:? "militaryLendingCoveredBorrower")
      <*> (o .:? "northAmericanLink")
      <*> (o .:? "fraudIQSyntheticIDAlerts")
      <*> (o .:? "impactedDataIndicator")

-- | ToJSON ConsumerCreditReportAlternateDataSources
instance A.ToJSON ConsumerCreditReportAlternateDataSources where
  toJSON ConsumerCreditReportAlternateDataSources {..} =
    A.object
      [ "alternateDataSourceErrorMessage" .= consumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage,
        "militaryLendingCoveredBorrower" .= consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower,
        "northAmericanLink" .= consumerCreditReportAlternateDataSourcesNorthAmericanLink,
        "fraudIQSyntheticIDAlerts" .= consumerCreditReportAlternateDataSourcesFraudIqSyntheticIdAlerts,
        "impactedDataIndicator" .= consumerCreditReportAlternateDataSourcesImpactedDataIndicator
      ]

-- | Construct a value of type 'ConsumerCreditReportAlternateDataSources' (by applying it's required fields, if any)
mkConsumerCreditReportAlternateDataSources ::
  ConsumerCreditReportAlternateDataSources
mkConsumerCreditReportAlternateDataSources =
  ConsumerCreditReportAlternateDataSources
    { consumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage = Nothing,
      consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower = Nothing,
      consumerCreditReportAlternateDataSourcesNorthAmericanLink = Nothing,
      consumerCreditReportAlternateDataSourcesFraudIqSyntheticIdAlerts = Nothing,
      consumerCreditReportAlternateDataSourcesImpactedDataIndicator = Nothing
    }

-- ** ConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode

-- | ConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode
data ConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode = ConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode
  { -- | "code" - Code value
    consumerCreditReportAlternateDataSourcesAlternateDataSourceCodeCode :: !(Maybe Text),
    -- | "description" - Description for the given code
    consumerCreditReportAlternateDataSourcesAlternateDataSourceCodeDescription :: !(Maybe Text),
    -- | "errorCodes" - Container for all the errors returned by the Alternate Data Sources
    consumerCreditReportAlternateDataSourcesAlternateDataSourceCodeErrorCodes :: !(Maybe [ConsumerCreditReportAlternateDataSourcesErrorCodes])
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode
instance A.FromJSON ConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode where
  parseJSON = A.withObject "ConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode" $ \o ->
    ConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode
      <$> (o .:? "code")
      <*> (o .:? "description")
      <*> (o .:? "errorCodes")

-- | ToJSON ConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode
instance A.ToJSON ConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode where
  toJSON ConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode {..} =
    A.object
      [ "code" .= consumerCreditReportAlternateDataSourcesAlternateDataSourceCodeCode,
        "description" .= consumerCreditReportAlternateDataSourcesAlternateDataSourceCodeDescription,
        "errorCodes" .= consumerCreditReportAlternateDataSourcesAlternateDataSourceCodeErrorCodes
      ]

-- | Construct a value of type 'ConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode' (by applying it's required fields, if any)
mkConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode ::
  ConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode
mkConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode =
  ConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode
    { consumerCreditReportAlternateDataSourcesAlternateDataSourceCodeCode = Nothing,
      consumerCreditReportAlternateDataSourcesAlternateDataSourceCodeDescription = Nothing,
      consumerCreditReportAlternateDataSourcesAlternateDataSourceCodeErrorCodes = Nothing
    }

-- ** ConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage

-- | ConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage
-- Returned if an error occurs
data ConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage = ConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage
  { -- | "customerReferenceNumber" - This field will return the same value provided in the request
    consumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessageCustomerReferenceNumber :: !(Maybe Text),
    -- | "customerNumber" - This field returns the same value provided in the request
    consumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessageCustomerNumber :: !(Maybe Text),
    -- | "errorType"
    consumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessageErrorType :: !(Maybe Text),
    -- | "alternateDataSourceCode"
    consumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessageAlternateDataSourceCode :: !(Maybe [ConsumerCreditReportAlternateDataSourcesAlternateDataSourceCode])
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage
instance A.FromJSON ConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage where
  parseJSON = A.withObject "ConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage" $ \o ->
    ConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage
      <$> (o .:? "customerReferenceNumber")
      <*> (o .:? "customerNumber")
      <*> (o .:? "errorType")
      <*> (o .:? "alternateDataSourceCode")

-- | ToJSON ConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage
instance A.ToJSON ConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage where
  toJSON ConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage {..} =
    A.object
      [ "customerReferenceNumber" .= consumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessageCustomerReferenceNumber,
        "customerNumber" .= consumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessageCustomerNumber,
        "errorType" .= consumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessageErrorType,
        "alternateDataSourceCode" .= consumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessageAlternateDataSourceCode
      ]

-- | Construct a value of type 'ConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage' (by applying it's required fields, if any)
mkConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage ::
  ConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage
mkConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage =
  ConsumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessage
    { consumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessageCustomerReferenceNumber = Nothing,
      consumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessageCustomerNumber = Nothing,
      consumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessageErrorType = Nothing,
      consumerCreditReportAlternateDataSourcesAlternateDataSourceErrorMessageAlternateDataSourceCode = Nothing
    }

-- ** ConsumerCreditReportAlternateDataSourcesErrorCodes

-- | ConsumerCreditReportAlternateDataSourcesErrorCodes
-- Describes the error
data ConsumerCreditReportAlternateDataSourcesErrorCodes = ConsumerCreditReportAlternateDataSourcesErrorCodes
  { -- | "verbiage" - Verbiage returned for error code
    consumerCreditReportAlternateDataSourcesErrorCodesVerbiage :: !(Maybe Text),
    -- | "errorText" - Error description
    consumerCreditReportAlternateDataSourcesErrorCodesErrorText :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportAlternateDataSourcesErrorCodes
instance A.FromJSON ConsumerCreditReportAlternateDataSourcesErrorCodes where
  parseJSON = A.withObject "ConsumerCreditReportAlternateDataSourcesErrorCodes" $ \o ->
    ConsumerCreditReportAlternateDataSourcesErrorCodes
      <$> (o .:? "verbiage")
      <*> (o .:? "errorText")

-- | ToJSON ConsumerCreditReportAlternateDataSourcesErrorCodes
instance A.ToJSON ConsumerCreditReportAlternateDataSourcesErrorCodes where
  toJSON ConsumerCreditReportAlternateDataSourcesErrorCodes {..} =
    A.object
      [ "verbiage" .= consumerCreditReportAlternateDataSourcesErrorCodesVerbiage,
        "errorText" .= consumerCreditReportAlternateDataSourcesErrorCodesErrorText
      ]

-- | Construct a value of type 'ConsumerCreditReportAlternateDataSourcesErrorCodes' (by applying it's required fields, if any)
mkConsumerCreditReportAlternateDataSourcesErrorCodes ::
  ConsumerCreditReportAlternateDataSourcesErrorCodes
mkConsumerCreditReportAlternateDataSourcesErrorCodes =
  ConsumerCreditReportAlternateDataSourcesErrorCodes
    { consumerCreditReportAlternateDataSourcesErrorCodesVerbiage = Nothing,
      consumerCreditReportAlternateDataSourcesErrorCodesErrorText = Nothing
    }

-- ** ConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts

-- | ConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts
-- FraudIQ Synthetic ID Alerts provide real‐time alerts that help determine if the identity presented is real or synthetic
data ConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts = ConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts
  { -- | "nonRegulatedIdentifier" - \\&#39;NR\\&#39; Non Regulated Data Source
    consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsNonRegulatedIdentifier :: !(Maybe Text),
    -- | "hitNohitIndicator" - If there was a responce back from the data source or not
    consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsHitNohitIndicator :: !(Maybe Text),
    -- | "disclaimer" - DISCLAIMER:[SYNTHETIC ID ALERT]  Indicator is for identity fraud risk alert purposes only and is not to be used for determining an individual’s eligibility for any credit or any other FCRA permissible purpose. Client shall use the [SYNTHETIC ID ALERT]  exclusively within Client’s own organization for the purpose of identity fraud prevention.  Accordingly, Client will not use an alert or warning message from the [SYNTHETIC ID ALERT] system in its decision-making process for denying credit, but will use the message as an indication that the consumer&#39;s identity and personally identifiable information should be independently verified to form a reasonable belief that it knows the true identity of the consumer. Client understands that the information supplied by [SYNTHETIC ID ALERT] may or may not apply to the consumer who has applied to Client for credit, service, dealings, or other financial transactions. Client also understands and agrees that data from the [SYNTHETIC ID ALERT] system is proprietary to Equifax and shall not be used as a component of any database or file built or maintained by Client. The use of such data shall be limited to the specific transaction for which the [SYNTHETIC ID ALERT] message is provided. Equifax may, by written notice to Client, immediately terminate the Client’s agreement for service or suspend the [SYNTHETIC ID ALERT] service if Equifax has a reasonable belief that Client has violated the terms of this disclaimer or the agreement for service.
    consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsDisclaimer :: !(Maybe Text),
    -- | "finalAssessmentFlag" - Final Synthetic ID Alert assessment will be Y if either Authorized User Velocity (AUV) Flag or ID Discrepancy Flag are Y
    consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsFinalAssessmentFlag :: !(Maybe Text),
    -- | "authorizedUserVelocityFlag" - Flag will be Y if combination of Number Authorized users &amp; Number Terminated trades meets the defined criteria for the AUV Flag
    consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsAuthorizedUserVelocityFlag :: !(Maybe Text),
    -- | "idDiscrepancyFlag" - Flag will be Y if it meets the defined criteria for the current Identity discrepancy attributes (based on patterns exhibited by synthetic fraudsters and identity mismatches between authorized users and primary account holders like count of last name mismatches, etc)
    consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsIdDiscrepancyFlag :: !(Maybe Text),
    -- | "numberOfAuthorizedUsers" - Count of active Authorized Users potentially associated with consumer
    consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsNumberOfAuthorizedUsers :: !(Maybe Text),
    -- | "numberOfTerminatedUsers" - Count of Terminated Trades potentially associated with consumer
    consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsNumberOfTerminatedUsers :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts
instance A.FromJSON ConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts where
  parseJSON = A.withObject "ConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts" $ \o ->
    ConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts
      <$> (o .:? "nonRegulatedIdentifier")
      <*> (o .:? "hitNohitIndicator")
      <*> (o .:? "disclaimer")
      <*> (o .:? "finalAssessmentFlag")
      <*> (o .:? "authorizedUserVelocityFlag")
      <*> (o .:? "idDiscrepancyFlag")
      <*> (o .:? "numberOfAuthorizedUsers")
      <*> (o .:? "numberOfTerminatedUsers")

-- | ToJSON ConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts
instance A.ToJSON ConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts where
  toJSON ConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts {..} =
    A.object
      [ "nonRegulatedIdentifier" .= consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsNonRegulatedIdentifier,
        "hitNohitIndicator" .= consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsHitNohitIndicator,
        "disclaimer" .= consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsDisclaimer,
        "finalAssessmentFlag" .= consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsFinalAssessmentFlag,
        "authorizedUserVelocityFlag" .= consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsAuthorizedUserVelocityFlag,
        "idDiscrepancyFlag" .= consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsIdDiscrepancyFlag,
        "numberOfAuthorizedUsers" .= consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsNumberOfAuthorizedUsers,
        "numberOfTerminatedUsers" .= consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsNumberOfTerminatedUsers
      ]

-- | Construct a value of type 'ConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts' (by applying it's required fields, if any)
mkConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts ::
  ConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts
mkConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts =
  ConsumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlerts
    { consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsNonRegulatedIdentifier = Nothing,
      consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsHitNohitIndicator = Nothing,
      consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsDisclaimer = Nothing,
      consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsFinalAssessmentFlag = Nothing,
      consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsAuthorizedUserVelocityFlag = Nothing,
      consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsIdDiscrepancyFlag = Nothing,
      consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsNumberOfAuthorizedUsers = Nothing,
      consumerCreditReportAlternateDataSourcesFraudIQSyntheticIDAlertsNumberOfTerminatedUsers = Nothing
    }

-- ** ConsumerCreditReportAlternateDataSourcesImpactedDataIndicator

-- | ConsumerCreditReportAlternateDataSourcesImpactedDataIndicator
-- Indicates if the consumer was impacted by the Equifax security incident
data ConsumerCreditReportAlternateDataSourcesImpactedDataIndicator = ConsumerCreditReportAlternateDataSourcesImpactedDataIndicator
  { -- | "nonRegulatedIdentifier" - \\&#39;NR\\&#39; Non Regulated Data Source
    consumerCreditReportAlternateDataSourcesImpactedDataIndicatorNonRegulatedIdentifier :: !(Maybe Text),
    -- | "hitNohitIndicator" - If there was a responce back from the data source or not
    consumerCreditReportAlternateDataSourcesImpactedDataIndicatorHitNohitIndicator :: !(Maybe Text),
    -- | "disclaimer" - DISCLAIMER: THE IMPACTED DATA INDICATOR IS A FRAUD TOOL AND INFORMATION SERVICE BASED ON INFORMATION THAT WAS NOT COLLECTED, IN WHOLE OR IN PART, FOR THE PURPOSE OF SERVING AS A FACTOR IN ESTABLISHING A CONSUMER’S ELIGIBILITY FOR CREDIT OR INSURANCE TO BE USED PRIMARILY FOR PERSONAL, FAMILY OR HOUSEHOLD PURPOSES; EMPLOYMENT PURPOSES; OR ANY OTHER PURPOSE AUTHORIZED UNDER THE FCRA. ACCORDINGLY, CLIENT WILL NOT USE IMPACTED DATA INDICATOR (I)AS PART OF ITS DECISIONMAKING PROCESS FOR DETERMINING THE CONSUMER’S ELIGIBILITY FOR CREDIT OR ANY OTHER FCRA PERMISSIBLE PURPOSE OR (II) IN ANY MANNER FOR THE PURPOSE OF TAKING “ADVERSE ACTION” AGAINST A CONSUMER, AS DEFINED IN THE EQUAL CREDIT OPPORTUNITY ACT AND REGULATION B. CLIENT MAY ONLY USE THE IMPACTED DATA INDICATOR,‘FLAGS’, INDICATORS OR OTHER WARNING MESSAGE FROM THE IMPACTED DATA INDICATOR AS AN INDICATION THAT THE CONSUMER’S APPLICATION INFORMATION SHOULD BE INDEPENDENTLY VERIFIED PRIOR TO A CREDIT DECISION OR ANY OTHER PURPOSE AUTHORIZED UNDER THE FCRA. DUE TO THE METHOD OF MATCHING THE IMPACT FILE TO THE INPUT LIST, THE PRESENCE OF A FLAG (OR LACK OF FLAG) DOES NOT NECESSARILY MEAN A CONSUMER’S INFORMATION WAS IMPACTED (OR NOT IMPACTED).
    consumerCreditReportAlternateDataSourcesImpactedDataIndicatorDisclaimer :: !(Maybe Text),
    -- | "nameLikelyImpacted" - Indicates id the name information was impacted.  - Y: Likely impacted - N: Unlikely impacted - U: Impact cannot be determined
    consumerCreditReportAlternateDataSourcesImpactedDataIndicatorNameLikelyImpacted :: !(Maybe Text),
    -- | "addressLikelyImpacted" - Indicates id the address information was impacted.  - Y: Likely impacted - N: Unlikely impacted - U: Impact cannot be determined
    consumerCreditReportAlternateDataSourcesImpactedDataIndicatorAddressLikelyImpacted :: !(Maybe Text),
    -- | "socialNumLikelyImpacted" - Indicates id the social security number was impacted.  - Y: Likely impacted - N: Unlikely impacted - U: Impact cannot be determined
    consumerCreditReportAlternateDataSourcesImpactedDataIndicatorSocialNumLikelyImpacted :: !(Maybe Text),
    -- | "DOBLikelyImpacted" - Indicates id the date of birth information was impacted.  - Y: Likely impacted - N: Unlikely impacted - U: Impact cannot be determined
    consumerCreditReportAlternateDataSourcesImpactedDataIndicatorDobLikelyImpacted :: !(Maybe Text),
    -- | "driversLicenseLikelyImpacted" - Indicates id the driver&#39;s license information was impacted.  - Y: Likely impacted - N: Unlikely impacted - U: Impact cannot be determined
    consumerCreditReportAlternateDataSourcesImpactedDataIndicatorDriversLicenseLikelyImpacted :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportAlternateDataSourcesImpactedDataIndicator
instance A.FromJSON ConsumerCreditReportAlternateDataSourcesImpactedDataIndicator where
  parseJSON = A.withObject "ConsumerCreditReportAlternateDataSourcesImpactedDataIndicator" $ \o ->
    ConsumerCreditReportAlternateDataSourcesImpactedDataIndicator
      <$> (o .:? "nonRegulatedIdentifier")
      <*> (o .:? "hitNohitIndicator")
      <*> (o .:? "disclaimer")
      <*> (o .:? "nameLikelyImpacted")
      <*> (o .:? "addressLikelyImpacted")
      <*> (o .:? "socialNumLikelyImpacted")
      <*> (o .:? "DOBLikelyImpacted")
      <*> (o .:? "driversLicenseLikelyImpacted")

-- | ToJSON ConsumerCreditReportAlternateDataSourcesImpactedDataIndicator
instance A.ToJSON ConsumerCreditReportAlternateDataSourcesImpactedDataIndicator where
  toJSON ConsumerCreditReportAlternateDataSourcesImpactedDataIndicator {..} =
    A.object
      [ "nonRegulatedIdentifier" .= consumerCreditReportAlternateDataSourcesImpactedDataIndicatorNonRegulatedIdentifier,
        "hitNohitIndicator" .= consumerCreditReportAlternateDataSourcesImpactedDataIndicatorHitNohitIndicator,
        "disclaimer" .= consumerCreditReportAlternateDataSourcesImpactedDataIndicatorDisclaimer,
        "nameLikelyImpacted" .= consumerCreditReportAlternateDataSourcesImpactedDataIndicatorNameLikelyImpacted,
        "addressLikelyImpacted" .= consumerCreditReportAlternateDataSourcesImpactedDataIndicatorAddressLikelyImpacted,
        "socialNumLikelyImpacted" .= consumerCreditReportAlternateDataSourcesImpactedDataIndicatorSocialNumLikelyImpacted,
        "DOBLikelyImpacted" .= consumerCreditReportAlternateDataSourcesImpactedDataIndicatorDobLikelyImpacted,
        "driversLicenseLikelyImpacted" .= consumerCreditReportAlternateDataSourcesImpactedDataIndicatorDriversLicenseLikelyImpacted
      ]

-- | Construct a value of type 'ConsumerCreditReportAlternateDataSourcesImpactedDataIndicator' (by applying it's required fields, if any)
mkConsumerCreditReportAlternateDataSourcesImpactedDataIndicator ::
  ConsumerCreditReportAlternateDataSourcesImpactedDataIndicator
mkConsumerCreditReportAlternateDataSourcesImpactedDataIndicator =
  ConsumerCreditReportAlternateDataSourcesImpactedDataIndicator
    { consumerCreditReportAlternateDataSourcesImpactedDataIndicatorNonRegulatedIdentifier = Nothing,
      consumerCreditReportAlternateDataSourcesImpactedDataIndicatorHitNohitIndicator = Nothing,
      consumerCreditReportAlternateDataSourcesImpactedDataIndicatorDisclaimer = Nothing,
      consumerCreditReportAlternateDataSourcesImpactedDataIndicatorNameLikelyImpacted = Nothing,
      consumerCreditReportAlternateDataSourcesImpactedDataIndicatorAddressLikelyImpacted = Nothing,
      consumerCreditReportAlternateDataSourcesImpactedDataIndicatorSocialNumLikelyImpacted = Nothing,
      consumerCreditReportAlternateDataSourcesImpactedDataIndicatorDobLikelyImpacted = Nothing,
      consumerCreditReportAlternateDataSourcesImpactedDataIndicatorDriversLicenseLikelyImpacted = Nothing
    }

-- ** ConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower

-- | ConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower
-- Provides information relating to the Military Lending Act – MLA Covered Borrower Status.
data ConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower = ConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower
  { -- | "regulatedIdentifier" - RG - indicates that this is Regulated Data
    consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrowerRegulatedIdentifier :: !(Maybe Text),
    -- | "disclaimer" - Diclaimer Text THE DEPARTMENT OF DEFENSE (\&quot;DOD\&quot;) COVERED BORROWER DATA (\&quot;DATA\&quot;) IS FROM THE DEFENSE MANPOWER DATA CENTER (\&quot;DMDC\&quot;) BY WAY OF CONTRACT BETWEEN EQUIFAX INFORMATION SERVICES LLC (\&quot;EQUIFAX\&quot;) AND DOD. ALL DOD DATA IS USED AND STORED BY EQUIFAX IN ACCORDANCE WITH ITS LEGAL AND CONTRACTUAL OBLIGATIONS. THE DOD DATA IS NOT PART OF EQUIFAX’S NATIONWIDE CREDIT DATABASE, AND EQUIFAX IS REQUIRED TO MAINTAIN THE DOD DATA SEPARATE FROM AND NOT COMMINGLED WITH ANY CREDIT DATA MAINTAINED BY EQUIFAX.
    consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrowerDisclaimer :: !(Maybe Text),
    -- | "coveredBorrowerStatus" - Yes or No in Military
    consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrowerCoveredBorrowerStatus :: !(Maybe Text),
    -- | "insufficientDataProvidedForMatch" - Insufficient data provided for match
    consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrowerInsufficientDataProvidedForMatch :: !(Maybe Text),
    -- | "referralContactNumber" - Contact number for MLA
    consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrowerReferralContactNumber :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower
instance A.FromJSON ConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower where
  parseJSON = A.withObject "ConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower" $ \o ->
    ConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower
      <$> (o .:? "regulatedIdentifier")
      <*> (o .:? "disclaimer")
      <*> (o .:? "coveredBorrowerStatus")
      <*> (o .:? "insufficientDataProvidedForMatch")
      <*> (o .:? "referralContactNumber")

-- | ToJSON ConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower
instance A.ToJSON ConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower where
  toJSON ConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower {..} =
    A.object
      [ "regulatedIdentifier" .= consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrowerRegulatedIdentifier,
        "disclaimer" .= consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrowerDisclaimer,
        "coveredBorrowerStatus" .= consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrowerCoveredBorrowerStatus,
        "insufficientDataProvidedForMatch" .= consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrowerInsufficientDataProvidedForMatch,
        "referralContactNumber" .= consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrowerReferralContactNumber
      ]

-- | Construct a value of type 'ConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower' (by applying it's required fields, if any)
mkConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower ::
  ConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower
mkConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower =
  ConsumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrower
    { consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrowerRegulatedIdentifier = Nothing,
      consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrowerDisclaimer = Nothing,
      consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrowerCoveredBorrowerStatus = Nothing,
      consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrowerInsufficientDataProvidedForMatch = Nothing,
      consumerCreditReportAlternateDataSourcesMilitaryLendingCoveredBorrowerReferralContactNumber = Nothing
    }

-- ** ConsumerCreditReportAlternateDataSourcesNorthAmericanLink

-- | ConsumerCreditReportAlternateDataSourcesNorthAmericanLink
-- NAL - Canadian Credit Report for Consumer's Canadian Address
data ConsumerCreditReportAlternateDataSourcesNorthAmericanLink = ConsumerCreditReportAlternateDataSourcesNorthAmericanLink
  { -- | "regulatedIdentifier" - \\&#39;RG\\&#39; for Regulated Data Source
    consumerCreditReportAlternateDataSourcesNorthAmericanLinkRegulatedIdentifier :: !(Maybe Text),
    -- | "hitNohitIndicator" - If there was a responce back from the data source or not
    consumerCreditReportAlternateDataSourcesNorthAmericanLinkHitNohitIndicator :: !(Maybe Text),
    -- | "INTL5FFFConsumerReport" - Contents of the Canadian Report returned
    consumerCreditReportAlternateDataSourcesNorthAmericanLinkIntl5FffConsumerReport :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportAlternateDataSourcesNorthAmericanLink
instance A.FromJSON ConsumerCreditReportAlternateDataSourcesNorthAmericanLink where
  parseJSON = A.withObject "ConsumerCreditReportAlternateDataSourcesNorthAmericanLink" $ \o ->
    ConsumerCreditReportAlternateDataSourcesNorthAmericanLink
      <$> (o .:? "regulatedIdentifier")
      <*> (o .:? "hitNohitIndicator")
      <*> (o .:? "INTL5FFFConsumerReport")

-- | ToJSON ConsumerCreditReportAlternateDataSourcesNorthAmericanLink
instance A.ToJSON ConsumerCreditReportAlternateDataSourcesNorthAmericanLink where
  toJSON ConsumerCreditReportAlternateDataSourcesNorthAmericanLink {..} =
    A.object
      [ "regulatedIdentifier" .= consumerCreditReportAlternateDataSourcesNorthAmericanLinkRegulatedIdentifier,
        "hitNohitIndicator" .= consumerCreditReportAlternateDataSourcesNorthAmericanLinkHitNohitIndicator,
        "INTL5FFFConsumerReport" .= consumerCreditReportAlternateDataSourcesNorthAmericanLinkIntl5FffConsumerReport
      ]

-- | Construct a value of type 'ConsumerCreditReportAlternateDataSourcesNorthAmericanLink' (by applying it's required fields, if any)
mkConsumerCreditReportAlternateDataSourcesNorthAmericanLink ::
  ConsumerCreditReportAlternateDataSourcesNorthAmericanLink
mkConsumerCreditReportAlternateDataSourcesNorthAmericanLink =
  ConsumerCreditReportAlternateDataSourcesNorthAmericanLink
    { consumerCreditReportAlternateDataSourcesNorthAmericanLinkRegulatedIdentifier = Nothing,
      consumerCreditReportAlternateDataSourcesNorthAmericanLinkHitNohitIndicator = Nothing,
      consumerCreditReportAlternateDataSourcesNorthAmericanLinkIntl5FffConsumerReport = Nothing
    }

-- ** ConsumerCreditReportAttributes

-- | ConsumerCreditReportAttributes
data ConsumerCreditReportAttributes = ConsumerCreditReportAttributes
  { -- | "identifier" - Variable identifier
    consumerCreditReportAttributesIdentifier :: !(Maybe Text),
    -- | "value" - Value of the variable
    consumerCreditReportAttributesValue :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportAttributes
instance A.FromJSON ConsumerCreditReportAttributes where
  parseJSON = A.withObject "ConsumerCreditReportAttributes" $ \o ->
    ConsumerCreditReportAttributes
      <$> (o .:? "identifier")
      <*> (o .:? "value")

-- | ToJSON ConsumerCreditReportAttributes
instance A.ToJSON ConsumerCreditReportAttributes where
  toJSON ConsumerCreditReportAttributes {..} =
    A.object
      [ "identifier" .= consumerCreditReportAttributesIdentifier,
        "value" .= consumerCreditReportAttributesValue
      ]

-- | Construct a value of type 'ConsumerCreditReportAttributes' (by applying it's required fields, if any)
mkConsumerCreditReportAttributes ::
  ConsumerCreditReportAttributes
mkConsumerCreditReportAttributes =
  ConsumerCreditReportAttributes
    { consumerCreditReportAttributesIdentifier = Nothing,
      consumerCreditReportAttributesValue = Nothing
    }

-- ** ConsumerCreditReportAttributes1

-- | ConsumerCreditReportAttributes1
-- Model Attribute data
data ConsumerCreditReportAttributes1 = ConsumerCreditReportAttributes1
  { -- | "modelNumber" - Model number
    consumerCreditReportAttributes1ModelNumber :: !(Maybe Text),
    -- | "numberOfVariableFields" - Indicates the number of fields with variables being returned
    consumerCreditReportAttributes1NumberOfVariableFields :: !(Maybe Text),
    -- | "attributes" - Fields with variables being returned
    consumerCreditReportAttributes1Attributes :: !(Maybe [ConsumerCreditReportAttributes])
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportAttributes1
instance A.FromJSON ConsumerCreditReportAttributes1 where
  parseJSON = A.withObject "ConsumerCreditReportAttributes1" $ \o ->
    ConsumerCreditReportAttributes1
      <$> (o .:? "modelNumber")
      <*> (o .:? "numberOfVariableFields")
      <*> (o .:? "attributes")

-- | ToJSON ConsumerCreditReportAttributes1
instance A.ToJSON ConsumerCreditReportAttributes1 where
  toJSON ConsumerCreditReportAttributes1 {..} =
    A.object
      [ "modelNumber" .= consumerCreditReportAttributes1ModelNumber,
        "numberOfVariableFields" .= consumerCreditReportAttributes1NumberOfVariableFields,
        "attributes" .= consumerCreditReportAttributes1Attributes
      ]

-- | Construct a value of type 'ConsumerCreditReportAttributes1' (by applying it's required fields, if any)
mkConsumerCreditReportAttributes1 ::
  ConsumerCreditReportAttributes1
mkConsumerCreditReportAttributes1 =
  ConsumerCreditReportAttributes1
    { consumerCreditReportAttributes1ModelNumber = Nothing,
      consumerCreditReportAttributes1NumberOfVariableFields = Nothing,
      consumerCreditReportAttributes1Attributes = Nothing
    }

-- ** ConsumerCreditReportConsumerReferralLocation

-- | ConsumerCreditReportConsumerReferralLocation
-- Provides contact information regarding the data contained in the report
data ConsumerCreditReportConsumerReferralLocation = ConsumerCreditReportConsumerReferralLocation
  { -- | "bureauCode" - Refereal Bureau Code
    consumerCreditReportConsumerReferralLocationBureauCode :: !(Maybe Text),
    -- | "bureauName" - Referral Bureau Name
    consumerCreditReportConsumerReferralLocationBureauName :: !(Maybe Text),
    -- | "address"
    consumerCreditReportConsumerReferralLocationAddress :: !(Maybe ConsumerCreditReportConsumerReferralLocationAddress),
    -- | "telephoneNumber"
    consumerCreditReportConsumerReferralLocationTelephoneNumber :: !(Maybe ConsumerCreditReportConsumerReferralLocationTelephoneNumber)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportConsumerReferralLocation
instance A.FromJSON ConsumerCreditReportConsumerReferralLocation where
  parseJSON = A.withObject "ConsumerCreditReportConsumerReferralLocation" $ \o ->
    ConsumerCreditReportConsumerReferralLocation
      <$> (o .:? "bureauCode")
      <*> (o .:? "bureauName")
      <*> (o .:? "address")
      <*> (o .:? "telephoneNumber")

-- | ToJSON ConsumerCreditReportConsumerReferralLocation
instance A.ToJSON ConsumerCreditReportConsumerReferralLocation where
  toJSON ConsumerCreditReportConsumerReferralLocation {..} =
    A.object
      [ "bureauCode" .= consumerCreditReportConsumerReferralLocationBureauCode,
        "bureauName" .= consumerCreditReportConsumerReferralLocationBureauName,
        "address" .= consumerCreditReportConsumerReferralLocationAddress,
        "telephoneNumber" .= consumerCreditReportConsumerReferralLocationTelephoneNumber
      ]

-- | Construct a value of type 'ConsumerCreditReportConsumerReferralLocation' (by applying it's required fields, if any)
mkConsumerCreditReportConsumerReferralLocation ::
  ConsumerCreditReportConsumerReferralLocation
mkConsumerCreditReportConsumerReferralLocation =
  ConsumerCreditReportConsumerReferralLocation
    { consumerCreditReportConsumerReferralLocationBureauCode = Nothing,
      consumerCreditReportConsumerReferralLocationBureauName = Nothing,
      consumerCreditReportConsumerReferralLocationAddress = Nothing,
      consumerCreditReportConsumerReferralLocationTelephoneNumber = Nothing
    }

-- ** ConsumerCreditReportConsumerReferralLocationAddress

-- | ConsumerCreditReportConsumerReferralLocationAddress
data ConsumerCreditReportConsumerReferralLocationAddress = ConsumerCreditReportConsumerReferralLocationAddress
  { -- | "primaryAddress" - Referral Bureau primary address
    consumerCreditReportConsumerReferralLocationAddressPrimaryAddress :: !(Maybe Text),
    -- | "secondaryAddress" - Referral Bureau secondary address
    consumerCreditReportConsumerReferralLocationAddressSecondaryAddress :: !(Maybe Text),
    -- | "cityName" - City name
    consumerCreditReportConsumerReferralLocationAddressCityName :: !(Maybe Text),
    -- | "stateAbbreviation" - State name&#39;s abbreviation
    consumerCreditReportConsumerReferralLocationAddressStateAbbreviation :: !(Maybe Text),
    -- | "zipCode" - Zip code
    consumerCreditReportConsumerReferralLocationAddressZipCode :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportConsumerReferralLocationAddress
instance A.FromJSON ConsumerCreditReportConsumerReferralLocationAddress where
  parseJSON = A.withObject "ConsumerCreditReportConsumerReferralLocationAddress" $ \o ->
    ConsumerCreditReportConsumerReferralLocationAddress
      <$> (o .:? "primaryAddress")
      <*> (o .:? "secondaryAddress")
      <*> (o .:? "cityName")
      <*> (o .:? "stateAbbreviation")
      <*> (o .:? "zipCode")

-- | ToJSON ConsumerCreditReportConsumerReferralLocationAddress
instance A.ToJSON ConsumerCreditReportConsumerReferralLocationAddress where
  toJSON ConsumerCreditReportConsumerReferralLocationAddress {..} =
    A.object
      [ "primaryAddress" .= consumerCreditReportConsumerReferralLocationAddressPrimaryAddress,
        "secondaryAddress" .= consumerCreditReportConsumerReferralLocationAddressSecondaryAddress,
        "cityName" .= consumerCreditReportConsumerReferralLocationAddressCityName,
        "stateAbbreviation" .= consumerCreditReportConsumerReferralLocationAddressStateAbbreviation,
        "zipCode" .= consumerCreditReportConsumerReferralLocationAddressZipCode
      ]

-- | Construct a value of type 'ConsumerCreditReportConsumerReferralLocationAddress' (by applying it's required fields, if any)
mkConsumerCreditReportConsumerReferralLocationAddress ::
  ConsumerCreditReportConsumerReferralLocationAddress
mkConsumerCreditReportConsumerReferralLocationAddress =
  ConsumerCreditReportConsumerReferralLocationAddress
    { consumerCreditReportConsumerReferralLocationAddressPrimaryAddress = Nothing,
      consumerCreditReportConsumerReferralLocationAddressSecondaryAddress = Nothing,
      consumerCreditReportConsumerReferralLocationAddressCityName = Nothing,
      consumerCreditReportConsumerReferralLocationAddressStateAbbreviation = Nothing,
      consumerCreditReportConsumerReferralLocationAddressZipCode = Nothing
    }

-- ** ConsumerCreditReportConsumerReferralLocationTelephoneNumber

-- | ConsumerCreditReportConsumerReferralLocationTelephoneNumber
-- Telephone number including a valid area code
data ConsumerCreditReportConsumerReferralLocationTelephoneNumber = ConsumerCreditReportConsumerReferralLocationTelephoneNumber
  { -- | "TelephoneNumber"
    consumerCreditReportConsumerReferralLocationTelephoneNumberTelephoneNumber :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportConsumerReferralLocationTelephoneNumber
instance A.FromJSON ConsumerCreditReportConsumerReferralLocationTelephoneNumber where
  parseJSON = A.withObject "ConsumerCreditReportConsumerReferralLocationTelephoneNumber" $ \o ->
    ConsumerCreditReportConsumerReferralLocationTelephoneNumber
      <$> (o .:? "TelephoneNumber")

-- | ToJSON ConsumerCreditReportConsumerReferralLocationTelephoneNumber
instance A.ToJSON ConsumerCreditReportConsumerReferralLocationTelephoneNumber where
  toJSON ConsumerCreditReportConsumerReferralLocationTelephoneNumber {..} =
    A.object
      [ "TelephoneNumber" .= consumerCreditReportConsumerReferralLocationTelephoneNumberTelephoneNumber
      ]

-- | Construct a value of type 'ConsumerCreditReportConsumerReferralLocationTelephoneNumber' (by applying it's required fields, if any)
mkConsumerCreditReportConsumerReferralLocationTelephoneNumber ::
  ConsumerCreditReportConsumerReferralLocationTelephoneNumber
mkConsumerCreditReportConsumerReferralLocationTelephoneNumber =
  ConsumerCreditReportConsumerReferralLocationTelephoneNumber
    { consumerCreditReportConsumerReferralLocationTelephoneNumberTelephoneNumber = Nothing
    }

-- ** ConsumerCreditReportConsumerStatements

-- | ConsumerCreditReportConsumerStatements
data ConsumerCreditReportConsumerStatements = ConsumerCreditReportConsumerStatements
  { -- | "dateReported" - Date in format MMYYYY where MM is the Month and YYYY is the year
    consumerCreditReportConsumerStatementsDateReported :: !(Maybe Text),
    -- | "datePurged" - Date in format MMYYYY where MM is the Month and YYYY is the year
    consumerCreditReportConsumerStatementsDatePurged :: !(Maybe Text),
    -- | "statement" - Consumer Statement text
    consumerCreditReportConsumerStatementsStatement :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportConsumerStatements
instance A.FromJSON ConsumerCreditReportConsumerStatements where
  parseJSON = A.withObject "ConsumerCreditReportConsumerStatements" $ \o ->
    ConsumerCreditReportConsumerStatements
      <$> (o .:? "dateReported")
      <*> (o .:? "datePurged")
      <*> (o .:? "statement")

-- | ToJSON ConsumerCreditReportConsumerStatements
instance A.ToJSON ConsumerCreditReportConsumerStatements where
  toJSON ConsumerCreditReportConsumerStatements {..} =
    A.object
      [ "dateReported" .= consumerCreditReportConsumerStatementsDateReported,
        "datePurged" .= consumerCreditReportConsumerStatementsDatePurged,
        "statement" .= consumerCreditReportConsumerStatementsStatement
      ]

-- | Construct a value of type 'ConsumerCreditReportConsumerStatements' (by applying it's required fields, if any)
mkConsumerCreditReportConsumerStatements ::
  ConsumerCreditReportConsumerStatements
mkConsumerCreditReportConsumerStatements =
  ConsumerCreditReportConsumerStatements
    { consumerCreditReportConsumerStatementsDateReported = Nothing,
      consumerCreditReportConsumerStatementsDatePurged = Nothing,
      consumerCreditReportConsumerStatementsStatement = Nothing
    }

-- ** ConsumerCreditReportEDASIndicatorCode

-- | ConsumerCreditReportEDASIndicatorCode
-- The EDAS/FEDAS indicator
data ConsumerCreditReportEDASIndicatorCode = ConsumerCreditReportEDASIndicatorCode
  { -- | "code" - Code value
    consumerCreditReportEDASIndicatorCodeCode :: !(Maybe Text),
    -- | "description" -  - E: Enhanced DAS - F: FACTA EDAS Enhanced Delinquency Alert System (EDAS) and FACTA Enhanced Delinquency Alert System (EDAS) are optional products offered by Equifax. Please contact your Equifax Sales Associate for additional information and activation of the Enhanced Delinquency Alert System (EDAS) option you desire.
    consumerCreditReportEDASIndicatorCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportEDASIndicatorCode
instance A.FromJSON ConsumerCreditReportEDASIndicatorCode where
  parseJSON = A.withObject "ConsumerCreditReportEDASIndicatorCode" $ \o ->
    ConsumerCreditReportEDASIndicatorCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportEDASIndicatorCode
instance A.ToJSON ConsumerCreditReportEDASIndicatorCode where
  toJSON ConsumerCreditReportEDASIndicatorCode {..} =
    A.object
      [ "code" .= consumerCreditReportEDASIndicatorCodeCode,
        "description" .= consumerCreditReportEDASIndicatorCodeDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportEDASIndicatorCode' (by applying it's required fields, if any)
mkConsumerCreditReportEDASIndicatorCode ::
  ConsumerCreditReportEDASIndicatorCode
mkConsumerCreditReportEDASIndicatorCode =
  ConsumerCreditReportEDASIndicatorCode
    { consumerCreditReportEDASIndicatorCodeCode = Nothing,
      consumerCreditReportEDASIndicatorCodeDescription = Nothing
    }

-- ** ConsumerCreditReportEDASRegionalIndicatorCode

-- | ConsumerCreditReportEDASRegionalIndicatorCode
-- Numeric code associated with a geographic region
data ConsumerCreditReportEDASRegionalIndicatorCode = ConsumerCreditReportEDASRegionalIndicatorCode
  { -- | "code" - Code value
    consumerCreditReportEDASRegionalIndicatorCodeCode :: !(Maybe Text),
    -- | "description" -  - 1: SOUTH - 2: WEST - 3: CENTRAL - 4: NORTHEAST
    consumerCreditReportEDASRegionalIndicatorCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportEDASRegionalIndicatorCode
instance A.FromJSON ConsumerCreditReportEDASRegionalIndicatorCode where
  parseJSON = A.withObject "ConsumerCreditReportEDASRegionalIndicatorCode" $ \o ->
    ConsumerCreditReportEDASRegionalIndicatorCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportEDASRegionalIndicatorCode
instance A.ToJSON ConsumerCreditReportEDASRegionalIndicatorCode where
  toJSON ConsumerCreditReportEDASRegionalIndicatorCode {..} =
    A.object
      [ "code" .= consumerCreditReportEDASRegionalIndicatorCodeCode,
        "description" .= consumerCreditReportEDASRegionalIndicatorCodeDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportEDASRegionalIndicatorCode' (by applying it's required fields, if any)
mkConsumerCreditReportEDASRegionalIndicatorCode ::
  ConsumerCreditReportEDASRegionalIndicatorCode
mkConsumerCreditReportEDASRegionalIndicatorCode =
  ConsumerCreditReportEDASRegionalIndicatorCode
    { consumerCreditReportEDASRegionalIndicatorCodeCode = Nothing,
      consumerCreditReportEDASRegionalIndicatorCodeDescription = Nothing
    }

-- ** ConsumerCreditReportEmployments

-- | ConsumerCreditReportEmployments
data ConsumerCreditReportEmployments = ConsumerCreditReportEmployments
  { -- | "identifier" - It describes the type of employment
    consumerCreditReportEmploymentsIdentifier :: !(Maybe Text),
    -- | "occupation" - Subject&#39;s occupation
    consumerCreditReportEmploymentsOccupation :: !(Maybe Text),
    -- | "employer" - Employer&#39;s name
    consumerCreditReportEmploymentsEmployer :: !(Maybe Text),
    -- | "dateLastReported" - Date in format MMYYYY where MM is the Month and YYYY is the year
    consumerCreditReportEmploymentsDateLastReported :: !(Maybe Text),
    -- | "dateFirstReported" - Date in format MMYYYY where MM is the Month and YYYY is the year
    consumerCreditReportEmploymentsDateFirstReported :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportEmployments
instance A.FromJSON ConsumerCreditReportEmployments where
  parseJSON = A.withObject "ConsumerCreditReportEmployments" $ \o ->
    ConsumerCreditReportEmployments
      <$> (o .:? "identifier")
      <*> (o .:? "occupation")
      <*> (o .:? "employer")
      <*> (o .:? "dateLastReported")
      <*> (o .:? "dateFirstReported")

-- | ToJSON ConsumerCreditReportEmployments
instance A.ToJSON ConsumerCreditReportEmployments where
  toJSON ConsumerCreditReportEmployments {..} =
    A.object
      [ "identifier" .= consumerCreditReportEmploymentsIdentifier,
        "occupation" .= consumerCreditReportEmploymentsOccupation,
        "employer" .= consumerCreditReportEmploymentsEmployer,
        "dateLastReported" .= consumerCreditReportEmploymentsDateLastReported,
        "dateFirstReported" .= consumerCreditReportEmploymentsDateFirstReported
      ]

-- | Construct a value of type 'ConsumerCreditReportEmployments' (by applying it's required fields, if any)
mkConsumerCreditReportEmployments ::
  ConsumerCreditReportEmployments
mkConsumerCreditReportEmployments =
  ConsumerCreditReportEmployments
    { consumerCreditReportEmploymentsIdentifier = Nothing,
      consumerCreditReportEmploymentsOccupation = Nothing,
      consumerCreditReportEmploymentsEmployer = Nothing,
      consumerCreditReportEmploymentsDateLastReported = Nothing,
      consumerCreditReportEmploymentsDateFirstReported = Nothing
    }

-- ** ConsumerCreditReportEquifaxUSConsumerCreditReport

-- | ConsumerCreditReportEquifaxUSConsumerCreditReport
data ConsumerCreditReportEquifaxUSConsumerCreditReport = ConsumerCreditReportEquifaxUSConsumerCreditReport
  { -- | "identifier"
    consumerCreditReportEquifaxUSConsumerCreditReportIdentifier :: !(Maybe Text),
    -- | "customerReferenceNumber" - This field will return a value sent in the request
    consumerCreditReportEquifaxUSConsumerCreditReportCustomerReferenceNumber :: !(Maybe Text),
    -- | "customerNumber" - This field returns the same value provided in the request
    consumerCreditReportEquifaxUSConsumerCreditReportCustomerNumber :: !(Maybe Text),
    -- | "consumerReferralCode" - Credit Reporting Agency Number
    consumerCreditReportEquifaxUSConsumerCreditReportConsumerReferralCode :: !(Maybe Text),
    -- | "multipleReportIndicator" - Indicates if the report contains more than 1 credit report file
    consumerCreditReportEquifaxUSConsumerCreditReportMultipleReportIndicator :: !(Maybe Text),
    -- | "ECOAInquiryType" - Type of inquiry
    consumerCreditReportEquifaxUSConsumerCreditReportEcoaInquiryType :: !(Maybe Text),
    -- | "outputFormatCode" - The report output format
    consumerCreditReportEquifaxUSConsumerCreditReportOutputFormatCode :: !(Maybe Text),
    -- | "numberOfMonthsToCountInquiries" - Number of months inquiried
    consumerCreditReportEquifaxUSConsumerCreditReportNumberOfMonthsToCountInquiries :: !(Maybe Text),
    -- | "hitCode"
    consumerCreditReportEquifaxUSConsumerCreditReportHitCode :: !(Maybe ConsumerCreditReportHitCode),
    -- | "fileSinceDate" - Date file was established.  The File Since Date is not intended to represent the date the consumer first became credit active
    consumerCreditReportEquifaxUSConsumerCreditReportFileSinceDate :: !(Maybe Date),
    -- | "lastActivityDate" - Date of Last Activity, (i.e. Header Date of most recent activity in file.)
    consumerCreditReportEquifaxUSConsumerCreditReportLastActivityDate :: !(Maybe Date),
    -- | "reportDate" - Date of this report
    consumerCreditReportEquifaxUSConsumerCreditReportReportDate :: !(Maybe Date),
    -- | "subjectName"
    consumerCreditReportEquifaxUSConsumerCreditReportSubjectName :: !(Maybe ConsumerCreditReportSubjectName),
    -- | "subjectSocialNum" - Subject&#39;s Social Security Number (SSN)
    consumerCreditReportEquifaxUSConsumerCreditReportSubjectSocialNum :: !(Maybe Text),
    -- | "birthDate" - Date of birth of the primary applicant
    consumerCreditReportEquifaxUSConsumerCreditReportBirthDate :: !(Maybe Date),
    -- | "age" - Subject&#39;s age
    consumerCreditReportEquifaxUSConsumerCreditReportAge :: !(Maybe Text),
    -- | "nameMatchFlags"
    consumerCreditReportEquifaxUSConsumerCreditReportNameMatchFlags :: !(Maybe ConsumerCreditReportNameMatchFlags),
    -- | "linkIndicator" - The result of various conditions by the database search using the data submitted in the inquiry, such as   - A file with the same name and address is not found, but the social search finds a file believed to be the subject of the search.    - Results from a marriage or divorce. The consumer&#39;s file has the maiden name and the inquiry has the married name. The same holds true in a divorce case where the consumer reverts to a maiden name    - Results of a consumer using a middle name when applying for credit instead of the first name which is the name that resides on the data base.    - Results of a consumer using an address that does not currently reside on the consumer&#39;s credit file.
    consumerCreditReportEquifaxUSConsumerCreditReportLinkIndicator :: !(Maybe Text),
    -- | "doNotCombineIndicator" - This indicator may appear on the report for various reasons, such as:   - The system encountered a condition where a father/son, brother/brother, or non‐related consumer/consumer files have been mixed by applying a consumer&#39;s data to the wrong file.    - When a fraud indicator (Q, R, T or V) is placed on the file, the Do Not Combine indicator is placed on the file to avoid the file from combining with a file that may have been created as a result of fraud.
    consumerCreditReportEquifaxUSConsumerCreditReportDoNotCombineIndicator :: !(Maybe Text),
    -- | "addressDiscrepancyIndicator" - Indicates if a substantial difference was found between address(es) submitted in the inquiry and the address(es) already existing on a credit file.  The Address Discrepancy Indicator codes that can be returned in the Header element are:   - Y: a substantial difference occurred    - N: no substantial difference occurred
    consumerCreditReportEquifaxUSConsumerCreditReportAddressDiscrepancyIndicator :: !(Maybe Text),
    -- | "fraudSocialNumAlertCode"
    consumerCreditReportEquifaxUSConsumerCreditReportFraudSocialNumAlertCode :: !(Maybe ConsumerCreditReportFraudSocialNumAlertCode),
    -- | "impactedDataIndicator" - Are you impacted by the Equifax Breach? - Y: SSN likely impacted - N: SSN unlikely impacted - U: SSN impact cannot be determined
    consumerCreditReportEquifaxUSConsumerCreditReportImpactedDataIndicator :: !(Maybe E'ImpactedDataIndicator),
    -- | "fraudVictimIndicator"
    consumerCreditReportEquifaxUSConsumerCreditReportFraudVictimIndicator :: !(Maybe ConsumerCreditReportFraudVictimIndicator),
    -- | "addresses" - It contains Equifax report data pertaining to the subject&#39;s addresses
    consumerCreditReportEquifaxUSConsumerCreditReportAddresses :: !(Maybe [Address]),
    -- | "identityScan"
    consumerCreditReportEquifaxUSConsumerCreditReportIdentityScan :: !(Maybe ConsumerCreditReportIdentityScan),
    -- | "formerNames" - It contains any former name of the subject
    consumerCreditReportEquifaxUSConsumerCreditReportFormerNames :: !(Maybe [ConsumerCreditReportFormerNames]),
    -- | "deathDate" - Date in format MMYYYY where MM is the Month and YYYY is the year
    consumerCreditReportEquifaxUSConsumerCreditReportDeathDate :: !(Maybe Text),
    -- | "employments" - It contains information to the subject&#39;s employments
    consumerCreditReportEquifaxUSConsumerCreditReportEmployments :: !(Maybe [ConsumerCreditReportEmployments]),
    -- | "otherIdentification" - It contains information related to other identification
    consumerCreditReportEquifaxUSConsumerCreditReportOtherIdentification :: !(Maybe [ConsumerCreditReportOtherIdentification]),
    -- | "bankruptcies" - Public record information as it pertains to bankruptcy
    consumerCreditReportEquifaxUSConsumerCreditReportBankruptcies :: !(Maybe [Bankruptcy]),
    -- | "collections"
    consumerCreditReportEquifaxUSConsumerCreditReportCollections :: !(Maybe [Collection]),
    -- | "fileIdentificationNumber" - Provides the consumer&#39;s unique file identification number.  The return of the File Identification Number is an optional feature offered by Equifax.  Contact your Equifax Sales Associate for additional information and activation.
    consumerCreditReportEquifaxUSConsumerCreditReportFileIdentificationNumber :: !(Maybe Text),
    -- | "alertContacts" - Contains contact information for the consumer when a Fraud or Active Duty Alert is on the report. If the credit file contains a Consumer Statement, the Alert Contact information will follow the Consumer Statement on file. A Consumer Statement may be returned regardless of a Fraud or Active Duty Alert being on file (such as when a consumer is explaining his/her circumstances for filing bankruptcy). The Consumer Statement will continue to be returned on those consumer reports.
    consumerCreditReportEquifaxUSConsumerCreditReportAlertContacts :: !(Maybe [ConsumerCreditReportAlertContacts]),
    -- | "trades"
    consumerCreditReportEquifaxUSConsumerCreditReportTrades :: !(Maybe [Trade]),
    -- | "inquiries"
    consumerCreditReportEquifaxUSConsumerCreditReportInquiries :: !(Maybe [ConsumerCreditReportInquiries]),
    -- | "consumerStatements" - Show consumer comments about the report information. A maximum of 99 Consumer Statements can be returned
    consumerCreditReportEquifaxUSConsumerCreditReportConsumerStatements :: !(Maybe [ConsumerCreditReportConsumerStatements]),
    -- | "models" - Specific Scoring Model being requested by the customer (optional) Risk-Based Pricing score information, Dodd Frank, MarketMax, Models and ID Score - Risk are optional services.  Please contact your Equifax Sales Associate for additional information and activation of optional services.
    consumerCreditReportEquifaxUSConsumerCreditReportModels :: !(Maybe [ConsumerCreditReportModels]),
    -- | "onlineDirectory" - It is a convenient, value added feature that automatically delivers telephone numbers and upon request, addresses, of all collection, inquiries and trade segment companies shown on the report.  ON-LINE DIRECTORY is an optional product offered by Equifax. Please contact your Equifax Sales Associate for additional information and activation of your desired ON-LINE DIRECTORY option.
    consumerCreditReportEquifaxUSConsumerCreditReportOnlineDirectory :: !(Maybe [ConsumerCreditReportOnlineDirectory]),
    -- | "identification"
    consumerCreditReportEquifaxUSConsumerCreditReportIdentification :: !(Maybe ConsumerCreditReportIdentification),
    -- | "attributes" - Contains attributes associated with customer specific models. A maximum of 99 Data Attribute can be returned.  Please contact your Equifax Sales Associate for additional information.
    consumerCreditReportEquifaxUSConsumerCreditReportAttributes :: !(Maybe [ConsumerCreditReportAttributes1]),
    -- | "onlineGeoCode" - Delivers the folowing codes:   - Geo S M S A Code      - Geo State Code      - Geo County Code      - Geo Census Tract      - Geo Block Group   These codes will be returned for the current address.  Equifax will also return the Property Address Geo Code when it is included in the inquiry.  On Line GEO Code and Micro Vision are optional services offered by Equifax. Please contact your Equifax Sales Associate for additional information and activation.
    consumerCreditReportEquifaxUSConsumerCreditReportOnlineGeoCode :: !(Maybe [ConsumerCreditReportOnlineGeoCode]),
    -- | "fraudOrVerificationAlert" - It can contain various combinations of information depending upon the product code sent in the inquiry or a one-byte Reject Code for the Equifax ID Advisor or ID Advisor Plus products.  ID Advisor and ID Advisor Plus are optional products offered by Equifax. Contact your Equifax Sales Associate for additional information and activation.
    consumerCreditReportEquifaxUSConsumerCreditReportFraudOrVerificationAlert :: !(Maybe [A.Value]),
    -- | "OFACAlerts" - It will contain data from the Compliance Data Center (CDC)  Multiple reports on the same consumer are not available with OFAC Alert. Only the first report is returned. OFAC Alert can be only returned with a Consumer Report and when a No‐Hit on the credit file occurs.
    consumerCreditReportEquifaxUSConsumerCreditReportOfacAlerts :: !(Maybe [A.Value]),
    -- | "consumerReferralLocation"
    consumerCreditReportEquifaxUSConsumerCreditReportConsumerReferralLocation :: !(Maybe ConsumerCreditReportConsumerReferralLocation),
    -- | "alternateDataSources"
    consumerCreditReportEquifaxUSConsumerCreditReportAlternateDataSources :: !(Maybe ConsumerCreditReportAlternateDataSources)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportEquifaxUSConsumerCreditReport
instance A.FromJSON ConsumerCreditReportEquifaxUSConsumerCreditReport where
  parseJSON = A.withObject "ConsumerCreditReportEquifaxUSConsumerCreditReport" $ \o ->
    ConsumerCreditReportEquifaxUSConsumerCreditReport
      <$> (o .:? "identifier")
      <*> (o .:? "customerReferenceNumber")
      <*> (o .:? "customerNumber")
      <*> (o .:? "consumerReferralCode")
      <*> (o .:? "multipleReportIndicator")
      <*> (o .:? "ECOAInquiryType")
      <*> (o .:? "outputFormatCode")
      <*> (o .:? "numberOfMonthsToCountInquiries")
      <*> (o .:? "hitCode")
      <*> (o .:? "fileSinceDate")
      <*> (o .:? "lastActivityDate")
      <*> (o .:? "reportDate")
      <*> (o .:? "subjectName")
      <*> (o .:? "subjectSocialNum")
      <*> (o .:? "birthDate")
      <*> (o .:? "age")
      <*> (o .:? "nameMatchFlags")
      <*> (o .:? "linkIndicator")
      <*> (o .:? "doNotCombineIndicator")
      <*> (o .:? "addressDiscrepancyIndicator")
      <*> (o .:? "fraudSocialNumAlertCode")
      <*> (o .:? "impactedDataIndicator")
      <*> (o .:? "fraudVictimIndicator")
      <*> (o .:? "addresses")
      <*> (o .:? "identityScan")
      <*> (o .:? "formerNames")
      <*> (o .:? "deathDate")
      <*> (o .:? "employments")
      <*> (o .:? "otherIdentification")
      <*> (o .:? "bankruptcies")
      <*> (o .:? "collections")
      <*> (o .:? "fileIdentificationNumber")
      <*> (o .:? "alertContacts")
      <*> (o .:? "trades")
      <*> (o .:? "inquiries")
      <*> (o .:? "consumerStatements")
      <*> (o .:? "models")
      <*> (o .:? "onlineDirectory")
      <*> (o .:? "identification")
      <*> (o .:? "attributes")
      <*> (o .:? "onlineGeoCode")
      <*> (o .:? "fraudOrVerificationAlert")
      <*> (o .:? "OFACAlerts")
      <*> (o .:? "consumerReferralLocation")
      <*> (o .:? "alternateDataSources")

-- | ToJSON ConsumerCreditReportEquifaxUSConsumerCreditReport
instance A.ToJSON ConsumerCreditReportEquifaxUSConsumerCreditReport where
  toJSON ConsumerCreditReportEquifaxUSConsumerCreditReport {..} =
    A.object
      [ "identifier" .= consumerCreditReportEquifaxUSConsumerCreditReportIdentifier,
        "customerReferenceNumber" .= consumerCreditReportEquifaxUSConsumerCreditReportCustomerReferenceNumber,
        "customerNumber" .= consumerCreditReportEquifaxUSConsumerCreditReportCustomerNumber,
        "consumerReferralCode" .= consumerCreditReportEquifaxUSConsumerCreditReportConsumerReferralCode,
        "multipleReportIndicator" .= consumerCreditReportEquifaxUSConsumerCreditReportMultipleReportIndicator,
        "ECOAInquiryType" .= consumerCreditReportEquifaxUSConsumerCreditReportEcoaInquiryType,
        "outputFormatCode" .= consumerCreditReportEquifaxUSConsumerCreditReportOutputFormatCode,
        "numberOfMonthsToCountInquiries" .= consumerCreditReportEquifaxUSConsumerCreditReportNumberOfMonthsToCountInquiries,
        "hitCode" .= consumerCreditReportEquifaxUSConsumerCreditReportHitCode,
        "fileSinceDate" .= consumerCreditReportEquifaxUSConsumerCreditReportFileSinceDate,
        "lastActivityDate" .= consumerCreditReportEquifaxUSConsumerCreditReportLastActivityDate,
        "reportDate" .= consumerCreditReportEquifaxUSConsumerCreditReportReportDate,
        "subjectName" .= consumerCreditReportEquifaxUSConsumerCreditReportSubjectName,
        "subjectSocialNum" .= consumerCreditReportEquifaxUSConsumerCreditReportSubjectSocialNum,
        "birthDate" .= consumerCreditReportEquifaxUSConsumerCreditReportBirthDate,
        "age" .= consumerCreditReportEquifaxUSConsumerCreditReportAge,
        "nameMatchFlags" .= consumerCreditReportEquifaxUSConsumerCreditReportNameMatchFlags,
        "linkIndicator" .= consumerCreditReportEquifaxUSConsumerCreditReportLinkIndicator,
        "doNotCombineIndicator" .= consumerCreditReportEquifaxUSConsumerCreditReportDoNotCombineIndicator,
        "addressDiscrepancyIndicator" .= consumerCreditReportEquifaxUSConsumerCreditReportAddressDiscrepancyIndicator,
        "fraudSocialNumAlertCode" .= consumerCreditReportEquifaxUSConsumerCreditReportFraudSocialNumAlertCode,
        "impactedDataIndicator" .= consumerCreditReportEquifaxUSConsumerCreditReportImpactedDataIndicator,
        "fraudVictimIndicator" .= consumerCreditReportEquifaxUSConsumerCreditReportFraudVictimIndicator,
        "addresses" .= consumerCreditReportEquifaxUSConsumerCreditReportAddresses,
        "identityScan" .= consumerCreditReportEquifaxUSConsumerCreditReportIdentityScan,
        "formerNames" .= consumerCreditReportEquifaxUSConsumerCreditReportFormerNames,
        "deathDate" .= consumerCreditReportEquifaxUSConsumerCreditReportDeathDate,
        "employments" .= consumerCreditReportEquifaxUSConsumerCreditReportEmployments,
        "otherIdentification" .= consumerCreditReportEquifaxUSConsumerCreditReportOtherIdentification,
        "bankruptcies" .= consumerCreditReportEquifaxUSConsumerCreditReportBankruptcies,
        "collections" .= consumerCreditReportEquifaxUSConsumerCreditReportCollections,
        "fileIdentificationNumber" .= consumerCreditReportEquifaxUSConsumerCreditReportFileIdentificationNumber,
        "alertContacts" .= consumerCreditReportEquifaxUSConsumerCreditReportAlertContacts,
        "trades" .= consumerCreditReportEquifaxUSConsumerCreditReportTrades,
        "inquiries" .= consumerCreditReportEquifaxUSConsumerCreditReportInquiries,
        "consumerStatements" .= consumerCreditReportEquifaxUSConsumerCreditReportConsumerStatements,
        "models" .= consumerCreditReportEquifaxUSConsumerCreditReportModels,
        "onlineDirectory" .= consumerCreditReportEquifaxUSConsumerCreditReportOnlineDirectory,
        "identification" .= consumerCreditReportEquifaxUSConsumerCreditReportIdentification,
        "attributes" .= consumerCreditReportEquifaxUSConsumerCreditReportAttributes,
        "onlineGeoCode" .= consumerCreditReportEquifaxUSConsumerCreditReportOnlineGeoCode,
        "fraudOrVerificationAlert" .= consumerCreditReportEquifaxUSConsumerCreditReportFraudOrVerificationAlert,
        "OFACAlerts" .= consumerCreditReportEquifaxUSConsumerCreditReportOfacAlerts,
        "consumerReferralLocation" .= consumerCreditReportEquifaxUSConsumerCreditReportConsumerReferralLocation,
        "alternateDataSources" .= consumerCreditReportEquifaxUSConsumerCreditReportAlternateDataSources
      ]

-- | Construct a value of type 'ConsumerCreditReportEquifaxUSConsumerCreditReport' (by applying it's required fields, if any)
mkConsumerCreditReportEquifaxUSConsumerCreditReport ::
  ConsumerCreditReportEquifaxUSConsumerCreditReport
mkConsumerCreditReportEquifaxUSConsumerCreditReport =
  ConsumerCreditReportEquifaxUSConsumerCreditReport
    { consumerCreditReportEquifaxUSConsumerCreditReportIdentifier = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportCustomerReferenceNumber = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportCustomerNumber = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportConsumerReferralCode = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportMultipleReportIndicator = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportEcoaInquiryType = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportOutputFormatCode = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportNumberOfMonthsToCountInquiries = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportHitCode = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportFileSinceDate = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportLastActivityDate = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportReportDate = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportSubjectName = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportSubjectSocialNum = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportBirthDate = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportAge = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportNameMatchFlags = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportLinkIndicator = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportDoNotCombineIndicator = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportAddressDiscrepancyIndicator = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportFraudSocialNumAlertCode = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportImpactedDataIndicator = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportFraudVictimIndicator = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportAddresses = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportIdentityScan = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportFormerNames = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportDeathDate = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportEmployments = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportOtherIdentification = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportBankruptcies = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportCollections = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportFileIdentificationNumber = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportAlertContacts = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportTrades = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportInquiries = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportConsumerStatements = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportModels = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportOnlineDirectory = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportIdentification = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportAttributes = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportOnlineGeoCode = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportFraudOrVerificationAlert = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportOfacAlerts = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportConsumerReferralLocation = Nothing,
      consumerCreditReportEquifaxUSConsumerCreditReportAlternateDataSources = Nothing
    }

-- ** ConsumerCreditReportFICOScoreIndicatorCode

-- | ConsumerCreditReportFICOScoreIndicatorCode
-- FICO Score Indicator
data ConsumerCreditReportFICOScoreIndicatorCode = ConsumerCreditReportFICOScoreIndicatorCode
  { -- | "code" - Code value
    consumerCreditReportFICOScoreIndicatorCodeCode :: !(Maybe Text),
    -- | "description" - NF &#x3D; Non‐FACTA; F &#x3D; FACTA version   - S: FICO® Score 9 based on Equifax Data (NF)   - 4: FICO® Auto Score 9 based on Equifax Data (NF)   - 8: FICO® Bankcard Score 9 based on Equifax Data (NF)   - V: FICO® Risk Score 9 based on Equifax Data (F)   - @: FICO® Auto Score 9 based on Equifax Data (F)   - $: FICO® Bankcard Score 9 based on Equifax Data (F)   - 9: FICO® Score 8 based on Equifax Data (NF)   - C: FICO® Auto Score 8 based on Equifax Data (NF)   - D: FICO® Bankcard Score 8 based on Equifax Data (NF)   - O: FICO® Mortgage Score 8 based on Equifax Data (NF)   - G: FICO® Score 8 based on Equifax Data (F)   - H: FICO® Auto Score 8 based on Equifax Data (F)   - X: FICO® Bankcard Score 8 based on Equifax Data (F)   - Q: FICO® Mortgage Score 8 based on Equifax Data (F)   - J: FICO® Score 5 based on Equifax Data (NF)   - K: FICO® Auto Score 5 based on Equifax Data (NF)   - L: FICO® Bankcard Score 5 based on Equifax Data (NF)   - M: FICO® Personal Finance Score 5 based on Equifax Data (NF)   - N: FICO® Installment Score 5 based on Equifax Data (NF)   - Z: FICO® Score 5 based on Equifax Data (F)   - R: FICO® Auto Score 5 based on Equifax Data (F)   - W: FICO® Bankcard Score 5 based on Equifax Data (F)   - U: FICO® Personal Finance Score 5 based on Equifax Data (F)   - P: FICO® Installment Score 5 based on Equifax Data (F)
    consumerCreditReportFICOScoreIndicatorCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportFICOScoreIndicatorCode
instance A.FromJSON ConsumerCreditReportFICOScoreIndicatorCode where
  parseJSON = A.withObject "ConsumerCreditReportFICOScoreIndicatorCode" $ \o ->
    ConsumerCreditReportFICOScoreIndicatorCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportFICOScoreIndicatorCode
instance A.ToJSON ConsumerCreditReportFICOScoreIndicatorCode where
  toJSON ConsumerCreditReportFICOScoreIndicatorCode {..} =
    A.object
      [ "code" .= consumerCreditReportFICOScoreIndicatorCodeCode,
        "description" .= consumerCreditReportFICOScoreIndicatorCodeDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportFICOScoreIndicatorCode' (by applying it's required fields, if any)
mkConsumerCreditReportFICOScoreIndicatorCode ::
  ConsumerCreditReportFICOScoreIndicatorCode
mkConsumerCreditReportFICOScoreIndicatorCode =
  ConsumerCreditReportFICOScoreIndicatorCode
    { consumerCreditReportFICOScoreIndicatorCodeCode = Nothing,
      consumerCreditReportFICOScoreIndicatorCodeDescription = Nothing
    }

-- ** ConsumerCreditReportFormerNames

-- | ConsumerCreditReportFormerNames
data ConsumerCreditReportFormerNames = ConsumerCreditReportFormerNames
  { -- | "lastName" - Subject&#39;s former last name
    consumerCreditReportFormerNamesLastName :: !(Maybe Text),
    -- | "firstName" - Subject&#39;s former first name
    consumerCreditReportFormerNamesFirstName :: !(Maybe Text),
    -- | "middleInitial" - Subject&#39;s former middle name
    consumerCreditReportFormerNamesMiddleInitial :: !(Maybe Text),
    -- | "suffix" - Subject&#39;s former suffix
    consumerCreditReportFormerNamesSuffix :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportFormerNames
instance A.FromJSON ConsumerCreditReportFormerNames where
  parseJSON = A.withObject "ConsumerCreditReportFormerNames" $ \o ->
    ConsumerCreditReportFormerNames
      <$> (o .:? "lastName")
      <*> (o .:? "firstName")
      <*> (o .:? "middleInitial")
      <*> (o .:? "suffix")

-- | ToJSON ConsumerCreditReportFormerNames
instance A.ToJSON ConsumerCreditReportFormerNames where
  toJSON ConsumerCreditReportFormerNames {..} =
    A.object
      [ "lastName" .= consumerCreditReportFormerNamesLastName,
        "firstName" .= consumerCreditReportFormerNamesFirstName,
        "middleInitial" .= consumerCreditReportFormerNamesMiddleInitial,
        "suffix" .= consumerCreditReportFormerNamesSuffix
      ]

-- | Construct a value of type 'ConsumerCreditReportFormerNames' (by applying it's required fields, if any)
mkConsumerCreditReportFormerNames ::
  ConsumerCreditReportFormerNames
mkConsumerCreditReportFormerNames =
  ConsumerCreditReportFormerNames
    { consumerCreditReportFormerNamesLastName = Nothing,
      consumerCreditReportFormerNamesFirstName = Nothing,
      consumerCreditReportFormerNamesMiddleInitial = Nothing,
      consumerCreditReportFormerNamesSuffix = Nothing
    }

-- ** ConsumerCreditReportFraudSocialNumAlertCode

-- | ConsumerCreditReportFraudSocialNumAlertCode
-- FraudIQ™ SSN Alert compares the inquiry social security number and returns a flag to alert customers
data ConsumerCreditReportFraudSocialNumAlertCode = ConsumerCreditReportFraudSocialNumAlertCode
  { -- | "code" - Code value
    consumerCreditReportFraudSocialNumAlertCodeCode :: !(Maybe Text),
    -- | "description" - FLAG FLAG VERBIAGE DESCRIPTION - A: Inquiry SSN is associated with another consumer - SSN Mismatch   The social security number provided in the inquiry matches   to another consumer on the Equifax database. A credit file   is returned for the consumer name and address provided,   however the social security number on that file is different   from the social security number provided on the inquiry.    - B: Inquiry SSN not present    Inquiry did not contain a social security number,    therefore no comparison can be made.      - N: No Alert available   The social security number provided in the inquiry    cannot be matched to a specific consumer based   on the Equifax proprietary comparison algorithm.    - P: Inquiry SSN is associated with the consumer   The social security number provided in the inquiry   matches to the requested consumer.    - V*: SSN affirm variation    Inquiry ssn has a slight variation with consumer.    The social security number provided in the inquiry   has a slight variation to the requested consumer.    - W: Inquiry SSN is associated with another consumer   The social security number provided in the inquiry   matches to another consumer in the Equifax database.    No credit file is available for the requested consumer.    - *: Optional code – requires that your Equifax Customer Number be activated to   be returned when encountered.
    consumerCreditReportFraudSocialNumAlertCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportFraudSocialNumAlertCode
instance A.FromJSON ConsumerCreditReportFraudSocialNumAlertCode where
  parseJSON = A.withObject "ConsumerCreditReportFraudSocialNumAlertCode" $ \o ->
    ConsumerCreditReportFraudSocialNumAlertCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportFraudSocialNumAlertCode
instance A.ToJSON ConsumerCreditReportFraudSocialNumAlertCode where
  toJSON ConsumerCreditReportFraudSocialNumAlertCode {..} =
    A.object
      [ "code" .= consumerCreditReportFraudSocialNumAlertCodeCode,
        "description" .= consumerCreditReportFraudSocialNumAlertCodeDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportFraudSocialNumAlertCode' (by applying it's required fields, if any)
mkConsumerCreditReportFraudSocialNumAlertCode ::
  ConsumerCreditReportFraudSocialNumAlertCode
mkConsumerCreditReportFraudSocialNumAlertCode =
  ConsumerCreditReportFraudSocialNumAlertCode
    { consumerCreditReportFraudSocialNumAlertCodeCode = Nothing,
      consumerCreditReportFraudSocialNumAlertCodeDescription = Nothing
    }

-- ** ConsumerCreditReportFraudVictimIndicator

-- | ConsumerCreditReportFraudVictimIndicator
-- Indicates fraud victim alert type
data ConsumerCreditReportFraudVictimIndicator = ConsumerCreditReportFraudVictimIndicator
  { -- | "code" - Code value
    consumerCreditReportFraudVictimIndicatorCode :: !(Maybe Text),
    -- | "description" - The following indicator codes can be returned in the Header segment:    - N: Active Duty Alert    - Q: Active Duty Alert with Fraud Victim “Initial Alert”    - R: Active Duty Alert with Fraud Victim T (police report)    - T: Fraud Victim (associated with trade)    - V: Fraud Victim “Initial Alert”    - W: Active Duty Alert with Fraud Victim “Extended Alert”    - X: Fraud Victim “Extended Alert”  Consumers or their representatives may request that an Initial Fraud Alert or, if the consumer is a member of the military on active duty, an Active Duty Alert be placed on their credit file. The Initial Fraud Alert will remain on the credit file for one year (366 days); the Active Duty Alert will remain on file for twelve months. Equifax will return an “N”, “Q”, or “V”, as applicable, in the Header segment. A user receiving a report containing an Initial Fraud Alert or Active Duty Alert may not grant credit without first determining the identity of the person making the request. If the consumer has provided a telephone number, it will be returned in a second Consumer Narrative Statement segment or Alert Contact segment and must be used for identity verification purposes before granting credit.
    consumerCreditReportFraudVictimIndicatorDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportFraudVictimIndicator
instance A.FromJSON ConsumerCreditReportFraudVictimIndicator where
  parseJSON = A.withObject "ConsumerCreditReportFraudVictimIndicator" $ \o ->
    ConsumerCreditReportFraudVictimIndicator
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportFraudVictimIndicator
instance A.ToJSON ConsumerCreditReportFraudVictimIndicator where
  toJSON ConsumerCreditReportFraudVictimIndicator {..} =
    A.object
      [ "code" .= consumerCreditReportFraudVictimIndicatorCode,
        "description" .= consumerCreditReportFraudVictimIndicatorDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportFraudVictimIndicator' (by applying it's required fields, if any)
mkConsumerCreditReportFraudVictimIndicator ::
  ConsumerCreditReportFraudVictimIndicator
mkConsumerCreditReportFraudVictimIndicator =
  ConsumerCreditReportFraudVictimIndicator
    { consumerCreditReportFraudVictimIndicatorCode = Nothing,
      consumerCreditReportFraudVictimIndicatorDescription = Nothing
    }

-- ** ConsumerCreditReportHitCode

-- | ConsumerCreditReportHitCode
-- Hit code
data ConsumerCreditReportHitCode = ConsumerCreditReportHitCode
  { -- | "code" - Code value
    consumerCreditReportHitCodeCode :: !(Maybe Text),
    -- | "description" - - 1: Hit - 2: No-Hit - 3: Manual File (Returned if credit report has been designated by Equifax as manual return only or in response to an on-line prescreen transaction when the file contains a promo block.) - 4: Manual File Review Required - Due to reasons such as unable to deliver Consumer Narrative(s), Fraud/Active Duty Alert(s), or Address Discrepancy Indicator - 5: Referred File (File is under review or file is being referred to another) - 6: Hit and Automated Consumer Narrative - 7: Fraud/Verification Product Being Requested Without Requesting a Credit File - 8: \&quot;Thin File\&quot; when using Fraud/Verification Products - 9: No-Hit/Auto-DTEC** - A: Consumer Requested Security Freeze on His/Her Credit File Report Unavailable (See Attachment 15 Legislative Information) - C: No-Hit With Information From Additional Data Source(s) Returned - D: Manual File With Information From Additional Data Source(s) Returned - E: Manual Consumer Narrative With Information From Additional Data Source(s) Returned - F: Referred File With Information from Additional Data Source(s) Returned - G: Consumer Requested Security Freeze on His/Her Credit File – Report Unavailable With Information From Additional Data Source(s) Returned (except MarketMax)  - I*: Information from your inquiry has been identified as potentially fraudulent or misused, therefore the credit report is not available for delivery  - J*: Information from your inquiry has been identified as potentially fraudulent or misused, therefore the credit report is not available for delivery – with information from additional data source(s) returned - L*: Consumer Requested Equifax Lock on His/Her Credit File – Report Unavailable - M*: Consumer Requested Equifax Lock on His/Her Credit File – Report Unavailable With Information From Additional Data Source(s) Returned - T: Additional data source being returned without requesting a consumer report  - *:Optional Hit Codes require your customer number to be activated through your Sales Representative.
    consumerCreditReportHitCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportHitCode
instance A.FromJSON ConsumerCreditReportHitCode where
  parseJSON = A.withObject "ConsumerCreditReportHitCode" $ \o ->
    ConsumerCreditReportHitCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportHitCode
instance A.ToJSON ConsumerCreditReportHitCode where
  toJSON ConsumerCreditReportHitCode {..} =
    A.object
      [ "code" .= consumerCreditReportHitCodeCode,
        "description" .= consumerCreditReportHitCodeDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportHitCode' (by applying it's required fields, if any)
mkConsumerCreditReportHitCode ::
  ConsumerCreditReportHitCode
mkConsumerCreditReportHitCode =
  ConsumerCreditReportHitCode
    { consumerCreditReportHitCodeCode = Nothing,
      consumerCreditReportHitCodeDescription = Nothing
    }

-- ** ConsumerCreditReportIdentification

-- | ConsumerCreditReportIdentification
-- Information as to the subject's consumer report SSN and subject's SSN submitted in the inquiry
data ConsumerCreditReportIdentification = ConsumerCreditReportIdentification
  { -- | "subjectAge" - Subject&#39;s age
    consumerCreditReportIdentificationSubjectAge :: !(Maybe Text),
    -- | "subjectSocialNum" - Last four digits of the Social Security Number may be masked with zeros for specific customers or industry codes to secure the consumers SSN
    consumerCreditReportIdentificationSubjectSocialNum :: !(Maybe Text),
    -- | "socialNumConfirmed" - \&quot;Confirmation\&quot; of the Social Security Number is defined as having been received by three (3) major data suppliers. The SSN Confirmed indicator does not mean or imply the Social Security number has been validated through the Social Security Administration&#39;s records.      - Y: Yes      - N: No      - Blank: No inquiry SSN/Not available
    consumerCreditReportIdentificationSocialNumConfirmed :: !(Maybe Text),
    -- | "socialMatchFlags" - Social Match Flags* (one per SSN digit)    - Y: Byte (digit) match    - N: Byte (digit) Not a match    - Blank: No inquiry SSN/Not available    The field will not be returned on reports when the customer number is activated for \&quot;Social Security Number Protect\&quot; and the social security number in the inquiry does not match what is on the consumer report.  Social Match Flags is an optional service offered by Equifax. Please contact your Equifax Sales Associate for additional information and activation of the service.
    consumerCreditReportIdentificationSocialMatchFlags :: !(Maybe Text),
    -- | "inquirySocialNum" - Inquiry social security number
    consumerCreditReportIdentificationInquirySocialNum :: !(Maybe Text),
    -- | "inquirySocialNumStateIssued" - State code where the SSN was issued.  It may contain a \&quot;RR\&quot;, indicating that the SSN was issued to a railroad employe. Discontinued July 1, 1963.
    consumerCreditReportIdentificationInquirySocialNumStateIssued :: !(Maybe Text),
    -- | "inquirySocialNumYearIssued" - Inquiry SSN date issued   The actual year or \&quot;Prior to\&quot;.   P 51 means Prior to 1951
    consumerCreditReportIdentificationInquirySocialNumYearIssued :: !(Maybe Text),
    -- | "inquirySocialNumYearOfDeath" - Inquiry SSN death date.   The actual year or \&quot;Prior to\&quot;.   P 91 means Prior to 1991
    consumerCreditReportIdentificationInquirySocialNumYearOfDeath :: !(Maybe Text),
    -- | "inquirySocialNumStateOfDeath" - If party is deceased this is the state it was reported in
    consumerCreditReportIdentificationInquirySocialNumStateOfDeath :: !(Maybe Text),
    -- | "socialNumMatch" - Shows if the SSN match byte-to-byte   - Y: Match    - N: Not a match  The field will not be returned on reports when the customer number is activated for \&quot;Social Security Number Protect\&quot; and the social security number in the inquiry does not match what is on the consumer report. SSN Match is an optional service offered by Equifax. Please contact your Equifax Sales Associate for additional information and activation of the service.
    consumerCreditReportIdentificationSocialNumMatch :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportIdentification
instance A.FromJSON ConsumerCreditReportIdentification where
  parseJSON = A.withObject "ConsumerCreditReportIdentification" $ \o ->
    ConsumerCreditReportIdentification
      <$> (o .:? "subjectAge")
      <*> (o .:? "subjectSocialNum")
      <*> (o .:? "socialNumConfirmed")
      <*> (o .:? "socialMatchFlags")
      <*> (o .:? "inquirySocialNum")
      <*> (o .:? "inquirySocialNumStateIssued")
      <*> (o .:? "inquirySocialNumYearIssued")
      <*> (o .:? "inquirySocialNumYearOfDeath")
      <*> (o .:? "inquirySocialNumStateOfDeath")
      <*> (o .:? "socialNumMatch")

-- | ToJSON ConsumerCreditReportIdentification
instance A.ToJSON ConsumerCreditReportIdentification where
  toJSON ConsumerCreditReportIdentification {..} =
    A.object
      [ "subjectAge" .= consumerCreditReportIdentificationSubjectAge,
        "subjectSocialNum" .= consumerCreditReportIdentificationSubjectSocialNum,
        "socialNumConfirmed" .= consumerCreditReportIdentificationSocialNumConfirmed,
        "socialMatchFlags" .= consumerCreditReportIdentificationSocialMatchFlags,
        "inquirySocialNum" .= consumerCreditReportIdentificationInquirySocialNum,
        "inquirySocialNumStateIssued" .= consumerCreditReportIdentificationInquirySocialNumStateIssued,
        "inquirySocialNumYearIssued" .= consumerCreditReportIdentificationInquirySocialNumYearIssued,
        "inquirySocialNumYearOfDeath" .= consumerCreditReportIdentificationInquirySocialNumYearOfDeath,
        "inquirySocialNumStateOfDeath" .= consumerCreditReportIdentificationInquirySocialNumStateOfDeath,
        "socialNumMatch" .= consumerCreditReportIdentificationSocialNumMatch
      ]

-- | Construct a value of type 'ConsumerCreditReportIdentification' (by applying it's required fields, if any)
mkConsumerCreditReportIdentification ::
  ConsumerCreditReportIdentification
mkConsumerCreditReportIdentification =
  ConsumerCreditReportIdentification
    { consumerCreditReportIdentificationSubjectAge = Nothing,
      consumerCreditReportIdentificationSubjectSocialNum = Nothing,
      consumerCreditReportIdentificationSocialNumConfirmed = Nothing,
      consumerCreditReportIdentificationSocialMatchFlags = Nothing,
      consumerCreditReportIdentificationInquirySocialNum = Nothing,
      consumerCreditReportIdentificationInquirySocialNumStateIssued = Nothing,
      consumerCreditReportIdentificationInquirySocialNumYearIssued = Nothing,
      consumerCreditReportIdentificationInquirySocialNumYearOfDeath = Nothing,
      consumerCreditReportIdentificationInquirySocialNumStateOfDeath = Nothing,
      consumerCreditReportIdentificationSocialNumMatch = Nothing
    }

-- ** ConsumerCreditReportIdentityScan

-- | ConsumerCreditReportIdentityScan
-- It contains the FraudIQ Identity Scan Alert information.  FraudIQ Identity Scan Alert is an optional product offered by Equifax. Please contact your Equifax Sales Associate for additional information and activation of your Identity Scan Alert option.
data ConsumerCreditReportIdentityScan = ConsumerCreditReportIdentityScan
  { -- | "alertCodes" - It contains up to 15 Identity Scan Alert codes
    consumerCreditReportIdentityScanAlertCodes :: !(Maybe [ConsumerCreditReportIdentityScanAlertCodes]),
    -- | "identityScanRegulated" - byte that distinguished ID Scan is Non-regulated
    consumerCreditReportIdentityScanIdentityScanRegulated :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportIdentityScan
instance A.FromJSON ConsumerCreditReportIdentityScan where
  parseJSON = A.withObject "ConsumerCreditReportIdentityScan" $ \o ->
    ConsumerCreditReportIdentityScan
      <$> (o .:? "alertCodes")
      <*> (o .:? "identityScanRegulated")

-- | ToJSON ConsumerCreditReportIdentityScan
instance A.ToJSON ConsumerCreditReportIdentityScan where
  toJSON ConsumerCreditReportIdentityScan {..} =
    A.object
      [ "alertCodes" .= consumerCreditReportIdentityScanAlertCodes,
        "identityScanRegulated" .= consumerCreditReportIdentityScanIdentityScanRegulated
      ]

-- | Construct a value of type 'ConsumerCreditReportIdentityScan' (by applying it's required fields, if any)
mkConsumerCreditReportIdentityScan ::
  ConsumerCreditReportIdentityScan
mkConsumerCreditReportIdentityScan =
  ConsumerCreditReportIdentityScan
    { consumerCreditReportIdentityScanAlertCodes = Nothing,
      consumerCreditReportIdentityScanIdentityScanRegulated = Nothing
    }

-- ** ConsumerCreditReportIdentityScanAlertCodes

-- | ConsumerCreditReportIdentityScanAlertCodes
-- Describes the Identity Scan Alerts
data ConsumerCreditReportIdentityScanAlertCodes = ConsumerCreditReportIdentityScanAlertCodes
  { -- | "code" - Code value
    consumerCreditReportIdentityScanAlertCodesCode :: !(Maybe Text),
    -- | "description" - Description for the given code   - A: INQUIRY SSN HAS NEVER BEEN ISSUED OR WAS ISSUED AFTER JUNE 2011   - B: INQUIRY SSN REPORTED AS MISUSED   - C: INQUIRY ADDRESS ASSOCIATED WITH MORE THAN ONE NAME OR SSN   - D: INQUIRY ADDRESS UNVERIFIABLE   - G: INQUIRY ADDRESS IS LISTED AS A U.S. POST OFFICE STREET ADDRESS   - H: INQUIRY ADDRESS IS LISTED AS A CAMPGROUND   - I: INQUIRY SSN ASSOCIATED WITH PERSON REPORTED AS DECEASED   - J: INQUIRY ADDRESS IS LISTED AS A HOTEL/MOTEL   - L: FRAUD VICTIM ALERT PRESENT IN DATABASE   - M: INQUIRY SSN ISSUED RECENTLY   - N: ACTIVE DUTY ALERT PRESENT IN DATABASE   - O: INQUIRY SSN ISSUED PRIOR TO INQUIRY DATE OF BIRTH   - P: INQUIRY ADDRESS IS LISTED AS A CORRECTIONAL INSTITUTION ADDRESS   - Q: INQUIRY SSN REPORTED AS DECEASED AND LAST NAME DOES NOT MATCH   - R: INQUIRY ADDRESS IS NOT ASSOCIATED WITH THIS CONSUMER NAME   - S: IDENTITY SCAN DID NOT DETECT ANY ALERTS   - W: INQUIRY ADDRESS IS LISTED AS A NON-RESIDENTIAL ADDRESS   - X: INQUIRY ADDRESS ASSOCIATED WITH REPORTED FRAUD   - Y: INQUIRY TELEPHONE NUMBER LISTED AS A COMMERCIAL PHONE   - Z: INQUIRY ADDRESS IS LISTED AS A MAIL RECEIVING SERVICE   - 0: INCOMPLETE SCAN - LIMITED DATA SOURCES AVAILABLE   - 1: INQUIRY ADDRESS IS LISTED AS A MULTI-DWELLING UNIT   - 2: INQUIRY ADDRESS HAS BEEN REPORTED AS MISUSED   - 4: INQUIRY SSN MAY BE A TAX ID NUMBER   - 5: INQUIRY TELEPHONE NUMBER MAY BELONG TO A MOBILE PHONE   - 7: UNABLE TO PERFORM SSN VALIDATION DUE TO INSUFFICIENT SSN INPUT   - 8: UNABLE TO PERFORM TELEPHONE VALIDATION DUE TO INSUFFICIENT TELEPHONE INPUT   - 9: INQUIRY SSN IS INVALID
    consumerCreditReportIdentityScanAlertCodesDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportIdentityScanAlertCodes
instance A.FromJSON ConsumerCreditReportIdentityScanAlertCodes where
  parseJSON = A.withObject "ConsumerCreditReportIdentityScanAlertCodes" $ \o ->
    ConsumerCreditReportIdentityScanAlertCodes
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportIdentityScanAlertCodes
instance A.ToJSON ConsumerCreditReportIdentityScanAlertCodes where
  toJSON ConsumerCreditReportIdentityScanAlertCodes {..} =
    A.object
      [ "code" .= consumerCreditReportIdentityScanAlertCodesCode,
        "description" .= consumerCreditReportIdentityScanAlertCodesDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportIdentityScanAlertCodes' (by applying it's required fields, if any)
mkConsumerCreditReportIdentityScanAlertCodes ::
  ConsumerCreditReportIdentityScanAlertCodes
mkConsumerCreditReportIdentityScanAlertCodes =
  ConsumerCreditReportIdentityScanAlertCodes
    { consumerCreditReportIdentityScanAlertCodesCode = Nothing,
      consumerCreditReportIdentityScanAlertCodesDescription = Nothing
    }

-- ** ConsumerCreditReportInquiries

-- | ConsumerCreditReportInquiries
data ConsumerCreditReportInquiries = ConsumerCreditReportInquiries
  { -- | "type" - Inquiries from customers requesting Equifax credit reports and other products
    consumerCreditReportInquiriesType :: !(Maybe Text),
    -- | "industryCode" - Customer&#39;s industry code
    consumerCreditReportInquiriesIndustryCode :: !(Maybe Text),
    -- | "inquiryDate" - Date of inquiry
    consumerCreditReportInquiriesInquiryDate :: !(Maybe Date),
    -- | "customerNumber" - Customer&#39;s member number who made the inquiry
    consumerCreditReportInquiriesCustomerNumber :: !(Maybe Text),
    -- | "customerName" - Customer&#39;s name who made the inquiry
    consumerCreditReportInquiriesCustomerName :: !(Maybe Text),
    -- | "expandedAccountTypeOrInquiryIntent"
    consumerCreditReportInquiriesExpandedAccountTypeOrInquiryIntent :: !(Maybe AccountTypeCode)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportInquiries
instance A.FromJSON ConsumerCreditReportInquiries where
  parseJSON = A.withObject "ConsumerCreditReportInquiries" $ \o ->
    ConsumerCreditReportInquiries
      <$> (o .:? "type")
      <*> (o .:? "industryCode")
      <*> (o .:? "inquiryDate")
      <*> (o .:? "customerNumber")
      <*> (o .:? "customerName")
      <*> (o .:? "expandedAccountTypeOrInquiryIntent")

-- | ToJSON ConsumerCreditReportInquiries
instance A.ToJSON ConsumerCreditReportInquiries where
  toJSON ConsumerCreditReportInquiries {..} =
    A.object
      [ "type" .= consumerCreditReportInquiriesType,
        "industryCode" .= consumerCreditReportInquiriesIndustryCode,
        "inquiryDate" .= consumerCreditReportInquiriesInquiryDate,
        "customerNumber" .= consumerCreditReportInquiriesCustomerNumber,
        "customerName" .= consumerCreditReportInquiriesCustomerName,
        "expandedAccountTypeOrInquiryIntent" .= consumerCreditReportInquiriesExpandedAccountTypeOrInquiryIntent
      ]

-- | Construct a value of type 'ConsumerCreditReportInquiries' (by applying it's required fields, if any)
mkConsumerCreditReportInquiries ::
  ConsumerCreditReportInquiries
mkConsumerCreditReportInquiries =
  ConsumerCreditReportInquiries
    { consumerCreditReportInquiriesType = Nothing,
      consumerCreditReportInquiriesIndustryCode = Nothing,
      consumerCreditReportInquiriesInquiryDate = Nothing,
      consumerCreditReportInquiriesCustomerNumber = Nothing,
      consumerCreditReportInquiriesCustomerName = Nothing,
      consumerCreditReportInquiriesExpandedAccountTypeOrInquiryIntent = Nothing
    }

-- ** ConsumerCreditReportInquiryKeyFactor

-- | ConsumerCreditReportInquiryKeyFactor
data ConsumerCreditReportInquiryKeyFactor = ConsumerCreditReportInquiryKeyFactor
  { -- | "code"
    consumerCreditReportInquiryKeyFactorCode :: !(Maybe Text),
    -- | "description" - FACTA 5th Reason Code Regarding Inquiries
    consumerCreditReportInquiryKeyFactorDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportInquiryKeyFactor
instance A.FromJSON ConsumerCreditReportInquiryKeyFactor where
  parseJSON = A.withObject "ConsumerCreditReportInquiryKeyFactor" $ \o ->
    ConsumerCreditReportInquiryKeyFactor
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportInquiryKeyFactor
instance A.ToJSON ConsumerCreditReportInquiryKeyFactor where
  toJSON ConsumerCreditReportInquiryKeyFactor {..} =
    A.object
      [ "code" .= consumerCreditReportInquiryKeyFactorCode,
        "description" .= consumerCreditReportInquiryKeyFactorDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportInquiryKeyFactor' (by applying it's required fields, if any)
mkConsumerCreditReportInquiryKeyFactor ::
  ConsumerCreditReportInquiryKeyFactor
mkConsumerCreditReportInquiryKeyFactor =
  ConsumerCreditReportInquiryKeyFactor
    { consumerCreditReportInquiryKeyFactorCode = Nothing,
      consumerCreditReportInquiryKeyFactorDescription = Nothing
    }

-- ** ConsumerCreditReportModels

-- | ConsumerCreditReportModels
data ConsumerCreditReportModels = ConsumerCreditReportModels
  { -- | "type" - Determine what type of model is
    consumerCreditReportModelsType :: !(Maybe E'Type),
    -- | "modelNumber" - Model number code
    consumerCreditReportModelsModelNumber :: !(Maybe Text),
    -- | "FICOScoreIndicatorCode"
    consumerCreditReportModelsFicoScoreIndicatorCode :: !(Maybe ConsumerCreditReportFICOScoreIndicatorCode),
    -- | "score" - Numeric score returned by the model requested by the customer
    consumerCreditReportModelsScore :: !(Maybe Int),
    -- | "reasons" - Reason codes for the score that was returned
    consumerCreditReportModelsReasons :: !(Maybe [ConsumerCreditReportReasons]),
    -- | "inquiryKeyFactor"
    consumerCreditReportModelsInquiryKeyFactor :: !(Maybe ConsumerCreditReportInquiryKeyFactor),
    -- | "riskBasedPricingOrModel"
    consumerCreditReportModelsRiskBasedPricingOrModel :: !(Maybe ConsumerCreditReportRiskBasedPricingOrModel),
    -- | "rejects" - Model unable to score file; requested reject code return instead
    consumerCreditReportModelsRejects :: !(Maybe [ConsumerCreditReportRejects]),
    -- | "EDASRegionalIndicatorCode"
    consumerCreditReportModelsEdasRegionalIndicatorCode :: !(Maybe ConsumerCreditReportEDASRegionalIndicatorCode),
    -- | "EDASIndicatorCode"
    consumerCreditReportModelsEdasIndicatorCode :: !(Maybe ConsumerCreditReportEDASIndicatorCode),
    -- | "modelIDOrScorecard" - Scorecard that was used to produce the score returned
    consumerCreditReportModelsModelIdorScorecard :: !(Maybe Text),
    -- | "scoreNumberOrMarketMaxIndustryCode"
    consumerCreditReportModelsScoreNumberOrMarketMaxIndustryCode :: !(Maybe ConsumerCreditReportScoreNumberOrMarketMaxIndustryCode),
    -- | "numericScoreIndicator" - Indicates whether the score is positive or negative
    consumerCreditReportModelsNumericScoreIndicator :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportModels
instance A.FromJSON ConsumerCreditReportModels where
  parseJSON = A.withObject "ConsumerCreditReportModels" $ \o ->
    ConsumerCreditReportModels
      <$> (o .:? "type")
      <*> (o .:? "modelNumber")
      <*> (o .:? "FICOScoreIndicatorCode")
      <*> (o .:? "score")
      <*> (o .:? "reasons")
      <*> (o .:? "inquiryKeyFactor")
      <*> (o .:? "riskBasedPricingOrModel")
      <*> (o .:? "rejects")
      <*> (o .:? "EDASRegionalIndicatorCode")
      <*> (o .:? "EDASIndicatorCode")
      <*> (o .:? "modelIDOrScorecard")
      <*> (o .:? "scoreNumberOrMarketMaxIndustryCode")
      <*> (o .:? "numericScoreIndicator")

-- | ToJSON ConsumerCreditReportModels
instance A.ToJSON ConsumerCreditReportModels where
  toJSON ConsumerCreditReportModels {..} =
    A.object
      [ "type" .= consumerCreditReportModelsType,
        "modelNumber" .= consumerCreditReportModelsModelNumber,
        "FICOScoreIndicatorCode" .= consumerCreditReportModelsFicoScoreIndicatorCode,
        "score" .= consumerCreditReportModelsScore,
        "reasons" .= consumerCreditReportModelsReasons,
        "inquiryKeyFactor" .= consumerCreditReportModelsInquiryKeyFactor,
        "riskBasedPricingOrModel" .= consumerCreditReportModelsRiskBasedPricingOrModel,
        "rejects" .= consumerCreditReportModelsRejects,
        "EDASRegionalIndicatorCode" .= consumerCreditReportModelsEdasRegionalIndicatorCode,
        "EDASIndicatorCode" .= consumerCreditReportModelsEdasIndicatorCode,
        "modelIDOrScorecard" .= consumerCreditReportModelsModelIdorScorecard,
        "scoreNumberOrMarketMaxIndustryCode" .= consumerCreditReportModelsScoreNumberOrMarketMaxIndustryCode,
        "numericScoreIndicator" .= consumerCreditReportModelsNumericScoreIndicator
      ]

-- | Construct a value of type 'ConsumerCreditReportModels' (by applying it's required fields, if any)
mkConsumerCreditReportModels ::
  ConsumerCreditReportModels
mkConsumerCreditReportModels =
  ConsumerCreditReportModels
    { consumerCreditReportModelsType = Nothing,
      consumerCreditReportModelsModelNumber = Nothing,
      consumerCreditReportModelsFicoScoreIndicatorCode = Nothing,
      consumerCreditReportModelsScore = Nothing,
      consumerCreditReportModelsReasons = Nothing,
      consumerCreditReportModelsInquiryKeyFactor = Nothing,
      consumerCreditReportModelsRiskBasedPricingOrModel = Nothing,
      consumerCreditReportModelsRejects = Nothing,
      consumerCreditReportModelsEdasRegionalIndicatorCode = Nothing,
      consumerCreditReportModelsEdasIndicatorCode = Nothing,
      consumerCreditReportModelsModelIdorScorecard = Nothing,
      consumerCreditReportModelsScoreNumberOrMarketMaxIndustryCode = Nothing,
      consumerCreditReportModelsNumericScoreIndicator = Nothing
    }

-- ** ConsumerCreditReportNameMatchFlags

-- | ConsumerCreditReportNameMatchFlags
-- Flags indicate if the subject's name matches
data ConsumerCreditReportNameMatchFlags = ConsumerCreditReportNameMatchFlags
  { -- | "firstNameMatchFlag" - Flag indicates if the subject&#39;s first name matches
    consumerCreditReportNameMatchFlagsFirstNameMatchFlag :: !(Maybe E'FirstNameMatchFlag),
    -- | "lastNameMatchFlag" - Flag indicates if the subject&#39;s last name matches
    consumerCreditReportNameMatchFlagsLastNameMatchFlag :: !(Maybe E'FirstNameMatchFlag),
    -- | "middleNameMatchFlag" - Flag indicates if the subject&#39;s middle name matches
    consumerCreditReportNameMatchFlagsMiddleNameMatchFlag :: !(Maybe E'FirstNameMatchFlag),
    -- | "suffixMatchFlag" - Flag indicates if the subject&#39;s suffix name matches
    consumerCreditReportNameMatchFlagsSuffixMatchFlag :: !(Maybe E'FirstNameMatchFlag)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportNameMatchFlags
instance A.FromJSON ConsumerCreditReportNameMatchFlags where
  parseJSON = A.withObject "ConsumerCreditReportNameMatchFlags" $ \o ->
    ConsumerCreditReportNameMatchFlags
      <$> (o .:? "firstNameMatchFlag")
      <*> (o .:? "lastNameMatchFlag")
      <*> (o .:? "middleNameMatchFlag")
      <*> (o .:? "suffixMatchFlag")

-- | ToJSON ConsumerCreditReportNameMatchFlags
instance A.ToJSON ConsumerCreditReportNameMatchFlags where
  toJSON ConsumerCreditReportNameMatchFlags {..} =
    A.object
      [ "firstNameMatchFlag" .= consumerCreditReportNameMatchFlagsFirstNameMatchFlag,
        "lastNameMatchFlag" .= consumerCreditReportNameMatchFlagsLastNameMatchFlag,
        "middleNameMatchFlag" .= consumerCreditReportNameMatchFlagsMiddleNameMatchFlag,
        "suffixMatchFlag" .= consumerCreditReportNameMatchFlagsSuffixMatchFlag
      ]

-- | Construct a value of type 'ConsumerCreditReportNameMatchFlags' (by applying it's required fields, if any)
mkConsumerCreditReportNameMatchFlags ::
  ConsumerCreditReportNameMatchFlags
mkConsumerCreditReportNameMatchFlags =
  ConsumerCreditReportNameMatchFlags
    { consumerCreditReportNameMatchFlagsFirstNameMatchFlag = Nothing,
      consumerCreditReportNameMatchFlagsLastNameMatchFlag = Nothing,
      consumerCreditReportNameMatchFlagsMiddleNameMatchFlag = Nothing,
      consumerCreditReportNameMatchFlagsSuffixMatchFlag = Nothing
    }

-- ** ConsumerCreditReportOnlineDirectory

-- | ConsumerCreditReportOnlineDirectory
data ConsumerCreditReportOnlineDirectory = ConsumerCreditReportOnlineDirectory
  { -- | "customerNumber" - Equifax customer number
    consumerCreditReportOnlineDirectoryCustomerNumber :: !(Maybe Text),
    -- | "customerName" - Customer&#39;s name
    consumerCreditReportOnlineDirectoryCustomerName :: !(Maybe Text),
    -- | "telephoneNumber" - Telephone number including a valid area code
    consumerCreditReportOnlineDirectoryTelephoneNumber :: !(Maybe Text),
    -- | "addressLine1" - Customer address line 1
    consumerCreditReportOnlineDirectoryAddressLine1 :: !(Maybe Text),
    -- | "addressLine2" - Customer address line 2
    consumerCreditReportOnlineDirectoryAddressLine2 :: !(Maybe Text),
    -- | "city" - The city name
    consumerCreditReportOnlineDirectoryCity :: !(Maybe Text),
    -- | "stateAbbreviation" - State name&#39;s abbreviation
    consumerCreditReportOnlineDirectoryStateAbbreviation :: !(Maybe Text),
    -- | "zipCode" - Zip code
    consumerCreditReportOnlineDirectoryZipCode :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportOnlineDirectory
instance A.FromJSON ConsumerCreditReportOnlineDirectory where
  parseJSON = A.withObject "ConsumerCreditReportOnlineDirectory" $ \o ->
    ConsumerCreditReportOnlineDirectory
      <$> (o .:? "customerNumber")
      <*> (o .:? "customerName")
      <*> (o .:? "telephoneNumber")
      <*> (o .:? "addressLine1")
      <*> (o .:? "addressLine2")
      <*> (o .:? "city")
      <*> (o .:? "stateAbbreviation")
      <*> (o .:? "zipCode")

-- | ToJSON ConsumerCreditReportOnlineDirectory
instance A.ToJSON ConsumerCreditReportOnlineDirectory where
  toJSON ConsumerCreditReportOnlineDirectory {..} =
    A.object
      [ "customerNumber" .= consumerCreditReportOnlineDirectoryCustomerNumber,
        "customerName" .= consumerCreditReportOnlineDirectoryCustomerName,
        "telephoneNumber" .= consumerCreditReportOnlineDirectoryTelephoneNumber,
        "addressLine1" .= consumerCreditReportOnlineDirectoryAddressLine1,
        "addressLine2" .= consumerCreditReportOnlineDirectoryAddressLine2,
        "city" .= consumerCreditReportOnlineDirectoryCity,
        "stateAbbreviation" .= consumerCreditReportOnlineDirectoryStateAbbreviation,
        "zipCode" .= consumerCreditReportOnlineDirectoryZipCode
      ]

-- | Construct a value of type 'ConsumerCreditReportOnlineDirectory' (by applying it's required fields, if any)
mkConsumerCreditReportOnlineDirectory ::
  ConsumerCreditReportOnlineDirectory
mkConsumerCreditReportOnlineDirectory =
  ConsumerCreditReportOnlineDirectory
    { consumerCreditReportOnlineDirectoryCustomerNumber = Nothing,
      consumerCreditReportOnlineDirectoryCustomerName = Nothing,
      consumerCreditReportOnlineDirectoryTelephoneNumber = Nothing,
      consumerCreditReportOnlineDirectoryAddressLine1 = Nothing,
      consumerCreditReportOnlineDirectoryAddressLine2 = Nothing,
      consumerCreditReportOnlineDirectoryCity = Nothing,
      consumerCreditReportOnlineDirectoryStateAbbreviation = Nothing,
      consumerCreditReportOnlineDirectoryZipCode = Nothing
    }

-- ** ConsumerCreditReportOnlineGeoCode

-- | ConsumerCreditReportOnlineGeoCode
data ConsumerCreditReportOnlineGeoCode = ConsumerCreditReportOnlineGeoCode
  { -- | "geoSMSACode" - Metropolitan Statistical Area Code
    consumerCreditReportOnlineGeoCodeGeoSmsaCode :: !(Maybe Text),
    -- | "geoStateCode" - State code
    consumerCreditReportOnlineGeoCodeGeoStateCode :: !(Maybe Text),
    -- | "geoCountyCode" - County code
    consumerCreditReportOnlineGeoCodeGeoCountyCode :: !(Maybe Text),
    -- | "geoCensusTract" - Census tract code
    consumerCreditReportOnlineGeoCodeGeoCensusTract :: !(Maybe Text),
    -- | "geoSuffix" - Census tract code suffix
    consumerCreditReportOnlineGeoCodeGeoSuffix :: !(Maybe Text),
    -- | "geoBlockGroup" - Block group code.
    consumerCreditReportOnlineGeoCodeGeoBlockGroup :: !(Maybe Text),
    -- | "streetNumber" - Street number
    consumerCreditReportOnlineGeoCodeStreetNumber :: !(Maybe Text),
    -- | "streetName" - Street name
    consumerCreditReportOnlineGeoCodeStreetName :: !(Maybe Text),
    -- | "streetTypeOrDirection" - Street Type or Direction - Drive, Street, Road, etc. East, West, etc
    consumerCreditReportOnlineGeoCodeStreetTypeOrDirection :: !(Maybe Text),
    -- | "geoSMSA5DigitCode" - Standard Metropolitan Statistical Area Code
    consumerCreditReportOnlineGeoCodeGeoSmsa5DigitCode :: !(Maybe Text),
    -- | "city" - City name
    consumerCreditReportOnlineGeoCodeCity :: !(Maybe Text),
    -- | "stateAbbreviation" - State name&#39;s abbreviation
    consumerCreditReportOnlineGeoCodeStateAbbreviation :: !(Maybe Text),
    -- | "zipCode" - Zip code
    consumerCreditReportOnlineGeoCodeZipCode :: !(Maybe Text),
    -- | "typeOfAddress"
    consumerCreditReportOnlineGeoCodeTypeOfAddress :: !(Maybe ConsumerCreditReportTypeOfAddress),
    -- | "returnCode1"
    consumerCreditReportOnlineGeoCodeReturnCode1 :: !(Maybe ConsumerCreditReportReturnCode1),
    -- | "returnCode2"
    consumerCreditReportOnlineGeoCodeReturnCode2 :: !(Maybe ConsumerCreditReportReturnCode2),
    -- | "returnCode3"
    consumerCreditReportOnlineGeoCodeReturnCode3 :: !(Maybe ConsumerCreditReportReturnCode3),
    -- | "returnCode4"
    consumerCreditReportOnlineGeoCodeReturnCode4 :: !(Maybe ConsumerCreditReportReturnCode4),
    -- | "microVisionCode"
    consumerCreditReportOnlineGeoCodeMicroVisionCode :: !(Maybe Text),
    -- | "microVisionReturnCode"
    consumerCreditReportOnlineGeoCodeMicroVisionReturnCode :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportOnlineGeoCode
instance A.FromJSON ConsumerCreditReportOnlineGeoCode where
  parseJSON = A.withObject "ConsumerCreditReportOnlineGeoCode" $ \o ->
    ConsumerCreditReportOnlineGeoCode
      <$> (o .:? "geoSMSACode")
      <*> (o .:? "geoStateCode")
      <*> (o .:? "geoCountyCode")
      <*> (o .:? "geoCensusTract")
      <*> (o .:? "geoSuffix")
      <*> (o .:? "geoBlockGroup")
      <*> (o .:? "streetNumber")
      <*> (o .:? "streetName")
      <*> (o .:? "streetTypeOrDirection")
      <*> (o .:? "geoSMSA5DigitCode")
      <*> (o .:? "city")
      <*> (o .:? "stateAbbreviation")
      <*> (o .:? "zipCode")
      <*> (o .:? "typeOfAddress")
      <*> (o .:? "returnCode1")
      <*> (o .:? "returnCode2")
      <*> (o .:? "returnCode3")
      <*> (o .:? "returnCode4")
      <*> (o .:? "microVisionCode")
      <*> (o .:? "microVisionReturnCode")

-- | ToJSON ConsumerCreditReportOnlineGeoCode
instance A.ToJSON ConsumerCreditReportOnlineGeoCode where
  toJSON ConsumerCreditReportOnlineGeoCode {..} =
    A.object
      [ "geoSMSACode" .= consumerCreditReportOnlineGeoCodeGeoSmsaCode,
        "geoStateCode" .= consumerCreditReportOnlineGeoCodeGeoStateCode,
        "geoCountyCode" .= consumerCreditReportOnlineGeoCodeGeoCountyCode,
        "geoCensusTract" .= consumerCreditReportOnlineGeoCodeGeoCensusTract,
        "geoSuffix" .= consumerCreditReportOnlineGeoCodeGeoSuffix,
        "geoBlockGroup" .= consumerCreditReportOnlineGeoCodeGeoBlockGroup,
        "streetNumber" .= consumerCreditReportOnlineGeoCodeStreetNumber,
        "streetName" .= consumerCreditReportOnlineGeoCodeStreetName,
        "streetTypeOrDirection" .= consumerCreditReportOnlineGeoCodeStreetTypeOrDirection,
        "geoSMSA5DigitCode" .= consumerCreditReportOnlineGeoCodeGeoSmsa5DigitCode,
        "city" .= consumerCreditReportOnlineGeoCodeCity,
        "stateAbbreviation" .= consumerCreditReportOnlineGeoCodeStateAbbreviation,
        "zipCode" .= consumerCreditReportOnlineGeoCodeZipCode,
        "typeOfAddress" .= consumerCreditReportOnlineGeoCodeTypeOfAddress,
        "returnCode1" .= consumerCreditReportOnlineGeoCodeReturnCode1,
        "returnCode2" .= consumerCreditReportOnlineGeoCodeReturnCode2,
        "returnCode3" .= consumerCreditReportOnlineGeoCodeReturnCode3,
        "returnCode4" .= consumerCreditReportOnlineGeoCodeReturnCode4,
        "microVisionCode" .= consumerCreditReportOnlineGeoCodeMicroVisionCode,
        "microVisionReturnCode" .= consumerCreditReportOnlineGeoCodeMicroVisionReturnCode
      ]

-- | Construct a value of type 'ConsumerCreditReportOnlineGeoCode' (by applying it's required fields, if any)
mkConsumerCreditReportOnlineGeoCode ::
  ConsumerCreditReportOnlineGeoCode
mkConsumerCreditReportOnlineGeoCode =
  ConsumerCreditReportOnlineGeoCode
    { consumerCreditReportOnlineGeoCodeGeoSmsaCode = Nothing,
      consumerCreditReportOnlineGeoCodeGeoStateCode = Nothing,
      consumerCreditReportOnlineGeoCodeGeoCountyCode = Nothing,
      consumerCreditReportOnlineGeoCodeGeoCensusTract = Nothing,
      consumerCreditReportOnlineGeoCodeGeoSuffix = Nothing,
      consumerCreditReportOnlineGeoCodeGeoBlockGroup = Nothing,
      consumerCreditReportOnlineGeoCodeStreetNumber = Nothing,
      consumerCreditReportOnlineGeoCodeStreetName = Nothing,
      consumerCreditReportOnlineGeoCodeStreetTypeOrDirection = Nothing,
      consumerCreditReportOnlineGeoCodeGeoSmsa5DigitCode = Nothing,
      consumerCreditReportOnlineGeoCodeCity = Nothing,
      consumerCreditReportOnlineGeoCodeStateAbbreviation = Nothing,
      consumerCreditReportOnlineGeoCodeZipCode = Nothing,
      consumerCreditReportOnlineGeoCodeTypeOfAddress = Nothing,
      consumerCreditReportOnlineGeoCodeReturnCode1 = Nothing,
      consumerCreditReportOnlineGeoCodeReturnCode2 = Nothing,
      consumerCreditReportOnlineGeoCodeReturnCode3 = Nothing,
      consumerCreditReportOnlineGeoCodeReturnCode4 = Nothing,
      consumerCreditReportOnlineGeoCodeMicroVisionCode = Nothing,
      consumerCreditReportOnlineGeoCodeMicroVisionReturnCode = Nothing
    }

-- ** ConsumerCreditReportOtherIdentification

-- | ConsumerCreditReportOtherIdentification
data ConsumerCreditReportOtherIdentification = ConsumerCreditReportOtherIdentification
  { -- | "dateReported" - Date the other identification was reported to Equifax
    consumerCreditReportOtherIdentificationDateReported :: !(Maybe Date),
    -- | "typeCode"
    consumerCreditReportOtherIdentificationTypeCode :: !(Maybe ConsumerCreditReportTypeCode),
    -- | "identificationNumber" - Identification number
    consumerCreditReportOtherIdentificationIdentificationNumber :: !(Maybe Text),
    -- | "reasonCode"
    consumerCreditReportOtherIdentificationReasonCode :: !(Maybe ConsumerCreditReportReasonCode)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportOtherIdentification
instance A.FromJSON ConsumerCreditReportOtherIdentification where
  parseJSON = A.withObject "ConsumerCreditReportOtherIdentification" $ \o ->
    ConsumerCreditReportOtherIdentification
      <$> (o .:? "dateReported")
      <*> (o .:? "typeCode")
      <*> (o .:? "identificationNumber")
      <*> (o .:? "reasonCode")

-- | ToJSON ConsumerCreditReportOtherIdentification
instance A.ToJSON ConsumerCreditReportOtherIdentification where
  toJSON ConsumerCreditReportOtherIdentification {..} =
    A.object
      [ "dateReported" .= consumerCreditReportOtherIdentificationDateReported,
        "typeCode" .= consumerCreditReportOtherIdentificationTypeCode,
        "identificationNumber" .= consumerCreditReportOtherIdentificationIdentificationNumber,
        "reasonCode" .= consumerCreditReportOtherIdentificationReasonCode
      ]

-- | Construct a value of type 'ConsumerCreditReportOtherIdentification' (by applying it's required fields, if any)
mkConsumerCreditReportOtherIdentification ::
  ConsumerCreditReportOtherIdentification
mkConsumerCreditReportOtherIdentification =
  ConsumerCreditReportOtherIdentification
    { consumerCreditReportOtherIdentificationDateReported = Nothing,
      consumerCreditReportOtherIdentificationTypeCode = Nothing,
      consumerCreditReportOtherIdentificationIdentificationNumber = Nothing,
      consumerCreditReportOtherIdentificationReasonCode = Nothing
    }

-- ** ConsumerCreditReportReasonCode

-- | ConsumerCreditReportReasonCode
-- Reason code
data ConsumerCreditReportReasonCode = ConsumerCreditReportReasonCode
  { -- | "code" - Code value
    consumerCreditReportReasonCodeCode :: !(Maybe Text),
    -- | "description" - Reason codes - B: Tax ID Number - C: Minor child - E: S.I.N. (Canadian Social Insurance Number) - V: Variation
    consumerCreditReportReasonCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportReasonCode
instance A.FromJSON ConsumerCreditReportReasonCode where
  parseJSON = A.withObject "ConsumerCreditReportReasonCode" $ \o ->
    ConsumerCreditReportReasonCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportReasonCode
instance A.ToJSON ConsumerCreditReportReasonCode where
  toJSON ConsumerCreditReportReasonCode {..} =
    A.object
      [ "code" .= consumerCreditReportReasonCodeCode,
        "description" .= consumerCreditReportReasonCodeDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportReasonCode' (by applying it's required fields, if any)
mkConsumerCreditReportReasonCode ::
  ConsumerCreditReportReasonCode
mkConsumerCreditReportReasonCode =
  ConsumerCreditReportReasonCode
    { consumerCreditReportReasonCodeCode = Nothing,
      consumerCreditReportReasonCodeDescription = Nothing
    }

-- ** ConsumerCreditReportReasons

-- | ConsumerCreditReportReasons
data ConsumerCreditReportReasons = ConsumerCreditReportReasons
  { -- | "code" - Code value
    consumerCreditReportReasonsCode :: !(Maybe Text),
    -- | "description" - Description for the given code Score Reason corresponding to Model Number 02781   - 00001: Number of Consumer Initiated Inquiries in the Past 6 Months   - 00002: Number of Consumer Initiated Finance Company Inquiries in the Past 24 Months   - 00003: Length of Time Accounts Have Been opened   - 00006: Accounts Reported in the Past 12 Months   - 00007: Total Amount of Available Credit on All Accounts reported in the past 12 months   - 00008: Number of Accounts With Past Due Balances   - 00009: Current Delinquent Rating Reported   - 00011: Number of Accounts With High Balances   - 00013: Total Outstanding Balances on Bank Revolving Accounts   - 00014: Total Available Line of Credit on Bank Revolving Accounts Reported in the Past 12 Months   - 00015: Length of Time Bank Revolving Accounts Have Been opened   - 00019: Number of Bank Revolving Accounts With High Balances   - 00024: Utilization of Available Credit on Accounts   - 00025: Utilization of Available Credit on Bank Revolving Accounts   - 00026: Utilization of Available Credit on Department Store Accounts   - 00031: Number of Credit Union Accounts ever reported 60+ days past due   - 00032: Percent of Accounts Reported in the Past 12 Months versus Total Accounts on File   - 00033: Percent of Bank Revolving Accounts Reported in the Past 12 Months versus Total Bank Revolving Accounts on File   - 00035: Number of Accounts ever reported 30 + days past due   - 00040: Number of Accounts Currently Reported 90+ days past due   - 00041: Percent of Bank Revolving Accounts versus Total Accounts Reported in the Past 12 Months   - 00042: Percent of Department Store Accounts versus Total Accounts Reported in the Past 12 Months   - 00043: Percent of Bank Installment Accounts versus Total Accounts Reported in the Past 12 Months   - 00049: Percent of Accounts Open in the past 6 months versus total accounts reported in the past 12 months   - 00051: Time Since Most Recent Derogatory Public Record Filed   - 00052: Number of Derogatory Public Records in the Past 24 Months   - 00053: Number of Collection Items Reported   - 00054: Number of Credit Union Accounts ever reported 30+ days past due   - 00055: Total Outstanding Balances on Department Store Accounts reported in the past 12 months   - 00058: Number of Credit Union Accounts ever Paid as Agreed   - 00060: Number of Finance Company Accounts reported in the past 12 months   - 00061: Number of Derogatory Public Records Items on File   - 00062: Number of Accounts reported 30+ days past due the past 24 Months   - 00064: Number of Accounts currently paid As Agreed   - 00066: Number of Accounts ever reported As Bad Debt   - 00071: Number of Accounts with Low Balance reported in the past 12 months   - 00072: Number of Consumer Initiated Inquiries in the Past 12 Months   - 00076: Percent of Credit Union Accounts versus Total Accounts Reported in the Past 12 Months   - 00077: Utilization on Revolving Accounts Reported in the Past 6 Months   - 00082: Total Available Line of Credit on Consumer Finance Accounts Reported in the Past 12 Months   - 00089: Length of Time Department Store Accounts Have Been opened   - 00090: Number of Department Store Accounts With High Balances   - 00091: Number of Finance Company Accounts With High Balances   - 00094: Number of Bank Revolving Accounts with Past Due Balances   - 00103: Number of Bank Revolving Accounts Reported 90-120 days past due in the Past 24 Months   - 00106: Amount of Average Balance on Revolving Accounts   - 00119: Number of Accounts Opened in the Past 6 Months   - 00121: Number of Credit Union Accounts currently Past Due   - 00122: Number of Bank Rev. Accounts reported 30+ days past due in the past 24 months   - 00124: Number of accounts reported 60 days + late in the past 24 months and Number of Public Records Ever   - 00129: Number of Accounts Reported Bad Debt in the Past 24 Months or Derogatory Public Records   - 00132: Number of Accounts Ever Reported 90 - 120 days past due   - 00133: Number of Bank Revolving Accounts Currently Reported as 60+ days past due   - 00134: Amount Past Due on Department Store Accounts with Reported Late Payments   - 00135: Total maximum credit on revolving trades reported in the past 6 months   - 00140: Number of Accounts currently paid as agreed with outstanding balances   - 00141: Number of Accounts ever reported 30 or 60 days past due   - 00142: Total Balance on All Accounts reported in the past 12 months   - 00144: Number of Bank Revolving accounts Reported 60 Days past due in the past 24 Months   - 00146: Total balances for revolving accounts reported in the past 12 months   - 00147: Number of Department Store Accounts Currently 90-120 Days Past Due   - 00148: Number of Retail Accounts Reported in the past 12 months   - 00149: Number of Auto Finance Accounts Ever paid as agreed   - 00152: Number of Auto finance Accounts reported in the past 12 months   - 00154: Number of Credit Union Accounts ever reported 90-120 days past due   - 00156: Number of Bank Revolving Accounts currently paid as agreed with outstanding balances   - 00157: Number of Accounts Currently Reported 30 days past due   - 00159: Number of Credit Union Accounts   - 00161: Number of Personal Finance accounts past due   - 00163: Number of Bank Installment accounts currently Past Due   - 00164: Number of Auto Finance accounts Currently Past Due   - 00167: Number of Finance Trade ever reported 30+ days past due   - 00168: Number of accounts opened in the past 24 months   - 00169: Percentage of Accounts paid as Agreed   - 00171: Number of Opened Accounts   - 00173: Amount Currently Past Due on Accounts   - 00175: Amount Past Due For Bank Revolving Accounts   - 00178: Number of Auto Finance Accounts   - 00179: Number of Consumer Finance accounts reported in the past 12 months   - 00182: Number of Personal Finance Accounts   - 00184: Total Available Line of Credit on Department Store Accounts Reported in the Past 12 Months   - 00186: Number of Department Store Accounts currently paid as agreed with outstanding balances   - 00189: Total Balance on Revolving Accounts reported in the past 6 Months   - 00190: Lack of Recently Reported Revolving Account Information   - 00191: Lack of Recently Reported Credit Union Accounts Information   - 00192: Lack of Recently Reported Retail Account Information   - 00193: Lack of Recently Reported Auto Finance Account Information   - 00194: Lack of Recently Reported Bank Installment Account Information   - 00195: Lack of Recently Reported Department Store Account Information   - 00197: Lack of Recently Reported Bank Revolving Account Information   - 00198: Lack of Recently Reported Balances on Accounts   - 00199: Lack of Recently Reported Status on Accounts   - 00200: Lack of Recently Reported Account Information   - 00201: No Recent Public Record Information Available   - 00202: Number of Accounts Currently Reported 60 days past due   - 00203: Number of Department Store Accounts Ever Reported 30 or 60 days past due   - 00242: Number of Bank Revolving Accounts Ever Paid as Agreed   - 00249: Number of Bank Revolving Accounts Reported in the Past 12 Months with Outstanding Balances   - 00282: Number of Bank Revolving Accounts Ever Reported 30+ days past due   - 00283: Number of Department Store Accounts Ever Reported 30+ days past due   - 00297: Length of Time Since Most Recent Bank Revolving Account Opened   - 00317: Number of Other &#39;Retail Accounts&#39; Reported as Bad Debt ever   - 00323: Number of Accounts Reported 90+ days past due/Derogatory Public Records Filed in the Past 24 months   - 00325: Number of Consumer Initiated bank Inquiries in the Past 12 Months   - 00326: Number of Bank revolving accounts Reported 30 Days Past Due in the Past 24 Months   - 00331: Number of Bank installment loans ever reported as bad debt   - 00337: Number of Retail Accounts ever reported 30+ days late   - 00345: Number of Bank Revolving Accounts Reported in the Past 12 months   - 00346: Lack of recently reported personal finance information   - 00352: Number of Dept Store accounts currently 60 days delinquent or worse   - 00353: Percent of active auto trades to total active trades   - 00354: Total High Credit of Open Bank Installment Trades in Last 12 months   - 00356: Lack of Recently Reported Consumer Finance Information   - 00359: Lack of Recently Reported Inquiry Information   - 00360: Lack of Recently Reported Bankcard Information   - 00361: Lack of Recently Reported Installment Account Information   - 00363: Number of 30 day delinquencies on Revolving accounts within last 12 months   - 00364: Number of 30 day delinquencies on installment accounts within last 12 months   - 00366: Number of 60 day delinquencies on Revolving accounts within last 12 months   - 00367: Number of 60 day delinquencies on installment accounts within last 12 months   - 00369: Number of 90 day delinquencies on Revolving accounts within last 12 months   - 00370: Number of 120-180 day delinquencies on Bankcards within last 12 months   - 00372: Number of major derogatory items on bankcards within last 12 months   - 00373: Number of major derogatory items on revolving accounts within last 12 months   - 00374: Number of bankcards reported within last 3 months with balance   - 00375: Number of revolving trades reported within last 3 months with balance   - 00376: Number of consumer initiated inquiries in past 3 months   - 00378: Balance on all open accounts reported in last 3 months   - 00380: Number of revolving trades with past due balances   - 00381: Total amount currently past due   - 00383: Total amount past due reported on installment accounts within last 3 months   - 00384: Number of open bankcards   - 00385: Number of open revolving accounts   - 00386: Total balance for open bankcards   - 00387: Total balance for open revolving accounts   - 00390: Total high credit for open revolving accounts   - 00392: Number of past due bankcards   - 00394: Number of open bankcards with alance greater than or equal to 75% of high credit reported in last 3 months   - 00395: Number of open revolving accounts with balance greater than or equal to 75% of high credit reported in last 3 months   - 00396: Number of open department store accounts with balance greater than or equal to 75% of high credit   - 00398: Number of open revolving accounts with balance greater than or equal to 50% of high credit   - 00400: Number of open installment accounts   - 00401: Number of open retail accounts   - 00403: Number of open credit union accounts   - 00404: Number of open personal finance accounts   - 00405: Number of installment accounts with past due balances reported in last 3 months   - 00406: Percent of bankcards reported satisfactory to total number of bankcards   - 00407: Percent of revolving accounts reported satisfactory to total revolving accounts   - 00408: Number of installment accounts ever 60+ days delinquent   - 00409: Number of auto finance accounts ever 60+ days delinquent   - 00411: Number of revolving accounts ever 90+ days delinquent   - 00412: Number of bankcards ever 90+ days delinquent   - 00414: Number of personal finance accounts ever 90+ days delinquent   - 00415: Number of installment accounts ever 30+ days delinquent   - 00416: Number of auto finance accounts ever 30+ days delinquent   - 00417: Number of revolving accounts ever 30+ days delinquent   - 00420: Number of 3rd party collections within last 24 months   - 00422: Number of 3rd party collections within last 12 months   - 00425: Number of Accounts With Past Due Balances reported in last 3 months   - 00426: Number of Open Department Store Accounts   - 00427: Number of Accounts Ever Reported 30+ Days Past Due   - 00428: Lack of Recently Reported Collection Information   - 00431: Number of Trades Currently reported Bad Debt   - 00432: Balance on Consumer Finance Trades   - 00433: Number of Bank Revolving Accounts Paid As Agreed   - 00434: Number of Bank Revolving Accounts Currently 30 day delinquent   - 00435: Number of Consumer Finance Trades Currently 90-120 delinquent   - 00436: Number of Consumer Finance Trades Ever Paid as Agreed   - 00437: Number Bank Revolving Trades Ever Bad Debt   - 00438: Number of Open Automotive Trades   - 00439: Number of Personal Finance Trades Ever 30 days delinquent   - 00440: Number of Auto Trades Ever Bad Debt   - 00441: Number of Auto Finance Trades Ever Bad Debt   - 00442: Number of Auto Finance Trades Ever 90+   - 00443: Total Balance on Open Bank Installment Trades   - 00444: Utilization on Bank Installment Trades   - 00445: Number of Personal Finance Trades Ever Satisfactory   - 00446: Number of Credit Union Trades Ever Bad Debt   - 00450: Number of Consumer Finance trades 90-120 days past due in past 24 months   - 00451: Number of Auto Finance Trades Ever 90-120 days delinquent   - 00453: Number of Personal Finance Trades Ever 90 - 120 days delinquent   - 00454: Number of Other Retail Trades Ever 30+   - 00455: Number of Personal Finance Trades Ever 30+   - 00456: Amount of Average Balance on Revolving Trades  Score Reason corresponding to Model Number 02782   - 00001: Number of Consumer Initiated Inquiries in the Past 6 Months   - 00002: Number of Consumer Initiated Finance Company Inquiries in the Past 24 Months   - 00003: Length of Time Accounts Have Been opened   - 00006: Accounts Reported in the Past 12 Months   - 00007: Total Amount of Available Credit on All Accounts reported in the past 12 months   - 00008: Number of Accounts With Past Due Balances   - 00009: Current Delinquent Rating Reported   - 00011: Number of Accounts With High Balances   - 00013: Total Outstanding Balances on Bank Revolving Accounts   - 00014: Total Available Line of Credit on Bank Revolving Accounts Reported in the Past 12 Months   - 00015: Length of Time Bank Revolving Accounts Have Been opened   - 00019: Number of Bank Revolving Accounts With High Balances   - 00024: Utilization of Available Credit on Accounts   - 00025: Utilization of Available Credit on Bank Revolving Accounts   - 00026: Utilization of Available Credit on Department Store Accounts   - 00031: Number of Credit Union Accounts ever reported 60+ days past due   - 00032: Percent of Accounts Reported in the Past 12 Months versus Total Accounts on File   - 00033: Percent of Bank Revolving Accounts Reported in the Past 12 Months versus Total Bank Revolving Accounts on File   - 00035: Number of Accounts ever reported 30 + days past due   - 00040: Number of Accounts Currently Reported 90+ days past due   - 00041: Percent of Bank Revolving Accounts versus Total Accounts Reported in the Past 12 Months   - 00042: Percent of Department Store Accounts versus Total Accounts Reported in the Past 12 Months   - 00043: Percent of Bank Installment Accounts versus Total Accounts Reported in the Past 12 Months   - 00049: Percent of Accounts Open in the past 6 months versus total accounts reported in the past 12 months   - 00051: Time Since Most Recent Derogatory Public Record Filed   - 00052: Number of Derogatory Public Records in the Past 24 Months   - 00053: Number of Collection Items Reported   - 00054: Number of Credit Union Accounts ever reported 30+ days past due   - 00055: Total Outstanding Balances on Department Store Accounts reported in the past 12 months   - 00058: Number of Credit Union Accounts ever Paid as Agreed   - 00060: Number of Finance Company Accounts reported in the past 12 months   - 00061: Number of Derogatory Public Records Items on File   - 00062: Number of Accounts reported 30+ days past due the past 24 Months   - 00064: Number of Accounts currently paid As Agreed   - 00066: Number of Accounts ever reported As Bad Debt   - 00071: Number of Accounts with Low Balance reported in the past 12 months   - 00072: Number of Consumer Initiated Inquiries in the Past 12 Months   - 00076: Percent of Credit Union Accounts versus Total Accounts Reported in the Past 12 Months   - 00077: Utilization on Revolving Accounts Reported in the Past 6 Months   - 00082: Total Available Line of Credit on Consumer Finance Accounts Reported in the Past 12 Months   - 00089: Length of Time Department Store Accounts Have Been opened   - 00090: Number of Department Store Accounts With High Balances   - 00091: Number of Finance Company Accounts With High Balances   - 00094: Number of Bank Revolving Accounts with Past Due Balances   - 00103: Number of Bank Revolving Accounts Reported 90-120 days past due in the Past 24 Months   - 00106: Amount of Average Balance on Revolving Accounts   - 00119: Number of Accounts Opened in the Past 6 Months   - 00121: Number of Credit Union Accounts currently Past Due   - 00122: Number of Bank Rev. Accounts reported 30+ days past due in the past 24 months   - 00124: Number of accounts reported 60 days + late in the past 24 months and Number of Public Records Ever   - 00129: Number of Accounts Reported Bad Debt in the Past 24 Months or Derogatory Public Records   - 00132: Number of Accounts Ever Reported 90 - 120 days past due   - 00133: Number of Bank Revolving Accounts Currently Reported as 60+ days past due   - 00134: Amount Past Due on Department Store Accounts with Reported Late Payments   - 00135: Total maximum credit on revolving trades reported in the past 6 months   - 00140: Number of Accounts currently paid as agreed with outstanding balances   - 00141: Number of Accounts ever reported 30 or 60 days past due   - 00142: Total Balance on All Accounts reported in the past 12 months   - 00144: Number of Bank Revolving accounts Reported 60 Days past due in the past 24 Months   - 00146: Total balances for revolving accounts reported in the past 12 months   - 00147: Number of Department Store Accounts Currently 90-120 Days Past Due   - 00148: Number of Retail Accounts Reported in the past 12 months   - 00149: Number of Auto Finance Accounts Ever paid as agreed   - 00152: Number of Auto finance Accounts reported in the past 12 months   - 00154: Number of Credit Union Accounts ever reported 90-120 days past due   - 00156: Number of Bank Revolving Accounts currently paid as agreed with outstanding balances   - 00157: Number of Accounts Currently Reported 30 days past due   - 00159: Number of Credit Union Accounts   - 00161: Number of Personal Finance accounts past due   - 00163: Number of Bank Installment accounts currently Past Due   - 00164: Number of Auto Finance accounts Currently Past Due   - 00167: Number of Finance Trade ever reported 30+ days past due   - 00168: Number of accounts opened in the past 24 months   - 00169: Percentage of Accounts paid as Agreed   - 00171: Number of Opened Accounts   - 00173: Amount Currently Past Due on Accounts   - 00175: Amount Past Due For Bank Revolving Accounts   - 00178: Number of Auto Finance Accounts   - 00179: Number of Consumer Finance accounts reported in the past 12 months   - 00182: Number of Personal Finance Accounts   - 00184: Total Available Line of Credit on Department Store Accounts Reported in the Past 12 Months   - 00186: Number of Department Store Accounts currently paid as agreed with outstanding balances   - 00189: Total Balance on Revolving Accounts reported in the past 6 Months   - 00190: Lack of Recently Reported Revolving Account Information   - 00191: Lack of Recently Reported Credit Union Accounts Information   - 00192: Lack of Recently Reported Retail Account Information   - 00193: Lack of Recently Reported Auto Finance Account Information   - 00194: Lack of Recently Reported Bank Installment Account Information   - 00195: Lack of Recently Reported Department Store Account Information   - 00197: Lack of Recently Reported Bank Revolving Account Information   - 00198: Lack of Recently Reported Balances on Accounts   - 00199: Lack of Recently Reported Status on Accounts   - 00200: Lack of Recently Reported Account Information   - 00201: No Recent Public Record Information Available   - 00202: Number of Accounts Currently Reported 60 days past due   - 00203: Number of Department Store Accounts Ever Reported 30 or 60 days past due   - 00242: Number of Bank Revolving Accounts Ever Paid as Agreed   - 00249: Number of Bank Revolving Accounts Reported in the Past 12 Months with Outstanding Balances   - 00282: Number of Bank Revolving Accounts Ever Reported 30+ days past due   - 00283: Number of Department Store Accounts Ever Reported 30+ days past due   - 00297: Length of Time Since Most Recent Bank Revolving Account Opened   - 00317: Number of Other &#39;Retail Accounts&#39; Reported as Bad Debt ever   - 00323: Number of Accounts Reported 90+ days past due/Derogatory Public Records Filed in the Past 24 months   - 00325: Number of Consumer Initiated bank Inquiries in the Past 12 Months   - 00326: Number of Bank revolving accounts Reported 30 Days Past Due in the Past 24 Months   - 00331: Number of Bank installment loans ever reported as bad debt   - 00337: Number of Retail Accounts ever reported 30+ days late   - 00345: Number of Bank Revolving Accounts Reported in the Past 12 months   - 00346: Lack of recently reported personal finance information   - 00352: Number of Dept Store accounts currently 60 days delinquent or worse   - 00353: Percent of active auto trades to total active trades   - 00354: Total High Credit of Open Bank Installment Trades in Last 12 months   - 00356: Lack of Recently Reported Consumer Finance Information   - 00359: Lack of Recently Reported Inquiry Information   - 00360: Lack of Recently Reported Bankcard Information   - 00361: Lack of Recently Reported Installment Account Information   - 00363: Number of 30 day delinquencies on Revolving accounts within last 12 months   - 00364: Number of 30 day delinquencies on installment accounts within last 12 months   - 00366: Number of 60 day delinquencies on Revolving accounts within last 12 months   - 00367: Number of 60 day delinquencies on installment accounts within last 12 months   - 00369: Number of 90 day delinquencies on Revolving accounts within last 12 months   - 00370: Number of 120-180 day delinquencies on Bankcards within last 12 months   - 00372: Number of major derogatory items on bankcards within last 12 months   - 00373: Number of major derogatory items on revolving accounts within last 12 months   - 00374: Number of bankcards reported within last 3 months with balance   - 00375: Number of revolving trades reported within last 3 months with balance   - 00376: Number of consumer initiated inquiries in past 3 months   - 00378: Balance on all open accounts reported in last 3 months   - 00380: Number of revolving trades with past due balances   - 00381: Total amount currently past due   - 00383: Total amount past due reported on installment accounts within last 3 months   - 00384: Number of open bankcards   - 00385: Number of open revolving accounts   - 00386: Total balance for open bankcards   - 00387: Total balance for open revolving accounts   - 00390: Total high credit for open revolving accounts   - 00392: Number of past due bankcards   - 00394: Number of open bankcards with alance greater than or equal to 75% of high credit reported in last 3 months   - 00395: Number of open revolving accounts with balance greater than or equal to 75% of high credit reported in last 3 months   - 00396: Number of open department store accounts with balance greater than or equal to 75% of high credit   - 00398: Number of open revolving accounts with balance greater than or equal to 50% of high credit   - 00400: Number of open installment accounts   - 00401: Number of open retail accounts   - 00403: Number of open credit union accounts   - 00404: Number of open personal finance accounts   - 00405: Number of installment accounts with past due balances reported in last 3 months   - 00406: Percent of bankcards reported satisfactory to total number of bankcards   - 00407: Percent of revolving accounts reported satisfactory to total revolving accounts   - 00408: Number of installment accounts ever 60+ days delinquent   - 00409: Number of auto finance accounts ever 60+ days delinquent   - 00411: Number of revolving accounts ever 90+ days delinquent   - 00412: Number of bankcards ever 90+ days delinquent   - 00414: Number of personal finance accounts ever 90+ days delinquent   - 00415: Number of installment accounts ever 30+ days delinquent   - 00416: Number of auto finance accounts ever 30+ days delinquent   - 00417: Number of revolving accounts ever 30+ days delinquent   - 00420: Number of 3rd party collections within last 24 months   - 00422: Number of 3rd party collections within last 12 months   - 00425: Number of Accounts With Past Due Balances reported in last 3 months   - 00426: Number of Open Department Store Accounts   - 00427: Number of Accounts Ever Reported 30+ Days Past Due   - 00428: Lack of Recently Reported Collection Information   - 00431: Number of Trades Currently reported Bad Debt   - 00432: Balance on Consumer Finance Trades   - 00433: Number of Bank Revolving Accounts Paid As Agreed   - 00434: Number of Bank Revolving Accounts Currently 30 day delinquent   - 00435: Number of Consumer Finance Trades Currently 90-120 delinquent   - 00436: Number of Consumer Finance Trades Ever Paid as Agreed   - 00437: Number Bank Revolving Trades Ever Bad Debt   - 00438: Number of Open Automotive Trades   - 00439: Number of Personal Finance Trades Ever 30 days delinquent   - 00440: Number of Auto Trades Ever Bad Debt   - 00441: Number of Auto Finance Trades Ever Bad Debt   - 00442: Number of Auto Finance Trades Ever 90+   - 00443: Total Balance on Open Bank Installment Trades   - 00444: Utilization on Bank Installment Trades   - 00445: Number of Personal Finance Trades Ever Satisfactory   - 00446: Number of Credit Union Trades Ever Bad Debt   - 00450: Number of Consumer Finance trades 90-120 days past due in past 24 months   - 00451: Number of Auto Finance Trades Ever 90-120 days delinquent   - 00453: Number of Personal Finance Trades Ever 90 - 120 days delinquent   - 00454: Number of Other Retail Trades Ever 30+   - 00455: Number of Personal Finance Trades Ever 30+   - 00456: Amount of Average Balance on Revolving Trades    Score Reason corresponding to Model Number 02783   - 00001: Number of Consumer Initiated Inquiries in the Past 6 Months   - 00002: Number of Consumer Initiated Finance Company Inquiries in the Past 24 Months   - 00003: Length of Time Accounts Have Been opened   - 00006: Accounts Reported in the Past 12 Months   - 00007: Total Amount of Available Credit on All Accounts reported in the past 12 months   - 00008: Number of Accounts With Past Due Balances   - 00009: Current Delinquent Rating Reported   - 00011: Number of Accounts With High Balances   - 00013: Total Outstanding Balances on Bank Revolving Accounts   - 00014: Total Available Line of Credit on Bank Revolving Accounts Reported in the Past 12 Months   - 00015: Length of Time Bank Revolving Accounts Have Been opened   - 00019: Number of Bank Revolving Accounts With High Balances   - 00024: Utilization of Available Credit on Accounts   - 00025: Utilization of Available Credit on Bank Revolving Accounts   - 00026: Utilization of Available Credit on Department Store Accounts   - 00031: Number of Credit Union Accounts ever reported 60+ days past due   - 00032: Percent of Accounts Reported in the Past 12 Months versus Total Accounts on File   - 00033: Percent of Bank Revolving Accounts Reported in the Past 12 Months versus Total Bank Revolving Accounts on File   - 00035: Number of Accounts ever reported 30 + days past due   - 00040: Number of Accounts Currently Reported 90+ days past due   - 00041: Percent of Bank Revolving Accounts versus Total Accounts Reported in the Past 12 Months   - 00042: Percent of Department Store Accounts versus Total Accounts Reported in the Past 12 Months   - 00043: Percent of Bank Installment Accounts versus Total Accounts Reported in the Past 12 Months   - 00049: Percent of Accounts Open in the past 6 months versus total accounts reported in the past 12 months   - 00051: Time Since Most Recent Derogatory Public Record Filed   - 00052: Number of Derogatory Public Records in the Past 24 Months   - 00053: Number of Collection Items Reported   - 00054: Number of Credit Union Accounts ever reported 30+ days past due   - 00055: Total Outstanding Balances on Department Store Accounts reported in the past 12 months   - 00058: Number of Credit Union Accounts ever Paid as Agreed   - 00060: Number of Finance Company Accounts reported in the past 12 months   - 00061: Number of Derogatory Public Records Items on File   - 00062: Number of Accounts reported 30+ days past due the past 24 Months   - 00064: Number of Accounts currently paid As Agreed   - 00066: Number of Accounts ever reported As Bad Debt   - 00071: Number of Accounts with Low Balance reported in the past 12 months   - 00072: Number of Consumer Initiated Inquiries in the Past 12 Months   - 00076: Percent of Credit Union Accounts versus Total Accounts Reported in the Past 12 Months   - 00077: Utilization on Revolving Accounts Reported in the Past 6 Months   - 00082: Total Available Line of Credit on Consumer Finance Accounts Reported in the Past 12 Months   - 00089: Length of Time Department Store Accounts Have Been opened   - 00090: Number of Department Store Accounts With High Balances   - 00091: Number of Finance Company Accounts With High Balances   - 00094: Number of Bank Revolving Accounts with Past Due Balances   - 00103: Number of Bank Revolving Accounts Reported 90-120 days past due in the Past 24 Months   - 00106: Amount of Average Balance on Revolving Accounts   - 00119: Number of Accounts Opened in the Past 6 Months   - 00121: Number of Credit Union Accounts currently Past Due   - 00122: Number of Bank Rev. Accounts reported 30+ days past due in the past 24 months   - 00124: Number of accounts reported 60 days + late in the past 24 months and Number of Public Records Ever   - 00129: Number of Accounts Reported Bad Debt in the Past 24 Months or Derogatory Public Records   - 00132: Number of Accounts Ever Reported 90 - 120 days past due   - 00133: Number of Bank Revolving Accounts Currently Reported as 60+ days past due   - 00134: Amount Past Due on Department Store Accounts with Reported Late Payments   - 00135: Total maximum credit on revolving trades reported in the past 6 months   - 00140: Number of Accounts currently paid as agreed with outstanding balances   - 00141: Number of Accounts ever reported 30 or 60 days past due   - 00142: Total Balance on All Accounts reported in the past 12 months   - 00144: Number of Bank Revolving accounts Reported 60 Days past due in the past 24 Months   - 00146: Total balances for revolving accounts reported in the past 12 months   - 00147: Number of Department Store Accounts Currently 90-120 Days Past Due   - 00148: Number of Retail Accounts Reported in the past 12 months   - 00149: Number of Auto Finance Accounts Ever paid as agreed   - 00152: Number of Auto finance Accounts reported in the past 12 months   - 00154: Number of Credit Union Accounts ever reported 90-120 days past due   - 00156: Number of Bank Revolving Accounts currently paid as agreed with outstanding balances   - 00157: Number of Accounts Currently Reported 30 days past due   - 00159: Number of Credit Union Accounts   - 00161: Number of Personal Finance accounts past due   - 00163: Number of Bank Installment accounts currently Past Due   - 00164: Number of Auto Finance accounts Currently Past Due   - 00167: Number of Finance Trade ever reported 30+ days past due   - 00168: Number of accounts opened in the past 24 months   - 00169: Percentage of Accounts paid as Agreed   - 00171: Number of Opened Accounts   - 00173: Amount Currently Past Due on Accounts   - 00175: Amount Past Due For Bank Revolving Accounts   - 00178: Number of Auto Finance Accounts   - 00179: Number of Consumer Finance accounts reported in the past 12 months   - 00182: Number of Personal Finance Accounts   - 00184: Total Available Line of Credit on Department Store Accounts Reported in the Past 12 Months   - 00186: Number of Department Store Accounts currently paid as agreed with outstanding balances   - 00189: Total Balance on Revolving Accounts reported in the past 6 Months   - 00190: Lack of Recently Reported Revolving Account Information   - 00191: Lack of Recently Reported Credit Union Accounts Information   - 00192: Lack of Recently Reported Retail Account Information   - 00193: Lack of Recently Reported Auto Finance Account Information   - 00194: Lack of Recently Reported Bank Installment Account Information   - 00195: Lack of Recently Reported Department Store Account Information   - 00197: Lack of Recently Reported Bank Revolving Account Information   - 00198: Lack of Recently Reported Balances on Accounts   - 00199: Lack of Recently Reported Status on Accounts   - 00200: Lack of Recently Reported Account Information   - 00201: No Recent Public Record Information Available   - 00202: Number of Accounts Currently Reported 60 days past due   - 00203: Number of Department Store Accounts Ever Reported 30 or 60 days past due   - 00242: Number of Bank Revolving Accounts Ever Paid as Agreed   - 00249: Number of Bank Revolving Accounts Reported in the Past 12 Months with Outstanding Balances   - 00282: Number of Bank Revolving Accounts Ever Reported 30+ days past due   - 00283: Number of Department Store Accounts Ever Reported 30+ days past due   - 00297: Length of Time Since Most Recent Bank Revolving Account Opened   - 00317: Number of Other &#39;Retail Accounts&#39; Reported as Bad Debt ever   - 00323: Number of Accounts Reported 90+ days past due/Derogatory Public Records Filed in the Past 24 months   - 00325: Number of Consumer Initiated bank Inquiries in the Past 12 Months   - 00326: Number of Bank revolving accounts Reported 30 Days Past Due in the Past 24 Months   - 00331: Number of Bank installment loans ever reported as bad debt   - 00337: Number of Retail Accounts ever reported 30+ days late   - 00345: Number of Bank Revolving Accounts Reported in the Past 12 months   - 00346: Lack of recently reported personal finance information   - 00352: Number of Dept Store accounts currently 60 days delinquent or worse   - 00353: Percent of active auto trades to total active trades   - 00354: Total High Credit of Open Bank Installment Trades in Last 12 months   - 00356: Lack of Recently Reported Consumer Finance Information   - 00359: Lack of Recently Reported Inquiry Information   - 00360: Lack of Recently Reported Bankcard Information   - 00361: Lack of Recently Reported Installment Account Information   - 00363: Number of 30 day delinquencies on Revolving accounts within last 12 months   - 00364: Number of 30 day delinquencies on installment accounts within last 12 months   - 00366: Number of 60 day delinquencies on Revolving accounts within last 12 months   - 00367: Number of 60 day delinquencies on installment accounts within last 12 months   - 00369: Number of 90 day delinquencies on Revolving accounts within last 12 months   - 00370: Number of 120-180 day delinquencies on Bankcards within last 12 months   - 00372: Number of major derogatory items on bankcards within last 12 months   - 00373: Number of major derogatory items on revolving accounts within last 12 months   - 00374: Number of bankcards reported within last 3 months with balance   - 00375: Number of revolving trades reported within last 3 months with balance   - 00376: Number of consumer initiated inquiries in past 3 months   - 00378: Balance on all open accounts reported in last 3 months   - 00380: Number of revolving trades with past due balances   - 00381: Total amount currently past due   - 00383: Total amount past due reported on installment accounts within last 3 months   - 00384: Number of open bankcards   - 00385: Number of open revolving accounts   - 00386: Total balance for open bankcards   - 00387: Total balance for open revolving accounts   - 00390: Total high credit for open revolving accounts   - 00392: Number of past due bankcards   - 00394: Number of open bankcards with alance greater than or equal to 75% of high credit reported in last 3 months   - 00395: Number of open revolving accounts with balance greater than or equal to 75% of high credit reported in last 3 months   - 00396: Number of open department store accounts with balance greater than or equal to 75% of high credit   - 00398: Number of open revolving accounts with balance greater than or equal to 50% of high credit   - 00400: Number of open installment accounts   - 00401: Number of open retail accounts   - 00403: Number of open credit union accounts   - 00404: Number of open personal finance accounts   - 00405: Number of installment accounts with past due balances reported in last 3 months   - 00406: Percent of bankcards reported satisfactory to total number of bankcards   - 00407: Percent of revolving accounts reported satisfactory to total revolving accounts   - 00408: Number of installment accounts ever 60+ days delinquent   - 00409: Number of auto finance accounts ever 60+ days delinquent   - 00411: Number of revolving accounts ever 90+ days delinquent   - 00412: Number of bankcards ever 90+ days delinquent   - 00414: Number of personal finance accounts ever 90+ days delinquent   - 00415: Number of installment accounts ever 30+ days delinquent   - 00416: Number of auto finance accounts ever 30+ days delinquent   - 00417: Number of revolving accounts ever 30+ days delinquent   - 00420: Number of 3rd party collections within last 24 months   - 00422: Number of 3rd party collections within last 12 months   - 00425: Number of Accounts With Past Due Balances reported in last 3 months   - 00426: Number of Open Department Store Accounts   - 00427: Number of Accounts Ever Reported 30+ Days Past Due   - 00428: Lack of Recently Reported Collection Information   - 00431: Number of Trades Currently reported Bad Debt   - 00432: Balance on Consumer Finance Trades   - 00433: Number of Bank Revolving Accounts Paid As Agreed   - 00434: Number of Bank Revolving Accounts Currently 30 day delinquent   - 00435: Number of Consumer Finance Trades Currently 90-120 delinquent   - 00436: Number of Consumer Finance Trades Ever Paid as Agreed   - 00437: Number Bank Revolving Trades Ever Bad Debt   - 00438: Number of Open Automotive Trades   - 00439: Number of Personal Finance Trades Ever 30 days delinquent   - 00440: Number of Auto Trades Ever Bad Debt   - 00441: Number of Auto Finance Trades Ever Bad Debt   - 00442: Number of Auto Finance Trades Ever 90+   - 00443: Total Balance on Open Bank Installment Trades   - 00444: Utilization on Bank Installment Trades   - 00445: Number of Personal Finance Trades Ever Satisfactory   - 00446: Number of Credit Union Trades Ever Bad Debt   - 00450: Number of Consumer Finance trades 90-120 days past due in past 24 months   - 00451: Number of Auto Finance Trades Ever 90-120 days delinquent   - 00453: Number of Personal Finance Trades Ever 90 - 120 days delinquent   - 00454: Number of Other Retail Trades Ever 30+   - 00455: Number of Personal Finance Trades Ever 30+   - 00456: Amount of Average Balance on Revolving Trades    Score Reason corresponding to Model Number 02784   - 00001: Number of Consumer Initiated Inquiries in the Past 6 Months   - 00002: Number of Consumer Initiated Finance Company Inquiries in the Past 24 Months   - 00003: Length of Time Accounts Have Been opened   - 00006: Accounts Reported in the Past 12 Months   - 00007: Total Amount of Available Credit on All Accounts reported in the past 12 months   - 00008: Number of Accounts With Past Due Balances   - 00009: Current Delinquent Rating Reported   - 00011: Number of Accounts With High Balances   - 00013: Total Outstanding Balances on Bank Revolving Accounts   - 00014: Total Available Line of Credit on Bank Revolving Accounts Reported in the Past 12 Months   - 00015: Length of Time Bank Revolving Accounts Have Been opened   - 00019: Number of Bank Revolving Accounts With High Balances   - 00024: Utilization of Available Credit on Accounts   - 00025: Utilization of Available Credit on Bank Revolving Accounts   - 00026: Utilization of Available Credit on Department Store Accounts   - 00031: Number of Credit Union Accounts ever reported 60+ days past due   - 00032: Percent of Accounts Reported in the Past 12 Months versus Total Accounts on File   - 00033: Percent of Bank Revolving Accounts Reported in the Past 12 Months versus Total Bank Revolving Accounts on File   - 00035: Number of Accounts ever reported 30 + days past due   - 00040: Number of Accounts Currently Reported 90+ days past due   - 00041: Percent of Bank Revolving Accounts versus Total Accounts Reported in the Past 12 Months   - 00042: Percent of Department Store Accounts versus Total Accounts Reported in the Past 12 Months   - 00043: Percent of Bank Installment Accounts versus Total Accounts Reported in the Past 12 Months   - 00049: Percent of Accounts Open in the past 6 months versus total accounts reported in the past 12 months   - 00051: Time Since Most Recent Derogatory Public Record Filed   - 00052: Number of Derogatory Public Records in the Past 24 Months   - 00053: Number of Collection Items Reported   - 00054: Number of Credit Union Accounts ever reported 30+ days past due   - 00055: Total Outstanding Balances on Department Store Accounts reported in the past 12 months   - 00058: Number of Credit Union Accounts ever Paid as Agreed   - 00060: Number of Finance Company Accounts reported in the past 12 months   - 00061: Number of Derogatory Public Records Items on File   - 00062: Number of Accounts reported 30+ days past due the past 24 Months   - 00064: Number of Accounts currently paid As Agreed   - 00066: Number of Accounts ever reported As Bad Debt   - 00071: Number of Accounts with Low Balance reported in the past 12 months   - 00072: Number of Consumer Initiated Inquiries in the Past 12 Months   - 00076: Percent of Credit Union Accounts versus Total Accounts Reported in the Past 12 Months   - 00077: Utilization on Revolving Accounts Reported in the Past 6 Months   - 00082: Total Available Line of Credit on Consumer Finance Accounts Reported in the Past 12 Months   - 00089: Length of Time Department Store Accounts Have Been opened   - 00090: Number of Department Store Accounts With High Balances   - 00091: Number of Finance Company Accounts With High Balances   - 00094: Number of Bank Revolving Accounts with Past Due Balances   - 00103: Number of Bank Revolving Accounts Reported 90-120 days past due in the Past 24 Months   - 00106: Amount of Average Balance on Revolving Accounts   - 00119: Number of Accounts Opened in the Past 6 Months   - 00121: Number of Credit Union Accounts currently Past Due   - 00122: Number of Bank Rev. Accounts reported 30+ days past due in the past 24 months   - 00124: Number of accounts reported 60 days + late in the past 24 months and Number of Public Records Ever   - 00129: Number of Accounts Reported Bad Debt in the Past 24 Months or Derogatory Public Records   - 00132: Number of Accounts Ever Reported 90 - 120 days past due   - 00133: Number of Bank Revolving Accounts Currently Reported as 60+ days past due   - 00134: Amount Past Due on Department Store Accounts with Reported Late Payments   - 00135: Total maximum credit on revolving trades reported in the past 6 months   - 00140: Number of Accounts currently paid as agreed with outstanding balances   - 00141: Number of Accounts ever reported 30 or 60 days past due   - 00142: Total Balance on All Accounts reported in the past 12 months   - 00144: Number of Bank Revolving accounts Reported 60 Days past due in the past 24 Months   - 00146: Total balances for revolving accounts reported in the past 12 months   - 00147: Number of Department Store Accounts Currently 90-120 Days Past Due   - 00148: Number of Retail Accounts Reported in the past 12 months   - 00149: Number of Auto Finance Accounts Ever paid as agreed   - 00152: Number of Auto finance Accounts reported in the past 12 months   - 00154: Number of Credit Union Accounts ever reported 90-120 days past due   - 00156: Number of Bank Revolving Accounts currently paid as agreed with outstanding balances   - 00157: Number of Accounts Currently Reported 30 days past due   - 00159: Number of Credit Union Accounts   - 00161: Number of Personal Finance accounts past due   - 00163: Number of Bank Installment accounts currently Past Due   - 00164: Number of Auto Finance accounts Currently Past Due   - 00167: Number of Finance Trade ever reported 30+ days past due   - 00168: Number of accounts opened in the past 24 months   - 00169: Percentage of Accounts paid as Agreed   - 00171: Number of Opened Accounts   - 00173: Amount Currently Past Due on Accounts   - 00175: Amount Past Due For Bank Revolving Accounts   - 00178: Number of Auto Finance Accounts   - 00179: Number of Consumer Finance accounts reported in the past 12 months   - 00182: Number of Personal Finance Accounts   - 00184: Total Available Line of Credit on Department Store Accounts Reported in the Past 12 Months   - 00186: Number of Department Store Accounts currently paid as agreed with outstanding balances   - 00189: Total Balance on Revolving Accounts reported in the past 6 Months   - 00190: Lack of Recently Reported Revolving Account Information   - 00191: Lack of Recently Reported Credit Union Accounts Information   - 00192: Lack of Recently Reported Retail Account Information   - 00193: Lack of Recently Reported Auto Finance Account Information   - 00194: Lack of Recently Reported Bank Installment Account Information   - 00195: Lack of Recently Reported Department Store Account Information   - 00197: Lack of Recently Reported Bank Revolving Account Information   - 00198: Lack of Recently Reported Balances on Accounts   - 00199: Lack of Recently Reported Status on Accounts   - 00200: Lack of Recently Reported Account Information   - 00201: No Recent Public Record Information Available   - 00202: Number of Accounts Currently Reported 60 days past due   - 00203: Number of Department Store Accounts Ever Reported 30 or 60 days past due   - 00242: Number of Bank Revolving Accounts Ever Paid as Agreed   - 00249: Number of Bank Revolving Accounts Reported in the Past 12 Months with Outstanding Balances   - 00282: Number of Bank Revolving Accounts Ever Reported 30+ days past due   - 00283: Number of Department Store Accounts Ever Reported 30+ days past due   - 00297: Length of Time Since Most Recent Bank Revolving Account Opened   - 00317: Number of Other &#39;Retail Accounts&#39; Reported as Bad Debt ever   - 00323: Number of Accounts Reported 90+ days past due/Derogatory Public Records Filed in the Past 24 months   - 00325: Number of Consumer Initiated bank Inquiries in the Past 12 Months   - 00326: Number of Bank revolving accounts Reported 30 Days Past Due in the Past 24 Months   - 00331: Number of Bank installment loans ever reported as bad debt   - 00337: Number of Retail Accounts ever reported 30+ days late   - 00345: Number of Bank Revolving Accounts Reported in the Past 12 months   - 00346: Lack of recently reported personal finance information   - 00352: Number of Dept Store accounts currently 60 days delinquent or worse   - 00353: Percent of active auto trades to total active trades   - 00354: Total High Credit of Open Bank Installment Trades in Last 12 months   - 00356: Lack of Recently Reported Consumer Finance Information   - 00359: Lack of Recently Reported Inquiry Information   - 00360: Lack of Recently Reported Bankcard Information   - 00361: Lack of Recently Reported Installment Account Information   - 00363: Number of 30 day delinquencies on Revolving accounts within last 12 months   - 00364: Number of 30 day delinquencies on installment accounts within last 12 months   - 00366: Number of 60 day delinquencies on Revolving accounts within last 12 months   - 00367: Number of 60 day delinquencies on installment accounts within last 12 months   - 00369: Number of 90 day delinquencies on Revolving accounts within last 12 months   - 00370: Number of 120-180 day delinquencies on Bankcards within last 12 months   - 00372: Number of major derogatory items on bankcards within last 12 months   - 00373: Number of major derogatory items on revolving accounts within last 12 months   - 00374: Number of bankcards reported within last 3 months with balance   - 00375: Number of revolving trades reported within last 3 months with balance   - 00376: Number of consumer initiated inquiries in past 3 months   - 00378: Balance on all open accounts reported in last 3 months   - 00380: Number of revolving trades with past due balances   - 00381: Total amount currently past due   - 00383: Total amount past due reported on installment accounts within last 3 months   - 00384: Number of open bankcards   - 00385: Number of open revolving accounts   - 00386: Total balance for open bankcards   - 00387: Total balance for open revolving accounts   - 00390: Total high credit for open revolving accounts   - 00392: Number of past due bankcards   - 00394: Number of open bankcards with alance greater than or equal to 75% of high credit reported in last 3 months   - 00395: Number of open revolving accounts with balance greater than or equal to 75% of high credit reported in last 3 months   - 00396: Number of open department store accounts with balance greater than or equal to 75% of high credit   - 00398: Number of open revolving accounts with balance greater than or equal to 50% of high credit   - 00400: Number of open installment accounts   - 00401: Number of open retail accounts   - 00403: Number of open credit union accounts   - 00404: Number of open personal finance accounts   - 00405: Number of installment accounts with past due balances reported in last 3 months   - 00406: Percent of bankcards reported satisfactory to total number of bankcards   - 00407: Percent of revolving accounts reported satisfactory to total revolving accounts   - 00408: Number of installment accounts ever 60+ days delinquent   - 00409: Number of auto finance accounts ever 60+ days delinquent   - 00411: Number of revolving accounts ever 90+ days delinquent   - 00412: Number of bankcards ever 90+ days delinquent   - 00414: Number of personal finance accounts ever 90+ days delinquent   - 00415: Number of installment accounts ever 30+ days delinquent   - 00416: Number of auto finance accounts ever 30+ days delinquent   - 00417: Number of revolving accounts ever 30+ days delinquent   - 00420: Number of 3rd party collections within last 24 months   - 00422: Number of 3rd party collections within last 12 months   - 00425: Number of Accounts With Past Due Balances reported in last 3 months   - 00426: Number of Open Department Store Accounts   - 00427: Number of Accounts Ever Reported 30+ Days Past Due   - 00428: Lack of Recently Reported Collection Information   - 00431: Number of Trades Currently reported Bad Debt   - 00432: Balance on Consumer Finance Trades   - 00433: Number of Bank Revolving Accounts Paid As Agreed   - 00434: Number of Bank Revolving Accounts Currently 30 day delinquent   - 00435: Number of Consumer Finance Trades Currently 90-120 delinquent   - 00436: Number of Consumer Finance Trades Ever Paid as Agreed   - 00437: Number Bank Revolving Trades Ever Bad Debt   - 00438: Number of Open Automotive Trades   - 00439: Number of Personal Finance Trades Ever 30 days delinquent   - 00440: Number of Auto Trades Ever Bad Debt   - 00441: Number of Auto Finance Trades Ever Bad Debt   - 00442: Number of Auto Finance Trades Ever 90+   - 00443: Total Balance on Open Bank Installment Trades   - 00444: Utilization on Bank Installment Trades   - 00445: Number of Personal Finance Trades Ever Satisfactory   - 00446: Number of Credit Union Trades Ever Bad Debt   - 00450: Number of Consumer Finance trades 90-120 days past due in past 24 months   - 00451: Number of Auto Finance Trades Ever 90-120 days delinquent   - 00453: Number of Personal Finance Trades Ever 90 - 120 days delinquent   - 00454: Number of Other Retail Trades Ever 30+   - 00455: Number of Personal Finance Trades Ever 30+   - 00456: Amount of Average Balance on Revolving Trades     Score Reason corresponding to Model Number 02502   - 00001: Number of consumer initiated inquiries in the past 6 months   - 00002: Number of Consumer Initiated Finance Company Inquiries in the Past 24 Months   - 00003: Length of time accounts have been established   - 00007: Total Amount of Available Credit on All Open Accounts   - 00008: Number of accounts with past due balances   - 00014: Total available line of credit on bank revolving accounts   - 00015: Length of time bank revolving accounts have been established   - 00019: Number of bank revolving accounts with high balances   - 00023: Number of bank installment accounts always paid as agreed   - 00028: Too few bank revolving accounts paid as agreed   - 00032: Percent of Accounts Reported in the Past 12 Months Versus Total Accounts on File   - 00033: Percent of Bank Revolving Accounts Reported in the Past 12 Months Versus Total Bank Revolving Accounts on File   - 00035: Number of accounts with reported late payments   - 00041: Percent of bank revolving accounts versus total accounts reported in the past 12 months   - 00042: Percent of department store accounts versus total accounts reported in the past 12 months   - 00043: Percent of bank installment accounts versus total accounts reported in the past 12 months   - 00052: Number of Derogatory public Records Filed in the Past 24 Months   - 00054: Number of Credit Union Accounts Reported 30+ Days Late   - 00055: Total Outstanding Balances on Department Store Accounts   - 00056: Time Since Most Recent Activity   - 00057: Percent of Accounts Opened in the Last 12 Months Versus Active Accounts   - 00058: Number of credit union accounts always paid as agreed   - 00059: Time Since Consumer Initiated Inquiry Reported   - 00064: Number of Accounts Paid As Agreed   - 00067: Number of Accounts Reported as 60 Days Late in the Past 24 Months   - 00068: Number of accounts reported as 90-120 days late in the past 24 months   - 00071: Number of Accounts with Low Balance compared to High Credit   - 00072: Number of consumer initiated inquiries in the past 12 months   - 00077: Utilization on revolving accounts reported in the past 6 months   - 00084: Insufficient Number or Lack of Bank Installment Accounts   - 00087: Number of accounts reported as 30 days late in the past 24 months   - 00090: Number of Department Store Accounts With High Balances   - 00103: Number of Bank Revolving Accounts 90 - 120 Days Late in the Past 24 Months or Status of Accounts Unknown   - 00118: Number of Auto Finance Accounts Currently or in the Past 30+ Days Late   - 00121: Number of Credit Union Accounts Past Due or Status of Acts Unknown   - 00123: Percent of Auto Finance Trades versus Total Accounts Reported in the Past 12 Months   - 00135: Total Amount of Available Credit on Revolving Trades Reported in the Last 6 Months   - 00138: Number of Bank Revolving Trades Currently Reported 90+ Days Late   - 00142: Total Balance on All Open Accounts   - 00146: Amount of Outstanding Balance on Revolving Accounts   - 00148: Number of Retail Accounts   - 00158: Number of trades established in last 3 months   - 00160: Number of Bank Revolving Trades   - 00168: Number of Trades opened in the last 24 months   - 00173: Amount Currently Past Due on Accounts   - 00175: Amount Past Due for Bank Revolving Accounts   - 00176: Number of Bank Installment Accounts Ever Reported as 90+ days past due or worse   - 00177: Number of Credit Union Accounts ever Reported as 90+ Days Past Due or Worse   - 00179: Number of Consumer Finance Trades   - 00180: Total Balance on Revolving Accounts in the Last 24 Months   - 00181: Number of accounts opened in the last 12 months   - 00182: Number of Personal Finance Accounts   - 00183: Number of Open Credit Union Accounts   - 00184: Total Available Line of Credit on Department Store Accounts   - 00185: Number of Department Store Accts 90-120 in the last 24 months or status of Department Store Accounts Unknown   - 00186: Number of Department Store Accounts Paid as Agreed with Recently Reported Balances   - 00187: Number of Automotive Accounts   - 00188: Number of accounts reported 60 days + late in the past 24 months and Number of Public Records Ever   - 00189: Total Balance on Revolving Accounts in the Last 6 Months   - 00190: Lack of Recently Reported Revolving Account Information   - 00191: Lack of Recently Reported Credit Union Accounts Information   - 00193: Lack of Recently Reported Auto Finance Account Information   - 00194: Lack of Recently Reported Bank Installment Account Information   - 00195: Lack of Recently Reported Department Store Account Information   - 00197: Lack of Recently Reported Bank Revolving Account Information   - 00198: Lack of Recently Reported Balances on Accounts   - 00199: Lack of Recently Reported Status on Accounts   - 00200: Lack of Recently Reported Account Information   - 00201: No Recent Public Record Information Available     Score Reason corresponding to Model Number 02503   - 00001: Number of consumer initiated inquiries in the past 6 months   - 00002: Number of Consumer Initiated Finance Company Inquiries in the Past 24 Months   - 00003: Length of time accounts have been established   - 00007: Total Amount of Available Credit on All Open Accounts   - 00008: Number of accounts with past due balances   - 00014: Total available line of credit on bank revolving accounts   - 00015: Length of time bank revolving accounts have been established   - 00019: Number of bank revolving accounts with high balances   - 00023: Number of bank installment accounts always paid as agreed   - 00028: Too few bank revolving accounts paid as agreed   - 00032: Percent of Accounts Reported in the Past 12 Months Versus Total Accounts on File   - 00033: Percent of Bank Revolving Accounts Reported in the Past 12 Months Versus Total Bank Revolving Accounts on File   - 00035: Number of accounts with reported late payments   - 00041: Percent of bank revolving accounts versus total accounts reported in the past 12 months   - 00042: Percent of department store accounts versus total accounts reported in the past 12 months   - 00043: Percent of bank installment accounts versus total accounts reported in the past 12 months   - 00052: Number of Derogatory public Records Filed in the Past 24 Months   - 00054: Number of Credit Union Accounts Reported 30+ Days Late   - 00055: Total Outstanding Balances on Department Store Accounts   - 00056: Time Since Most Recent Activity   - 00057: Percent of Accounts Opened in the Last 12 Months Versus Active Accounts   - 00058: Number of credit union accounts always paid as agreed   - 00059: Time Since Consumer Initiated Inquiry Reported   - 00064: Number of Accounts Paid As Agreed   - 00067: Number of Accounts Reported as 60 Days Late in the Past 24 Months   - 00068: Number of accounts reported as 90-120 days late in the past 24 months   - 00071: Number of Accounts with Low Balance compared to High Credit   - 00072: Number of consumer initiated inquiries in the past 12 months   - 00077: Utilization on revolving accounts reported in the past 6 months   - 00084: Insufficient Number or Lack of Bank Installment Accounts   - 00087: Number of accounts reported as 30 days late in the past 24 months   - 00090: Number of Department Store Accounts With High Balances   - 00103: Number of Bank Revolving Accounts 90 - 120 Days Late in the Past 24 Months or Status of Accounts Unknown   - 00118: Number of Auto Finance Accounts Currently or in the Past 30+ Days Late   - 00121: Number of Credit Union Accounts Past Due or Status of Acts Unknown   - 00123: Percent of Auto Finance Trades versus Total Accounts Reported in the Past 12 Months   - 00135: Total Amount of Available Credit on Revolving Trades Reported in the Last 6 Months   - 00138: Number of Bank Revolving Trades Currently Reported 90+ Days Late   - 00142: Total Balance on All Open Accounts   - 00146: Amount of Outstanding Balance on Revolving Accounts   - 00148: Number of Retail Accounts   - 00158: Number of trades established in last 3 months   - 00160: Number of Bank Revolving Trades   - 00168: Number of Trades opened in the last 24 months   - 00173: Amount Currently Past Due on Accounts   - 00175: Amount Past Due for Bank Revolving Accounts   - 00176: Number of Bank Installment Accounts Ever Reported as 90+ days past due or worse   - 00177: Number of Credit Union Accounts ever Reported as 90+ Days Past Due or Worse   - 00179: Number of Consumer Finance Trades   - 00180: Total Balance on Revolving Accounts in the Last 24 Months   - 00181: Number of accounts opened in the last 12 months   - 00182: Number of Personal Finance Accounts   - 00183: Number of Open Credit Union Accounts   - 00184: Total Available Line of Credit on Department Store Accounts   - 00185: Number of Department Store Accts 90-120 in the last 24 months or status of Department Store Accounts Unknown   - 00186: Number of Department Store Accounts Paid as Agreed with Recently Reported Balances   - 00187: Number of Automotive Accounts   - 00188: Number of accounts reported 60 days + late in the past 24 months and Number of Public Records Ever   - 00189: Total Balance on Revolving Accounts in the Last 6 Months   - 00190: Lack of Recently Reported Revolving Account Information   - 00191: Lack of Recently Reported Credit Union Accounts Information   - 00193: Lack of Recently Reported Auto Finance Account Information   - 00194: Lack of Recently Reported Bank Installment Account Information   - 00195: Lack of Recently Reported Department Store Account Information   - 00197: Lack of Recently Reported Bank Revolving Account Information   - 00198: Lack of Recently Reported Balances on Accounts   - 00199: Lack of Recently Reported Status on Accounts   - 00200: Lack of Recently Reported Account Information   - 00201: No Recent Public Record Information Available    Score Reason corresponding to Model Number 05146   - 5: PERCENT OF BANKCARD ACCOUNTS 60+ DAYS DELINQUENT   - 15: PERCENT OF MORTGAGE BALANCE OUTSTANDING   - 20: PERCENT OF OPEN ACCOUNTS   - 36: PERCENT OF ACCOUNTS INSTALLMENT   - 40: PERCENT OF ACCOUNTS SATISFACTORY   - 51: 30 DAYS DELINQUENCY OCCURRENCES ON INSTALLMENT ACCOUNTS   - 67: AGE OF BANKCARD ACCOUNT ACTIVITY   - 68: AGE OF BANKCARD ACCOUNTS   - 70: AGE OF INSTALLMENT ACCOUNT ACTIVITY   - 72: AGE OF JUDGMENT   - 73: AGE OF MORTGAGE ACCOUNTS   - 78: AGE OF TAX LIEN   - 79: AGE OF ACCOUNT ACTIVITY   - 80: AGE OF ACCOUNTS   - 81: TOTAL AMOUNT PAST DUE FOR BANKCARD ACCOUNTS   - 83: BANKCARD HIGH CREDIT   - 95: NUMBER OF AUTO ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 106: NUMBER OF BANKCARD ACCOUNTS WITH BALANCE   - 107: NUMBER OF BANKCARD ACCOUNTS WITH HIGH UTILIZATION   - 109: NUMBER OF COLLECTIONS   - 123: NUMBER OF INQUIRIES   - 124: NUMBER OF INSTALLMENT ACCOUNTS   - 137: NUMBER OF MORTGAGE ACCOUNTS WITH HIGH BALANCE OUTSTANDING   - 138: NUMBER OF MORTGAGE ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 144: NUMBER OF OPEN MORTGAGE ACCOUNTS   - 166: NUMBER OF REVOLVING ACCOUNTS   - 176: NUMBER OF REVOLVING ACCOUNTS PAST DUE   - 178: NUMBER OF REVOLVING ACCOUNTS WITH HIGH UTILIZATION   - 179: NUMBER OF REVOLVING ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 191: NUMBER OF ACCOUNTS   - 201: NUMBER OF ACCOUNTS WITH BALANCE   - 202: NUMBER OF ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 203: OCCURRENCE OF SEVERE DEROGATORY EVENT   - 209: TOTAL AMOUNT PAST DUE FOR INSTALLMENT ACCOUNTS   - 214: TOTAL BALANCE ON BANKCARD ACCOUNTS   - 216: TOTAL BALANCE ON DEPARTMENT STORE ACCOUNTS   - 219: TOTAL BALANCE ON PERSONAL FINANCE OR STUDENT LOAN ACCOUNTS   - 220: TOTAL BALANCE ON RETAIL ACCOUNTS   - 221: TOTAL BALANCE ON REVOLVING ACCOUNTS   - 223: TOTAL BALANCE ON ACCOUNTS   - 224: TOTAL COLLECTION AMOUNT   - 226: WORST RATING FOR MORTGAGE ACCOUNTS   - 290: INSUFFICIENT INFORMATION ON OR LACK OF BANKCARD ACCOUNTS   - 292: INSUFFICIENT INFORMATION ON OR LACK OF DEPARTMENT STORE ACCOUNTS   - 293: INSUFFICIENT INFORMATION ON OR LACK OF INSTALLMENT ACCOUNTS   - 294: INSUFFICIENT INFORMATION ON OR LACK OF MORTGAGE ACCOUNTS   - 295: INSUFFICIENT INFORMATION ON OR LACK OF PERSONAL FINANCE OR STUDENT LOAN ACCOUNTS   - 297: INSUFFICIENT INFORMATION ON OR LACK OF REVOLVING ACCOUNTS   - 299: INSUFFICIENT INFORMATION ON OR LACK OF ACCOUNTS   - 304: NUMBER OF NON-UTILITY INQUIRIES   - 305: NUMBER OF AUTO ACCOUNTS   - 306: NUMBER OF STUDENT LOAN ACCOUNTS   - 308: NUMBER OF MORTGAGE ACCOUNTS   - 317: 60+ DAYS DELINQUENCY OCCURRENCES ON INSTALLMENT ACCOUNTS   - 332: WORST RATING FOR ALL ACCOUNTS   - C33: PERCENT OF ACCOUNTS STUDENT LOAN   - C91: NO TRADE INFORMATION   - C92: OCCURRENCE OF BANKRUPTCY EVENT   - C93: OCCURRENCE OF 60+ DAYS DELINQUENT OR DEROGATORY   - C94: OCCURRENCE OF PUBLIC RECORDS OTHER THAN TAX LIENS, SUITS AND JUDGMENTS   - C95: PERSONAL FINANCE OR STUDENT LOAN TRADES ON FILE    Score Reason corresponding to Model Number 05147   - 5: PERCENT OF BANKCARD ACCOUNTS 60+ DAYS DELINQUENT   - 15: PERCENT OF MORTGAGE BALANCE OUTSTANDING   - 20: PERCENT OF OPEN ACCOUNTS   - 36: PERCENT OF ACCOUNTS INSTALLMENT   - 40: PERCENT OF ACCOUNTS SATISFACTORY   - 51: 30 DAYS DELINQUENCY OCCURRENCES ON INSTALLMENT ACCOUNTS   - 67: AGE OF BANKCARD ACCOUNT ACTIVITY   - 68: AGE OF BANKCARD ACCOUNTS   - 70: AGE OF INSTALLMENT ACCOUNT ACTIVITY   - 72: AGE OF JUDGMENT   - 73: AGE OF MORTGAGE ACCOUNTS   - 78: AGE OF TAX LIEN   - 79: AGE OF ACCOUNT ACTIVITY   - 80: AGE OF ACCOUNTS   - 81: TOTAL AMOUNT PAST DUE FOR BANKCARD ACCOUNTS   - 83: BANKCARD HIGH CREDIT   - 95: NUMBER OF AUTO ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 106: NUMBER OF BANKCARD ACCOUNTS WITH BALANCE   - 107: NUMBER OF BANKCARD ACCOUNTS WITH HIGH UTILIZATION   - 109: NUMBER OF COLLECTIONS   - 123: NUMBER OF INQUIRIES   - 124: NUMBER OF INSTALLMENT ACCOUNTS   - 137: NUMBER OF MORTGAGE ACCOUNTS WITH HIGH BALANCE OUTSTANDING   - 138: NUMBER OF MORTGAGE ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 144: NUMBER OF OPEN MORTGAGE ACCOUNTS   - 166: NUMBER OF REVOLVING ACCOUNTS   - 176: NUMBER OF REVOLVING ACCOUNTS PAST DUE   - 178: NUMBER OF REVOLVING ACCOUNTS WITH HIGH UTILIZATION   - 179: NUMBER OF REVOLVING ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 191: NUMBER OF ACCOUNTS   - 201: NUMBER OF ACCOUNTS WITH BALANCE   - 202: NUMBER OF ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 203: OCCURRENCE OF SEVERE DEROGATORY EVENT   - 209: TOTAL AMOUNT PAST DUE FOR INSTALLMENT ACCOUNTS   - 214: TOTAL BALANCE ON BANKCARD ACCOUNTS   - 216: TOTAL BALANCE ON DEPARTMENT STORE ACCOUNTS   - 219: TOTAL BALANCE ON PERSONAL FINANCE OR STUDENT LOAN ACCOUNTS   - 220: TOTAL BALANCE ON RETAIL ACCOUNTS   - 221: TOTAL BALANCE ON REVOLVING ACCOUNTS   - 223: TOTAL BALANCE ON ACCOUNTS   - 224: TOTAL COLLECTION AMOUNT   - 226: WORST RATING FOR MORTGAGE ACCOUNTS   - 290: INSUFFICIENT INFORMATION ON OR LACK OF BANKCARD ACCOUNTS   - 292: INSUFFICIENT INFORMATION ON OR LACK OF DEPARTMENT STORE ACCOUNTS   - 293: INSUFFICIENT INFORMATION ON OR LACK OF INSTALLMENT ACCOUNTS   - 294: INSUFFICIENT INFORMATION ON OR LACK OF MORTGAGE ACCOUNTS   - 295: INSUFFICIENT INFORMATION ON OR LACK OF PERSONAL FINANCE OR STUDENT LOAN ACCOUNTS   - 297: INSUFFICIENT INFORMATION ON OR LACK OF REVOLVING ACCOUNTS   - 299: INSUFFICIENT INFORMATION ON OR LACK OF ACCOUNTS   - 304: NUMBER OF NON-UTILITY INQUIRIES   - 305: NUMBER OF AUTO ACCOUNTS   - 306: NUMBER OF STUDENT LOAN ACCOUNTS   - 308: NUMBER OF MORTGAGE ACCOUNTS   - 317: 60+ DAYS DELINQUENCY OCCURRENCES ON INSTALLMENT ACCOUNTS   - 332: WORST RATING FOR ALL ACCOUNTS   - C33: PERCENT OF ACCOUNTS STUDENT LOAN   - C91: NO TRADE INFORMATION   - C92: OCCURRENCE OF BANKRUPTCY EVENT   - C93: OCCURRENCE OF 60+ DAYS DELINQUENT OR DEROGATORY   - C94: OCCURRENCE OF PUBLIC RECORDS OTHER THAN TAX LIENS, SUITS AND JUDGMENTS   - C95: PERSONAL FINANCE OR STUDENT LOAN TRADES ON FILE        Score Reason corresponding to Model Number 05276   - 00005: PERCENT OF BANKCARD ACCOUNTS 60+ DAYS DELINQUENT   - 00015: PERCENT OF MORTGAGE BALANCE OUTSTANDING   - 00020: PERCENT OF OPEN ACCOUNTS   - 00036: PERCENT OF ACCOUNTS INSTALLMENT   - 00040: PERCENT OF ACCOUNTS SATISFACTORY   - 00051: 30 DAYS DELINQUENCY OCCURRENCES ON INSTALLMENT ACCOUNTS   - 00067: AGE OF BANKCARD ACCOUNT ACTIVITY   - 00068: AGE OF BANKCARD ACCOUNTS   - 00070: AGE OF INSTALLMENT ACCOUNT ACTIVITY   - 00072: AGE OF JUDGMENT   - 00073: AGE OF MORTGAGE ACCOUNTS   - 00078: AGE OF TAX LIEN   - 00079: AGE OF ACCOUNT ACTIVITY   - 00080: AGE OF ACCOUNTS   - 00081: TOTAL AMOUNT PAST DUE FOR BANKCARD ACCOUNTS   - 00083: BANKCARD HIGH CREDIT   - 00095: NUMBER OF AUTO ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 00106: NUMBER OF BANKCARD ACCOUNTS WITH BALANCE   - 00107: NUMBER OF BANKCARD ACCOUNTS WITH HIGH UTILIZATION   - 00109: NUMBER OF COLLECTIONS   - 00123: NUMBER OF INQUIRIES   - 00124: NUMBER OF INSTALLMENT ACCOUNTS   - 00137: NUMBER OF MORTGAGE ACCOUNTS WITH HIGH BALANCE OUTSTANDING   - 00138: NUMBER OF MORTGAGE ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 00144: NUMBER OF OPEN MORTGAGE ACCOUNTS   - 00166: NUMBER OF REVOLVING ACCOUNTS   - 00176: NUMBER OF REVOLVING ACCOUNTS PAST DUE   - 00178: NUMBER OF REVOLVING ACCOUNTS WITH HIGH UTILIZATION   - 00179: NUMBER OF REVOLVING ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 00191: NUMBER OF ACCOUNTS   - 00201: NUMBER OF ACCOUNTS WITH BALANCE   - 00202: NUMBER OF ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 00203: OCCURRENCE OF SEVERE DEROGATORY EVENT   - 00209: TOTAL AMOUNT PAST DUE FOR INSTALLMENT ACCOUNTS   - 00214: TOTAL BALANCE ON BANKCARD ACCOUNTS   - 00216: TOTAL BALANCE ON DEPARTMENT STORE ACCOUNTS   - 00219: TOTAL BALANCE ON PERSONAL FINANCE OR STUDENT LOAN ACCOUNTS   - 00220: TOTAL BALANCE ON RETAIL ACCOUNTS   - 00221: TOTAL BALANCE ON REVOLVING ACCOUNTS   - 00223: TOTAL BALANCE ON ACCOUNTS   - 00224: TOTAL COLLECTION AMOUNT   - 00226: WORST RATING FOR MORTGAGE ACCOUNTS   - 00290: INSUFFICIENT INFORMATION ON OR LACK OF BANKCARD ACCOUNTS   - 00292: INSUFFICIENT INFORMATION ON OR LACK OF DEPARTMENT STORE ACCOUNTS   - 00293: INSUFFICIENT INFORMATION ON OR LACK OF INSTALLMENT ACCOUNTS   - 00294: INSUFFICIENT INFORMATION ON OR LACK OF MORTGAGE ACCOUNTS   - 00295: INSUFFICIENT INFORMATION ON OR LACK OF PERSONAL FINANCE OR STUDENT LOAN ACCOUNTS   - 00297: INSUFFICIENT INFORMATION ON OR LACK OF REVOLVING ACCOUNTS   - 00299: INSUFFICIENT INFORMATION ON OR LACK OF ACCOUNTS   - 00304: NUMBER OF NON-UTILITY INQUIRIES   - 00305: NUMBER OF AUTO ACCOUNTS   - 00306: NUMBER OF STUDENT LOAN ACCOUNTS   - 00308: NUMBER OF MORTGAGE ACCOUNTS   - 00317: 60+ DAYS DELINQUENCY OCCURRENCES ON INSTALLMENT ACCOUNTS   - 00332: WORST RATING FOR ALL ACCOUNTS   - 00701: PERCENT OF ACCOUNTS STUDENT LOAN   - 00702: NO TRADE INFORMATION   - 00703: OCCURRENCE OF BANKRUPTCY EVENT   - 00704: OCCURRENCE OF 60+ DAYS DELINQUENT OR DEROGATORY   - 00705: OCCURRENCE OF PUBLIC RECORDS OTHER THAN TAX LIENS, SUITS AND JUDGMENTS   - 00706: PERSONAL FINANCE OR STUDENT LOAN TRADES ON FILE  Score Reason corresponding to Model Number 05277   - 00005: PERCENT OF BANKCARD ACCOUNTS 60+ DAYS DELINQUENT   - 00015: PERCENT OF MORTGAGE BALANCE OUTSTANDING   - 00020: PERCENT OF OPEN ACCOUNTS   - 00036: PERCENT OF ACCOUNTS INSTALLMENT   - 00040: PERCENT OF ACCOUNTS SATISFACTORY   - 00051: 30 DAYS DELINQUENCY OCCURRENCES ON INSTALLMENT ACCOUNTS   - 00067: AGE OF BANKCARD ACCOUNT ACTIVITY   - 00068: AGE OF BANKCARD ACCOUNTS   - 00070: AGE OF INSTALLMENT ACCOUNT ACTIVITY   - 00072: AGE OF JUDGMENT   - 00073: AGE OF MORTGAGE ACCOUNTS   - 00078: AGE OF TAX LIEN   - 00079: AGE OF ACCOUNT ACTIVITY   - 00080: AGE OF ACCOUNTS   - 00081: TOTAL AMOUNT PAST DUE FOR BANKCARD ACCOUNTS   - 00083: BANKCARD HIGH CREDIT   - 00095: NUMBER OF AUTO ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 00106: NUMBER OF BANKCARD ACCOUNTS WITH BALANCE   - 00107: NUMBER OF BANKCARD ACCOUNTS WITH HIGH UTILIZATION   - 00109: NUMBER OF COLLECTIONS   - 00123: NUMBER OF INQUIRIES   - 00124: NUMBER OF INSTALLMENT ACCOUNTS   - 00137: NUMBER OF MORTGAGE ACCOUNTS WITH HIGH BALANCE OUTSTANDING   - 00138: NUMBER OF MORTGAGE ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 00144: NUMBER OF OPEN MORTGAGE ACCOUNTS   - 00166: NUMBER OF REVOLVING ACCOUNTS   - 00176: NUMBER OF REVOLVING ACCOUNTS PAST DUE   - 00178: NUMBER OF REVOLVING ACCOUNTS WITH HIGH UTILIZATION   - 00179: NUMBER OF REVOLVING ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 00191: NUMBER OF ACCOUNTS   - 00201: NUMBER OF ACCOUNTS WITH BALANCE   - 00202: NUMBER OF ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 00203: OCCURRENCE OF SEVERE DEROGATORY EVENT   - 00209: TOTAL AMOUNT PAST DUE FOR INSTALLMENT ACCOUNTS   - 00214: TOTAL BALANCE ON BANKCARD ACCOUNTS   - 00216: TOTAL BALANCE ON DEPARTMENT STORE ACCOUNTS   - 00219: TOTAL BALANCE ON PERSONAL FINANCE OR STUDENT LOAN ACCOUNTS   - 00220: TOTAL BALANCE ON RETAIL ACCOUNTS   - 00221: TOTAL BALANCE ON REVOLVING ACCOUNTS   - 00223: TOTAL BALANCE ON ACCOUNTS   - 00224: TOTAL COLLECTION AMOUNT   - 00226: WORST RATING FOR MORTGAGE ACCOUNTS   - 00290: INSUFFICIENT INFORMATION ON OR LACK OF BANKCARD ACCOUNTS   - 00292: INSUFFICIENT INFORMATION ON OR LACK OF DEPARTMENT STORE ACCOUNTS   - 00293: INSUFFICIENT INFORMATION ON OR LACK OF INSTALLMENT ACCOUNTS   - 00294: INSUFFICIENT INFORMATION ON OR LACK OF MORTGAGE ACCOUNTS   - 00295: INSUFFICIENT INFORMATION ON OR LACK OF PERSONAL FINANCE OR STUDENT LOAN ACCOUNTS   - 00297: INSUFFICIENT INFORMATION ON OR LACK OF REVOLVING ACCOUNTS   - 00299: INSUFFICIENT INFORMATION ON OR LACK OF ACCOUNTS   - 00304: NUMBER OF NON-UTILITY INQUIRIES   - 00305: NUMBER OF AUTO ACCOUNTS   - 00306: NUMBER OF STUDENT LOAN ACCOUNTS   - 00308: NUMBER OF MORTGAGE ACCOUNTS   - 00317: 60+ DAYS DELINQUENCY OCCURRENCES ON INSTALLMENT ACCOUNTS   - 00332: WORST RATING FOR ALL ACCOUNTS   - 00701: PERCENT OF ACCOUNTS STUDENT LOAN   - 00702: NO TRADE INFORMATION   - 00703: OCCURRENCE OF BANKRUPTCY EVENT   - 00704: OCCURRENCE OF 60+ DAYS DELINQUENT OR DEROGATORY   - 00705: OCCURRENCE OF PUBLIC RECORDS OTHER THAN TAX LIENS, SUITS AND JUDGMENTS   - 00706: PERSONAL FINANCE OR STUDENT LOAN TRADES ON FILE     Score Reason corresponding to Model Number 02037   - 00003: Length of Time Accounts Have Been Established   - 00005: Too Few Accounts Established   - 00008: Number of Accounts With Past Due Balances   - 00009: Current Delinquent Rating Reported   - 00024: Utilization of Available Credit on Accounts   - 00027: Too Few Accounts Currently or in the Past Paid as Agreed   - 00028: Too Few Bank Revolving Accounts Currently or in the Past Paid as Agreed   - 00041: Percent of Bank Revolving Accounts versus Total Accounts Reported in the Past 12 Months   - 00042: Percent of Department Store Accounts versus Total Accounts Reported in the Past 12 Months   - 00043: Percent of Bank Installment Accounts versus Total Accounts Reported in the Past 12 Months   - 00061: Number of Derogatory Public Record Items on File   - 00062: Number of Accounts Not Paid as Agreed in the Past 24 Months   - 00071: Number of Accounts with Low Balances of High Credit is Too Few in the Last 12 Months   - 00072: Number of Consumer Initiated Inquiries in the Past 12 Months   - 00073: Number of Consumer Initiated Retail Inquiries in the Past 24 Months   - 00074: Number of Telco/Utility Accounts Reported as Bad Debt   - 00075: Too Few Auto Finance Accounts with No Reported Late Payments   - 00076: Percent of Credit Union Accounts versus Total Accounts Reported in the Past 12 Months   - 00077: Utilization on Revolving Accounts Reported in the Past 6 Months         Score Reason corresponding to Model Number 02525   - 00003: Length of Time Accounts Have Been Established   - 00005: Too Few Accounts Established   - 00008: Number of Accounts With Past Due Balances   - 00009: Current Delinquent Rating Reported   - 00024: Utilization of Available Credit on Accounts   - 00027: Too Few Accounts Currently or in the Past Paid as Agreed   - 00028: Too Few Bank Revolving Accounts Currently or in the Past Paid as Agreed   - 00041: Percent of Bank Revolving Accounts versus Total Accounts Reported in the Past 12 Months   - 00042: Percent of Department Store Accounts versus Total Accounts Reported in the Past 12 Months   - 00043: Percent of Bank Installment Accounts versus Total Accounts Reported in the Past 12 Months   - 00061: Number of Derogatory Public Record Items on File   - 00062: Number of Accounts Not Paid as Agreed in the Past 24 Months   - 00071: Number of Accounts with Low Balances of High Credit is Too Few in the Last 12 Months   - 00072: Number of Consumer Initiated Inquiries in the Past 12 Months   - 00073: Number of Consumer Initiated Retail Inquiries in the Past 24 Months   - 00074: Number of Telco/Utility Accounts Reported as Bad Debt   - 00075: Too Few Auto Finance Accounts with No Reported Late Payments   - 00076: Percent of Credit Union Accounts versus Total Accounts Reported in the Past 12 Months   - 00077: Utilization on Revolving Accounts Reported in the Past 6 Months     Score Reason corresponding to Model Number 02725   - 00003: Length of Time Accounts have been opened   - 00006: Number of Accounts Reported in the Past 12 Months   - 00007: Total Amount of Available Credit on All Accounts reported in the past 12 months   - 00008: Number of Accounts with Past Due Balances   - 00010: Number of Accounts Reported in the Past 12 Months With Outstanding Balances   - 00011: Number of Accounts With High Balances   - 00015: Length of Time Bank Revolving Accounts Have Been opened   - 00019: Number of Bank Revolving Accounts with High Balances   - 00024: Utilization of Available Credit on Accounts   - 00034: Percent of Department Store Accounts Reported in Past 12 months   - 00035: Number of Accounts ever reported 30 + days past due   - 00041: Percent of Bank Revolving accounts versus Total Accounts   - 00054: Number of Credit Union Accounts ever reported 30+ days past due   - 00062: Number of Accounts reported 30+ days past due in the past 24 months   - 00072: Number of Consumer Initiated Inquiries in the Past 12 Months   - 00077: Utilization on Revolving Accounts Reported in the Past 6 Months   - 00124: Number of accounts reported 60 days + late in the past 24 months and Number of Public Records Ever   - 00159: Number of Credit Union Accounts   - 00169: Percentage of Accounts paid as Agreed   - 00181: Number of Accounts Opened in the Past 12 Months   - 00190: Lack of Recently Reported Revolving Account Information   - 00191: Lack of Recently Reported Credit Union Account Information   - 00197: Lack of Recently Reported Bank Revolving Account Information   - 00198: Lack of Recently Reported Balances on Accounts   - 00199: Lack of Recently Reported Status on Accounts   - 00200: Lack of Recently Reported Account Information   - 00201: No Recent Public Record Information Available   - 00218: Presence of a Derogatory Public Record Item   - 00322: Number of revolving trades reported in the past 12 months      Score Reason corresponding to Model Number 02874   - 00003: Percent of Bankcard Balance Past Due   - 00012: Percent of Installment Balance Outstanding   - 00019: Percent of Open Revolving Trades   - 00020: Percent of Open Trades   - 00025: Percent of Revolving Trades 90+ Days Delinquent   - 00026: Percent of Revolving Trades Opened Recently   - 00030: Percent of Trades 120+ Days Delinquent   - 00031: Percent of Trades 60+ Days Delinquent   - 00032: Percent of Trades 90+ Days Delinquent   - 00035: Percent of Trades Department Store   - 00036: Percent of Trades Installment   - 00037: Percent of Trades Opened Recently   - 00038: Percent of Trades Retail   - 00039: Percent of Trades Revolving   - 00040: Percent of Trades Satisfactory   - 00041: Percent of Trades with Major Derogatory Event   - 00042: 120-180 or More Days Delinquency Occurrences   - 00044: 120-180 or More Days Delinquency Occurrences on Department Store Trades   - 00045: 120-180 or More Days Delinquency Occurrences on Installment Trades   - 00048: 30 Days Delinquency Occurrences   - 00051: 30 Days Delinquency Occurrences on Installment Trades   - 00053: 30 Days Delinquency Occurrences on Revolving Trades   - 00054: 60 Days Delinquency Occurrences   - 00059: 60 Days Delinquency Occurrences on Revolving Trades   - 00060: 90 Days Delinquency Occurrences   - 00068: Age of Bankcard Trades   - 00069: Age of Department Store Trades   - 00071: Age of Installment Trades   - 00072: Age of Judgment   - 00073: Age of Mortgage Trades   - 00074: Age of Retail Trades   - 00076: Age of Revolving Trades   - 00079: Age of Trade Activity   - 00080: Age of Trades   - 00083: Bankcard High Credit   - 00084: Bankcard Utilization   - 00088: Mortgage High Credit   - 00094: Number of Auto Finance Trades with Balance Outstanding   - 00103: Number of Bankcard Trades 90+ Days Delinquent   - 00107: Number of Bankcard Trades with High Utilization   - 00109: Number of Collections   - 00120: Number of Department Store Trades with Balance   - 00123: Number of Inquiries   - 00124: Number of Installment Trades   - 00126: Number of Installment Trades 120-180 or More Days Delinquent   - 00129: Number of Installment Trades 60+ Days Delinquent   - 00133: Number of Installment Trades Opened Recently   - 00135: Number of Installment Trades with High Balance Outstanding   - 00136: Number of Installment Trades with Major Derogatory Event   - 00139: Number of Open Auto Finance Trades   - 00140: Number of Open Bankcard Trades   - 00141: Number of Open Credit Union Trades   - 00142: Number of Open Department Store Trades   - 00144: Number of Open Mortgage Trades   - 00145: Number of Open Personal Finance Trades   - 00146: Number of Open Retail Trades   - 00148: Number of Open Sales Finance Trades   - 00154: Number of Recent Inquiries   - 00164: Number of Retail Trades with High Utilization   - 00166: Number of Revolving Trades   - 00173: Number of Revolving Trades 90+ Days Delinquent   - 00174: Number of Revolving Trades Less Than 59 Days Delinquent   - 00175: Number of Revolving Trades Opened Recently   - 00178: Number of Revolving Trades with High Utilization   - 00185: Number of Satisfactory Bankcard Trades   - 00190: Number of Satisfactory Trades   - 00191: Number of Trades   - 00193: Number of Trades 120-180 or More Days Delinquent   - 00194: Number of Trades 30 Days Delinquent   - 00195: Number of Trades 60 Days Delinquent   - 00197: Number of Trades 90 Days Delinquent   - 00199: Number of Trades Opened Recently   - 00200: Number of Trades Past Due   - 00202: Number of Trades with Major Derogatory Event   - 00205: Revolving High Credit   - 00206: Revolving Utilization   - 00209: Total Amount Past Due for Installment Trades   - 00211: Total Amount Past Due for Revolving Trades   - 00212: Total Amount Past Due for Trades   - 00214: Total Balance on Bankcard Trades   - 00215: Total Balance on Credit Union Trades   - 00216: Total Balance on Department Store Trades   - 00217: Total Balance on Installment Trades   - 00219: Total Balance on Personal Finance Trades   - 00220: Total Balance on Retail Trades   - 00221: Total Balance on Revolving Trades   - 00222: Total Balance on Sales Finance Trades   - 00223: Total Balance on Trades   - 00224: Total Collection Amount   - 00226: Worst Rating for Mortgage Trades   - 00290: Insufficient information on or lack of bankcard trades   - 00291: Insufficient information on or lack of credit union trades   - 00292: Insufficient information on or lack of department store trades   - 00293: Insufficient information on or lack of installment trades   - 00294: Insufficient information on or lack of mortgage trades   - 00295: Insufficient information on or lack of personal finance trades   - 00296: Insufficient information on or lack of retail trades   - 00297: Insufficient information on or lack of revolving trades   - 00298: Insufficient information on or lack of sales finance trades   - 00299: Insufficient information on or lack of trades   - 00301: 30 Days or Worse Delinquency Occurrences   - 00302: Number of Trades 30 Days or Worse Delinquent   - 00303: Number of Trades 30 Days or Worse Delinquent or with Major Derogatory Event   - 00304: 30 Days or Worse Delinquency Occurrences on Installment Trades   - 00305: 60 Days or Worse Delinquency Occurrences on Revolving Trades   Score Reason corresponding to Model Number 02875   - 00003: Percent of Bankcard Balance Past Due   - 00012: Percent of Installment Balance Outstanding   - 00019: Percent of Open Revolving Trades   - 00020: Percent of Open Trades   - 00025: Percent of Revolving Trades 90+ Days Delinquent   - 00026: Percent of Revolving Trades Opened Recently   - 00030: Percent of Trades 120+ Days Delinquent   - 00031: Percent of Trades 60+ Days Delinquent   - 00032: Percent of Trades 90+ Days Delinquent   - 00035: Percent of Trades Department Store   - 00036: Percent of Trades Installment   - 00037: Percent of Trades Opened Recently   - 00038: Percent of Trades Retail   - 00039: Percent of Trades Revolving   - 00040: Percent of Trades Satisfactory   - 00041: Percent of Trades with Major Derogatory Event   - 00042: 120-180 or More Days Delinquency Occurrences   - 00044: 120-180 or More Days Delinquency Occurrences on Department Store Trades   - 00045: 120-180 or More Days Delinquency Occurrences on Installment Trades   - 00048: 30 Days Delinquency Occurrences   - 00051: 30 Days Delinquency Occurrences on Installment Trades   - 00053: 30 Days Delinquency Occurrences on Revolving Trades   - 00054: 60 Days Delinquency Occurrences   - 00059: 60 Days Delinquency Occurrences on Revolving Trades   - 00060: 90 Days Delinquency Occurrences   - 00068: Age of Bankcard Trades   - 00069: Age of Department Store Trades   - 00071: Age of Installment Trades   - 00072: Age of Judgment   - 00073: Age of Mortgage Trades   - 00074: Age of Retail Trades   - 00076: Age of Revolving Trades   - 00079: Age of Trade Activity   - 00080: Age of Trades   - 00083: Bankcard High Credit   - 00084: Bankcard Utilization   - 00088: Mortgage High Credit   - 00094: Number of Auto Finance Trades with Balance Outstanding   - 00103: Number of Bankcard Trades 90+ Days Delinquent   - 00107: Number of Bankcard Trades with High Utilization   - 00109: Number of Collections   - 00120: Number of Department Store Trades with Balance   - 00123: Number of Inquiries   - 00124: Number of Installment Trades   - 00126: Number of Installment Trades 120-180 or More Days Delinquent   - 00129: Number of Installment Trades 60+ Days Delinquent   - 00133: Number of Installment Trades Opened Recently   - 00135: Number of Installment Trades with High Balance Outstanding   - 00136: Number of Installment Trades with Major Derogatory Event   - 00139: Number of Open Auto Finance Trades   - 00140: Number of Open Bankcard Trades   - 00141: Number of Open Credit Union Trades   - 00142: Number of Open Department Store Trades   - 00144: Number of Open Mortgage Trades   - 00145: Number of Open Personal Finance Trades   - 00146: Number of Open Retail Trades   - 00148: Number of Open Sales Finance Trades   - 00154: Number of Recent Inquiries   - 00164: Number of Retail Trades with High Utilization   - 00166: Number of Revolving Trades   - 00173: Number of Revolving Trades 90+ Days Delinquent   - 00174: Number of Revolving Trades Less Than 59 Days Delinquent   - 00175: Number of Revolving Trades Opened Recently   - 00178: Number of Revolving Trades with High Utilization   - 00185: Number of Satisfactory Bankcard Trades   - 00190: Number of Satisfactory Trades   - 00191: Number of Trades   - 00193: Number of Trades 120-180 or More Days Delinquent   - 00194: Number of Trades 30 Days Delinquent   - 00195: Number of Trades 60 Days Delinquent   - 00197: Number of Trades 90 Days Delinquent   - 00199: Number of Trades Opened Recently   - 00200: Number of Trades Past Due   - 00202: Number of Trades with Major Derogatory Event   - 00205: Revolving High Credit   - 00206: Revolving Utilization   - 00209: Total Amount Past Due for Installment Trades   - 00211: Total Amount Past Due for Revolving Trades   - 00212: Total Amount Past Due for Trades   - 00214: Total Balance on Bankcard Trades   - 00215: Total Balance on Credit Union Trades   - 00216: Total Balance on Department Store Trades   - 00217: Total Balance on Installment Trades   - 00219: Total Balance on Personal Finance Trades   - 00220: Total Balance on Retail Trades   - 00221: Total Balance on Revolving Trades   - 00222: Total Balance on Sales Finance Trades   - 00223: Total Balance on Trades   - 00224: Total Collection Amount   - 00226: Worst Rating for Mortgage Trades   - 00290: Insufficient information on or lack of bankcard trades   - 00291: Insufficient information on or lack of credit union trades   - 00292: Insufficient information on or lack of department store trades   - 00293: Insufficient information on or lack of installment trades   - 00294: Insufficient information on or lack of mortgage trades   - 00295: Insufficient information on or lack of personal finance trades   - 00296: Insufficient information on or lack of retail trades   - 00297: Insufficient information on or lack of revolving trades   - 00298: Insufficient information on or lack of sales finance trades   - 00299: Insufficient information on or lack of trades   - 00301: 30 Days or Worse Delinquency Occurrences   - 00302: Number of Trades 30 Days or Worse Delinquent   - 00303: Number of Trades 30 Days or Worse Delinquent or with Major Derogatory Event   - 00304: 30 Days or Worse Delinquency Occurrences on Installment Trades   - 00305: 60 Days or Worse Delinquency Occurrences on Revolving Trades    Score Reason corresponding to Model Number 02893   - 00003: Percent of Bankcard Balance Past Due   - 00012: Percent of Installment Balance Outstanding   - 00019: Percent of Open Revolving Trades   - 00020: Percent of Open Trades   - 00025: Percent of Revolving Trades 90+ Days Delinquent   - 00026: Percent of Revolving Trades Opened Recently   - 00030: Percent of Trades 120+ Days Delinquent   - 00031: Percent of Trades 60+ Days Delinquent   - 00032: Percent of Trades 90+ Days Delinquent   - 00035: Percent of Trades Department Store   - 00036: Percent of Trades Installment   - 00037: Percent of Trades Opened Recently   - 00038: Percent of Trades Retail   - 00039: Percent of Trades Revolving   - 00040: Percent of Trades Satisfactory   - 00041: Percent of Trades with Major Derogatory Event   - 00042: 120-180 or More Days Delinquency Occurrences   - 00044: 120-180 or More Days Delinquency Occurrences on Department Store Trades   - 00045: 120-180 or More Days Delinquency Occurrences on Installment Trades   - 00048: 30 Days Delinquency Occurrences   - 00051: 30 Days Delinquency Occurrences on Installment Trades   - 00053: 30 Days Delinquency Occurrences on Revolving Trades   - 00054: 60 Days Delinquency Occurrences   - 00059: 60 Days Delinquency Occurrences on Revolving Trades   - 00060: 90 Days Delinquency Occurrences   - 00068: Age of Bankcard Trades   - 00069: Age of Department Store Trades   - 00071: Age of Installment Trades   - 00072: Age of Judgment   - 00073: Age of Mortgage Trades   - 00074: Age of Retail Trades   - 00076: Age of Revolving Trades   - 00079: Age of Trade Activity   - 00080: Age of Trades   - 00083: Bankcard High Credit   - 00084: Bankcard Utilization   - 00088: Mortgage High Credit   - 00094: Number of Auto Finance Trades with Balance Outstanding   - 00103: Number of Bankcard Trades 90+ Days Delinquent   - 00107: Number of Bankcard Trades with High Utilization   - 00109: Number of Collections   - 00120: Number of Department Store Trades with Balance   - 00123: Number of Inquiries   - 00124: Number of Installment Trades   - 00126: Number of Installment Trades 120-180 or More Days Delinquent   - 00129: Number of Installment Trades 60+ Days Delinquent   - 00133: Number of Installment Trades Opened Recently   - 00135: Number of Installment Trades with High Balance Outstanding   - 00136: Number of Installment Trades with Major Derogatory Event   - 00139: Number of Open Auto Finance Trades   - 00140: Number of Open Bankcard Trades   - 00141: Number of Open Credit Union Trades   - 00142: Number of Open Department Store Trades   - 00144: Number of Open Mortgage Trades   - 00145: Number of Open Personal Finance Trades   - 00146: Number of Open Retail Trades   - 00148: Number of Open Sales Finance Trades   - 00154: Number of Recent Inquiries   - 00164: Number of Retail Trades with High Utilization   - 00166: Number of Revolving Trades   - 00173: Number of Revolving Trades 90+ Days Delinquent   - 00174: Number of Revolving Trades Less Than 59 Days Delinquent   - 00175: Number of Revolving Trades Opened Recently   - 00178: Number of Revolving Trades with High Utilization   - 00185: Number of Satisfactory Bankcard Trades   - 00190: Number of Satisfactory Trades   - 00191: Number of Trades   - 00193: Number of Trades 120-180 or More Days Delinquent   - 00194: Number of Trades 30 Days Delinquent   - 00195: Number of Trades 60 Days Delinquent   - 00197: Number of Trades 90 Days Delinquent   - 00199: Number of Trades Opened Recently   - 00200: Number of Trades Past Due   - 00202: Number of Trades with Major Derogatory Event   - 00205: Revolving High Credit   - 00206: Revolving Utilization   - 00209: Total Amount Past Due for Installment Trades   - 00211: Total Amount Past Due for Revolving Trades   - 00212: Total Amount Past Due for Trades   - 00214: Total Balance on Bankcard Trades   - 00215: Total Balance on Credit Union Trades   - 00216: Total Balance on Department Store Trades   - 00217: Total Balance on Installment Trades   - 00219: Total Balance on Personal Finance Trades   - 00220: Total Balance on Retail Trades   - 00221: Total Balance on Revolving Trades   - 00222: Total Balance on Sales Finance Trades   - 00223: Total Balance on Trades   - 00224: Total Collection Amount   - 00226: Worst Rating for Mortgage Trades   - 00290: Insufficient information on or lack of bankcard trades   - 00291: Insufficient information on or lack of credit union trades   - 00292: Insufficient information on or lack of department store trades   - 00293: Insufficient information on or lack of installment trades   - 00294: Insufficient information on or lack of mortgage trades   - 00295: Insufficient information on or lack of personal finance trades   - 00296: Insufficient information on or lack of retail trades   - 00297: Insufficient information on or lack of revolving trades   - 00298: Insufficient information on or lack of sales finance trades   - 00299: Insufficient information on or lack of trades   - 00301: 30 Days or Worse Delinquency Occurrences   - 00302: Number of Trades 30 Days or Worse Delinquent   - 00303: Number of Trades 30 Days or Worse Delinquent or with Major Derogatory Event   - 00304: 30 Days or Worse Delinquency Occurrences on Installment Trades   - 00305: 60 Days or Worse Delinquency Occurrences on Revolving Trades     Score Reason corresponding to Model Number 02481   - 00003: Percent of Bankcard Balance Past Due   - 00012: Percent of Installment Balance Outstanding   - 00019: Percent of Open Revolving Trades   - 00020: Percent of Open Trades   - 00025: Percent of Revolving Trades 90+ Days Delinquent   - 00026: Percent of Revolving Trades Opened Recently   - 00030: Percent of Trades 120+ Days Delinquent   - 00031: Percent of Trades 60+ Days Delinquent   - 00032: Percent of Trades 90+ Days Delinquent   - 00035: Percent of Trades Department Store   - 00036: Percent of Trades Installment   - 00037: Percent of Trades Opened Recently   - 00038: Percent of Trades Retail   - 00039: Percent of Trades Revolving   - 00040: Percent of Trades Satisfactory   - 00041: Percent of Trades with Major Derogatory Event   - 00042: 120-180 or More Days Delinquency Occurrences   - 00044: 120-180 or More Days Delinquency Occurrences on Department Store Trades   - 00045: 120-180 or More Days Delinquency Occurrences on Installment Trades   - 00048: 30 Days Delinquency Occurrences   - 00051: 30 Days Delinquency Occurrences on Installment Trades   - 00053: 30 Days Delinquency Occurrences on Revolving Trades   - 00054: 60 Days Delinquency Occurrences   - 00059: 60 Days Delinquency Occurrences on Revolving Trades   - 00060: 90 Days Delinquency Occurrences   - 00068: Age of Bankcard Trades   - 00069: Age of Department Store Trades   - 00071: Age of Installment Trades   - 00072: Age of Judgment   - 00073: Age of Mortgage Trades   - 00074: Age of Retail Trades   - 00076: Age of Revolving Trades   - 00079: Age of Trade Activity   - 00080: Age of Trades   - 00083: Bankcard High Credit   - 00084: Bankcard Utilization   - 00088: Mortgage High Credit   - 00094: Number of Auto Finance Trades with Balance Outstanding   - 00103: Number of Bankcard Trades 90+ Days Delinquent   - 00107: Number of Bankcard Trades with High Utilization   - 00109: Number of Collections   - 00120: Number of Department Store Trades with Balance   - 00123: Number of Inquiries   - 00124: Number of Installment Trades   - 00126: Number of Installment Trades 120-180 or More Days Delinquent   - 00129: Number of Installment Trades 60+ Days Delinquent   - 00133: Number of Installment Trades Opened Recently   - 00135: Number of Installment Trades with High Balance Outstanding   - 00136: Number of Installment Trades with Major Derogatory Event   - 00139: Number of Open Auto Finance Trades   - 00140: Number of Open Bankcard Trades   - 00141: Number of Open Credit Union Trades   - 00142: Number of Open Department Store Trades   - 00144: Number of Open Mortgage Trades   - 00145: Number of Open Personal Finance Trades   - 00146: Number of Open Retail Trades   - 00148: Number of Open Sales Finance Trades   - 00154: Number of Recent Inquiries   - 00164: Number of Retail Trades with High Utilization   - 00166: Number of Revolving Trades   - 00173: Number of Revolving Trades 90+ Days Delinquent   - 00174: Number of Revolving Trades Less Than 59 Days Delinquent   - 00175: Number of Revolving Trades Opened Recently   - 00178: Number of Revolving Trades with High Utilization   - 00185: Number of Satisfactory Bankcard Trades   - 00190: Number of Satisfactory Trades   - 00191: Number of Trades   - 00193: Number of Trades 120-180 or More Days Delinquent   - 00194: Number of Trades 30 Days Delinquent   - 00195: Number of Trades 60 Days Delinquent   - 00197: Number of Trades 90 Days Delinquent   - 00199: Number of Trades Opened Recently   - 00200: Number of Trades Past Due   - 00202: Number of Trades with Major Derogatory Event   - 00205: Revolving High Credit   - 00206: Revolving Utilization   - 00209: Total Amount Past Due for Installment Trades   - 00211: Total Amount Past Due for Revolving Trades   - 00212: Total Amount Past Due for Trades   - 00214: Total Balance on Bankcard Trades   - 00215: Total Balance on Credit Union Trades   - 00216: Total Balance on Department Store Trades   - 00217: Total Balance on Installment Trades   - 00219: Total Balance on Personal Finance Trades   - 00220: Total Balance on Retail Trades   - 00221: Total Balance on Revolving Trades   - 00222: Total Balance on Sales Finance Trades   - 00223: Total Balance on Trades   - 00224: Total Collection Amount   - 00226: Worst Rating for Mortgage Trades   - 00290: Insufficient information on or lack of bankcard trades   - 00291: Insufficient information on or lack of credit union trades   - 00292: Insufficient information on or lack of department store trades   - 00293: Insufficient information on or lack of installment trades   - 00294: Insufficient information on or lack of mortgage trades   - 00295: Insufficient information on or lack of personal finance trades   - 00296: Insufficient information on or lack of retail trades   - 00297: Insufficient information on or lack of revolving trades   - 00298: Insufficient information on or lack of sales finance trades   - 00299: Insufficient information on or lack of trades   - 00301: 30 Days or Worse Delinquency Occurrences   - 00302: Number of Trades 30 Days or Worse Delinquent   - 00303: Number of Trades 30 Days or Worse Delinquent or with Major Derogatory Event   - 00304: 30 Days or Worse Delinquency Occurrences on Installment Trades   - 00305: 60 Days or Worse Delinquency Occurrences on Revolving Trades    Score Reason corresponding to Model Number 02527   - 00001: Number of consumer initiated inquiries in the past 6 months   - 00003: Length of time accounts have been established   - 00004: Too many accounts opened in the past 24 months   - 00005: Too Few Accounts Established   - 00008: Number of accounts with past due balances   - 00010: Number of accounts reported in past 12 months with outstanding balances   - 00011: Number of accounts with high balances   - 00014: Total available line of credit on bank revolving accounts   - 00015: Length of time bank revolving accounts have been established   - 00019: Number of bank revolving accounts with high balances   - 00023: Number of bank installment accounts always paid as agreed   - 00024: Utilization of available credit on accounts   - 00026: Utilization of available credit on department store accounts   - 00027: Too few accounts paid as agreed   - 00028: Too few bank revolving accounts paid as agreed   - 00035: Number of accounts with reported late payments   - 00037: Number of department store accounts with reported late payments   - 00038: Number of accounts reported 60+ days late in the past 24 months   - 00039: Number of accounts reported in the past 12 months   - 00041: Percent of bank revolving accounts versus total accounts reported in the past 12 months   - 00042: Percent of department store accounts versus total accounts reported in the past 12 months   - 00043: Percent of bank installment accounts versus total accounts reported in the past 12 months   - 00058: Number of credit union accounts always paid as agreed   - 00061: Number of derogatory public record items on file   - 00068: Number of accounts reported as 90-120 days late in the past 24 months   - 00070: Length of time or unknown time since department store accounts have been established   - 00072: Number of consumer initiated inquiries in the past 12 months   - 00076: Percent of credit union accounts versus total accounts reported in the past 12 months   - 00077: Utilization on revolving accounts reported in the past 6 months   - 00080: Amount past due on accounts with reported late payments   - 00087: Number of accounts reported as 30 days late in the past 24 months   - 00088: Number of accounts reported as bad debt in the past 24 months   - 00089: Length of time department store accounts have been established   - 00093: Time since most recent activity on bank revolving accounts or status of bank revolving accounts is unknown   - 00094: Number of bank revolving accounts with past due balances or status of accounts unknown   - 00109: Number of bank revolving accounts 60+ days late or status unknown   - 00112: Insufficient number or lack of credit union accounts   - 00113: Number of accounts reported 90+ days late/derogatory public records filed in the past 24 months   - 00126: Number of department store accounts reported 90+ days late or bad debt in the past 24 months   - 00133: Number of bank revolving accounts currently reported as 60+ days late   - 00134: Amount past due on department store accounts with reported late payments   - 00135: Total amount of available credit on revolving trades reported in the last 6 months   - 00137: Number of bank revolving accounts reported in the past 12 months   - 00138: Number of bank revolving trades currently reported 90+ days late   - 00139: Number of bank revolving trades currently reported bad debt in the past 24 months   - 00140: Number of accounts paid as agreed with recently reported balances       Score Reason corresponding to Model Number 02575   - 00001: Number of consumer initiated inquiries in the last 6 months   - 00003: Length of time accounts have been established   - 00010: Number of accounts reported in the past 12 months with outstanding balances   - 00011: Number of accounts with high balances   - 00015: Length of time bank revolving accounts have been established   - 00019: Number of bank revolving accounts with high balances   - 00026: Utilization of available credit on department store accounts   - 00059: Time since consumer initiated inquiry reported   - 00062: Number of accounts reported 30+ days late in the last 24 months   - 00072: Number of consumer initiated inquiries in the past 12 months   - 00077: Utilization on revolving accounts reported in the past 6 months   - 00084: Number of bank installment accounts   - 00087: Number of accounts reported as 30 days past due in the past 24 months   - 00089: Length of time department store accounts have been opened   - 00130: Number of accounts ever reported paid as agreed   - 00159: Number of credit union accounts   - 00173: Amount currently past due on accounts   - 00188: Number of accounts reported 60 days + late in the past 24 months and number of public records ever   - 00242: Number of bank revolving accounts ever paid as agreed   - 00281: Number of accounts ever reported 30+ days late   - 00297: Length of time since most recent bank revolving account opened   - 00304: Maximum bank revolving utilization ratio reported in the past 12 months      Score Reason corresponding to Model Number 02531   - A0: Account payment history is too new to rate   - A1: Accounts last reported in delinquent status   - A2: Amount of credit available on revolving accounts   - A3: Amount owed on accounts is too high   - A4: Amount owed on bank/national revolving accounts   - A5: Amount owed on collections filed   - A6: Amount owed on delinquent accounts   - A7: Amount owed on recently opened accounts is too high   - A8: Amount owed on recently opened bank/national revolving accounts is too high   - A9: Amount owed on recently opened consumer finance company accounts is too high   - B0: Amount owed on recently opened retail accounts is too high   - B1: Amount owed on recently opened revolving accounts is too high   - B2: Amount owed on recently opened sales finance company accounts is too high   - B3: Amount owed on retail accounts   - B4: Amount owed on revolving accounts   - B5: Amount owed on revolving accounts is too high   - B6: Amount past due on accounts   - D0: Bankruptcy filing reported   - D1: Date of last inquiry too recent   - D2: Delinquency on accounts   - D3: Delinquency on recently opened accounts   - D4: Derogatory public record or collection filed   - D5: Frequency of delinquency   - D6: Level of delinquency on accounts   - D7: Serious delinquency   - D8: Serious delinquency, and public record or collection filed   - F0: Insufficient installment payment history   - F1: Lack of recently established credit accounts   - F2: Lack of recently established revolving accounts   - F3: Lack of recent auto finance loan information   - F4: Lack of recent auto loan information   - F5: Lack of recent bank/national revolving information   - F6: Lack of recent consumer finance company account information   - F7: Lack of recent installment loan information   - F8: Lack of recent reported mortgage loan information   - F9: Lack of recent non-mortgage installment loan information   - G0: Lack of recent retail account information   - G1: Lack of recent revolving account information   - G2: No mortgage loans reported   - G3: No recent bank/national revolving balances   - G4: No recent non-mortgage balance information   - G5: No recent retail balances   - G6: No recent revolving balances   - J0: Length of time accounts have been established   - J1: Length of time auto accounts have been established   - J2: Length of time bank/national revolving accounts have been established   - J3: Length of time consumer finance company loans have been established   - J4: Length of time installment loans been established   - J5: Length of time reported mortgage accounts have been established   - J6: Length of time open installment loans have been established   - J7: Length of time retail accounts have been established   - J8: Length of time revolving accounts have been established   - J9: Time since account activity is too long   - K0: Time since delinquency is too recent or unknown   - K1: Time since derogatory public record or collection is too short   - K2: Time since most recent account opening is too short   - K3: Time since most recent auto account opening is too short   - K4: Time since most recent bank/national account opening is too short   - K5: Time since most recent consumer finance company account opening is too short   - K6: Time since most recent installment loan account opening is too short   - K7: Time since most recent retail account established   - K8: Time since most recent revolving account established   - K9: Time since most recent sales finance company account opening is too short   - M0: Number of accounts currently in delinquent status   - M1: Number of accounts with delinquency   - M2: Number of accounts with recent delinquency   - M3: Number of active bank/national revolving accounts   - M4: Number of active retail accounts   - M5: Number of adverse/derog public records   - M6: Number of bank/national revolving accounts with balances   - M7: Number of bank/national revolving accounts   - M8: Number of bank/national revolving or other revolving accounts   - M9: Number of collections filed   - N0: Number of consumer finance company accounts established relative to length of consumer finance history   - N1: Number of consumer finance company inquiries   - N2: Number of established accounts   - N3: Number of open installment loans   - N4: Number of recently opened consumer finance company accounts   - N5: Number of retail accounts   - N6: Number of retail accounts with balances   - N7: Number of revolving accounts   - N8: Number of revolving accounts with balances higher than limits   - P0: Proportion of balance to limit on auto accounts is too high   - P1: Proportion of balance to limit on delinquent accounts is too high   - P2: Proportion of balance to limit on consumer finance company accounts is too high   - P3: Proportion of balance to limit on retail accounts is too high   - P5: Proportion of balances to credit limits on bank/national revolving or other revolving accounts is too high   - P6: Proportion of balances to credit limits on revolving accounts is too high   - P7: Proportion of balance to limit on sales finance company accounts is too high   - P8: Proportion of balances to loan amounts on mortgage loans is too high   - P9: Proportion of loan balances to loan amounts is too high   - Q0: Proportion of revolving balances to total balances is too high   - Q1: Proportion of balances to credit limits on bank/national revolving accounts is too high   - R0: Too few accounts currently paid as agreed   - R1: Too few accounts with balances   - R2: Too few accounts with recent payment information   - R3: Too few active accounts   - R4: Too few bank/national revolving accounts   - R5: Too few bank/national revolving accounts with recent payment information   - R6: Too few consumer finance company accounts with recent payment information   - R7: Too few installment accounts   - R8: Too few retail accounts   - R9: Too few retail accounts with recent payment information   - S0: Too few revolving accounts   - S1: Too few revolving accounts with recent payment information   - S2: Too few sales finance company accounts with recent payment information   - T0: Too many accounts recently opened   - T1: Too many accounts with balances   - T2: Too many bank/national revolving accounts   - T3: Too many consumer finance company accounts   - T4: Too many installment accounts   - T5: Too many inquiries last 12 months   - T6: Too many recently active accounts   - T7: Too many recently active auto accounts   - T8: Too many recently active bank/national revolving accounts   - T9: Too many recently active consumer finance company accounts   - U0: Too many recently active installment loan accounts   - U1: Too many recently active retail accounts   - U2: Too many recently active sales finance company accounts   - U4: Too many recently opened accounts with balances   - U5: Too many recently opened bank/national revolving accounts   - U6: Too many recently opened consumer finance company accounts   - U7: Too many recently opened installment accounts   - U8: Too many recently opened retail accounts with balances   - U9: Too many recently opened revolving accounts   - V0: Too many recently opened revolving accounts with balances   - V1: Too many recently opened sales finance company accounts   - V2: Too many retail accounts   - V3: Too many revolving accounts   - V4: Too many recently opened bank/national revolving accounts with balances   - X0: Payments due on accounts      Score Reason corresponding to Model Number 02825   - A0: Account payment history is too new to rate   - A1: Accounts last reported in delinquent status   - A2: Amount of credit available on revolving accounts   - A3: Amount owed on accounts is too high   - A4: Amount owed on bank/national revolving accounts   - A5: Amount owed on collections filed   - A6: Amount owed on delinquent accounts   - A7: Amount owed on recently opened accounts is too high   - A8: Amount owed on recently opened bank/national revolving accounts is too high   - A9: Amount owed on recently opened consumer finance company accounts is too high   - B0: Amount owed on recently opened retail accounts is too high   - B1: Amount owed on recently opened revolving accounts is too high   - B2: Amount owed on recently opened sales finance company accounts is too high   - B3: Amount owed on retail accounts   - B4: Amount owed on revolving accounts   - B5: Amount owed on revolving accounts is too high   - B6: Amount past due on accounts   - D0: Bankruptcy filing reported   - D1: Date of last inquiry too recent   - D2: Delinquency on accounts   - D3: Delinquency on recently opened accounts   - D4: Derogatory public record or collection filed   - D5: Frequency of delinquency   - D6: Level of delinquency on accounts   - D7: Serious delinquency   - D8: Serious delinquency, and public record or collection filed   - F0: Insufficient installment payment history   - F1: Lack of recently established credit accounts   - F2: Lack of recently established revolving accounts   - F3: Lack of recent auto finance loan information   - F4: Lack of recent auto loan information   - F5: Lack of recent bank/national revolving information   - F6: Lack of recent consumer finance company account information   - F7: Lack of recent installment loan information   - F8: Lack of recent reported mortgage loan information   - F9: Lack of recent non-mortgage installment loan information   - G0: Lack of recent retail account information   - G1: Lack of recent revolving account information   - G2: No mortgage loans reported   - G3: No recent bank/national revolving balances   - G4: No recent non-mortgage balance information   - G5: No recent retail balances   - G6: No recent revolving balances   - J0: Length of time accounts have been established   - J1: Length of time auto accounts have been established   - J2: Length of time bank/national revolving accounts have been established   - J3: Length of time consumer finance company loans have been established   - J4: Length of time installment loans been established   - J5: Length of time reported mortgage accounts have been established   - J6: Length of time open installment loans have been established   - J7: Length of time retail accounts have been established   - J8: Length of time revolving accounts have been established   - J9: Time since account activity is too long   - K0: Time since delinquency is too recent or unknown   - K1: Time since derogatory public record or collection is too short   - K2: Time since most recent account opening is too short   - K3: Time since most recent auto account opening is too short   - K4: Time since most recent bank/national account opening is too short   - K5: Time since most recent consumer finance company account opening is too short   - K6: Time since most recent installment loan account opening is too short   - K7: Time since most recent retail account established   - K8: Time since most recent revolving account established   - K9: Time since most recent sales finance company account opening is too short   - M0: Number of accounts currently in delinquent status   - M1: Number of accounts with delinquency   - M2: Number of accounts with recent delinquency   - M3: Number of active bank/national revolving accounts   - M4: Number of active retail accounts   - M5: Number of adverse/derog public records   - M6: Number of bank/national revolving accounts with balances   - M7: Number of bank/national revolving accounts   - M8: Number of bank/national revolving or other revolving accounts   - M9: Number of collections filed   - N0: Number of consumer finance company accounts established relative to length of consumer finance history   - N1: Number of consumer finance company inquiries   - N2: Number of established accounts   - N3: Number of open installment loans   - N4: Number of recently opened consumer finance company accounts   - N5: Number of retail accounts   - N6: Number of retail accounts with balances   - N7: Number of revolving accounts   - N8: Number of revolving accounts with balances higher than limits   - P0: Proportion of balance to limit on auto accounts is too high   - P1: Proportion of balance to limit on delinquent accounts is too high   - P2: Proportion of balance to limit on consumer finance company accounts is too high   - P3: Proportion of balance to limit on retail accounts is too high   - P5: Proportion of balances to credit limits on bank/national revolving or other revolving accounts is too high   - P6: Proportion of balances to credit limits on revolving accounts is too high   - P7: Proportion of balance to limit on sales finance company accounts is too high   - P8: Proportion of balances to loan amounts on mortgage loans is too high   - P9: Proportion of loan balances to loan amounts is too high   - Q0: Proportion of revolving balances to total balances is too high   - Q1: Proportion of balances to credit limits on bank/national revolving accounts is too high   - R0: Too few accounts currently paid as agreed   - R1: Too few accounts with balances   - R2: Too few accounts with recent payment information   - R3: Too few active accounts   - R4: Too few bank/national revolving accounts   - R5: Too few bank/national revolving accounts with recent payment information   - R6: Too few consumer finance company accounts with recent payment information   - R7: Too few installment accounts   - R8: Too few retail accounts   - R9: Too few retail accounts with recent payment information   - S0: Too few revolving accounts   - S1: Too few revolving accounts with recent payment information   - S2: Too few sales finance company accounts with recent payment information   - T0: Too many accounts recently opened   - T1: Too many accounts with balances   - T2: Too many bank/national revolving accounts   - T3: Too many consumer finance company accounts   - T4: Too many installment accounts   - T5: Too many inquiries last 12 months   - T6: Too many recently active accounts   - T7: Too many recently active auto accounts   - T8: Too many recently active bank/national revolving accounts   - T9: Too many recently active consumer finance company accounts   - U0: Too many recently active installment loan accounts   - U1: Too many recently active retail accounts   - U2: Too many recently active sales finance company accounts   - U4: Too many recently opened accounts with balances   - U5: Too many recently opened bank/national revolving accounts   - U6: Too many recently opened consumer finance company accounts   - U7: Too many recently opened installment accounts   - U8: Too many recently opened retail accounts with balances   - U9: Too many recently opened revolving accounts   - V0: Too many recently opened revolving accounts with balances   - V1: Too many recently opened sales finance company accounts   - V2: Too many retail accounts   - V3: Too many revolving accounts   - V4: Too many recently opened bank/national revolving accounts with balances   - X0: Payments due on accounts                                            Score Reason corresponding to Model Number 02905   - A0: Account payment history is too new to rate   - A1: Accounts last reported in delinquent status   - A2: Amount of credit available on revolving accounts   - A3: Amount owed on accounts is too high   - A4: Amount owed on bank/national revolving accounts   - A5: Amount owed on collections filed   - A6: Amount owed on delinquent accounts   - A7: Amount owed on recently opened accounts is too high   - A8: Amount owed on recently opened bank/national revolving accounts is too high   - A9: Amount owed on recently opened consumer finance company accounts is too high   - B0: Amount owed on recently opened retail accounts is too high   - B1: Amount owed on recently opened revolving accounts is too high   - B2: Amount owed on recently opened sales finance company accounts is too high   - B3: Amount owed on retail accounts   - B4: Amount owed on revolving accounts   - B5: Amount owed on revolving accounts is too high   - B6: Amount past due on accounts   - D0: Bankruptcy filing reported   - D1: Date of last inquiry too recent   - D2: Delinquency on accounts   - D3: Delinquency on recently opened accounts   - D4: Derogatory public record or collection filed   - D5: Frequency of delinquency   - D6: Level of delinquency on accounts   - D7: Serious delinquency   - D8: Serious delinquency, and public record or collection filed   - F0: Insufficient installment payment history   - F1: Lack of recently established credit accounts   - F2: Lack of recently established revolving accounts   - F3: Lack of recent auto finance loan information   - F4: Lack of recent auto loan information   - F5: Lack of recent bank/national revolving information   - F6: Lack of recent consumer finance company account information   - F7: Lack of recent installment loan information   - F8: Lack of recent reported mortgage loan information   - F9: Lack of recent non-mortgage installment loan information   - G0: Lack of recent retail account information   - G1: Lack of recent revolving account information   - G2: No mortgage loans reported   - G3: No recent bank/national revolving balances   - G4: No recent non-mortgage balance information   - G5: No recent retail balances   - G6: No recent revolving balances   - J0: Length of time accounts have been established   - J1: Length of time auto accounts have been established   - J2: Length of time bank/national revolving accounts have been established   - J3: Length of time consumer finance company loans have been established   - J4: Length of time installment loans been established   - J5: Length of time reported mortgage accounts have been established   - J6: Length of time open installment loans have been established   - J7: Length of time retail accounts have been established   - J8: Length of time revolving accounts have been established   - J9: Time since account activity is too long   - K0: Time since delinquency is too recent or unknown   - K1: Time since derogatory public record or collection is too short   - K2: Time since most recent account opening is too short   - K3: Time since most recent auto account opening is too short   - K4: Time since most recent bank/national account opening is too short   - K5: Time since most recent consumer finance company account opening is too short   - K6: Time since most recent installment loan account opening is too short   - K7: Time since most recent retail account established   - K8: Time since most recent revolving account established   - K9: Time since most recent sales finance company account opening is too short   - M0: Number of accounts currently in delinquent status   - M1: Number of accounts with delinquency   - M2: Number of accounts with recent delinquency   - M3: Number of active bank/national revolving accounts   - M4: Number of active retail accounts   - M5: Number of adverse/derog public records   - M6: Number of bank/national revolving accounts with balances   - M7: Number of bank/national revolving accounts   - M8: Number of bank/national revolving or other revolving accounts   - M9: Number of collections filed   - N0: Number of consumer finance company accounts established relative to length of consumer finance history   - N1: Number of consumer finance company inquiries   - N2: Number of established accounts   - N3: Number of open installment loans   - N4: Number of recently opened consumer finance company accounts   - N5: Number of retail accounts   - N6: Number of retail accounts with balances   - N7: Number of revolving accounts   - N8: Number of revolving accounts with balances higher than limits   - P0: Proportion of balance to limit on auto accounts is too high   - P1: Proportion of balance to limit on delinquent accounts is too high   - P2: Proportion of balance to limit on consumer finance company accounts is too high   - P3: Proportion of balance to limit on retail accounts is too high   - P5: Proportion of balances to credit limits on bank/national revolving or other revolving accounts is too high   - P6: Proportion of balances to credit limits on revolving accounts is too high   - P7: Proportion of balance to limit on sales finance company accounts is too high   - P8: Proportion of balances to loan amounts on mortgage loans is too high   - P9: Proportion of loan balances to loan amounts is too high   - Q0: Proportion of revolving balances to total balances is too high   - Q1: Proportion of balances to credit limits on bank/national revolving accounts is too high   - R0: Too few accounts currently paid as agreed   - R1: Too few accounts with balances   - R2: Too few accounts with recent payment information   - R3: Too few active accounts   - R4: Too few bank/national revolving accounts   - R5: Too few bank/national revolving accounts with recent payment information   - R6: Too few consumer finance company accounts with recent payment information   - R7: Too few installment accounts   - R8: Too few retail accounts   - R9: Too few retail accounts with recent payment information   - S0: Too few revolving accounts   - S1: Too few revolving accounts with recent payment information   - S2: Too few sales finance company accounts with recent payment information   - T0: Too many accounts recently opened   - T1: Too many accounts with balances   - T2: Too many bank/national revolving accounts   - T3: Too many consumer finance company accounts   - T4: Too many installment accounts   - T5: Too many inquiries last 12 months   - T6: Too many recently active accounts   - T7: Too many recently active auto accounts   - T8: Too many recently active bank/national revolving accounts   - T9: Too many recently active consumer finance company accounts   - U0: Too many recently active installment loan accounts   - U1: Too many recently active retail accounts   - U2: Too many recently active sales finance company accounts   - U4: Too many recently opened accounts with balances   - U5: Too many recently opened bank/national revolving accounts   - U6: Too many recently opened consumer finance company accounts   - U7: Too many recently opened installment accounts   - U8: Too many recently opened retail accounts with balances   - U9: Too many recently opened revolving accounts   - V0: Too many recently opened revolving accounts with balances   - V1: Too many recently opened sales finance company accounts   - V2: Too many retail accounts   - V3: Too many revolving accounts   - V4: Too many recently opened bank/national revolving accounts with balances   - X0: Payments due on accounts    Score Reason corresponding to Model Number 02905   - A0: Account payment history is too new to rate   - A1: Accounts last reported in delinquent status   - A2: Amount of credit available on revolving accounts   - A3: Amount owed on accounts is too high   - A4: Amount owed on bank/national revolving accounts   - A5: Amount owed on collections filed   - A6: Amount owed on delinquent accounts   - A7: Amount owed on recently opened accounts is too high   - A8: Amount owed on recently opened bank/national revolving accounts is too high   - A9: Amount owed on recently opened consumer finance company accounts is too high   - B0: Amount owed on recently opened retail accounts is too high   - B1: Amount owed on recently opened revolving accounts is too high   - B2: Amount owed on recently opened sales finance company accounts is too high   - B3: Amount owed on retail accounts   - B4: Amount owed on revolving accounts   - B5: Amount owed on revolving accounts is too high   - B6: Amount past due on accounts   - D0: Bankruptcy filing reported   - D1: Date of last inquiry too recent   - D2: Delinquency on accounts   - D3: Delinquency on recently opened accounts   - D4: Derogatory public record or collection filed   - D5: Frequency of delinquency   - D6: Level of delinquency on accounts   - D7: Serious delinquency   - D8: Serious delinquency, and public record or collection filed   - F0: Insufficient installment payment history   - F1: Lack of recently established credit accounts   - F2: Lack of recently established revolving accounts   - F3: Lack of recent auto finance loan information   - F4: Lack of recent auto loan information   - F5: Lack of recent bank/national revolving information   - F6: Lack of recent consumer finance company account information   - F7: Lack of recent installment loan information   - F8: Lack of recent reported mortgage loan information   - F9: Lack of recent non-mortgage installment loan information   - G0: Lack of recent retail account information   - G1: Lack of recent revolving account information   - G2: No mortgage loans reported   - G3: No recent bank/national revolving balances   - G4: No recent non-mortgage balance information   - G5: No recent retail balances   - G6: No recent revolving balances   - J0: Length of time accounts have been established   - J1: Length of time auto accounts have been established   - J2: Length of time bank/national revolving accounts have been established   - J3: Length of time consumer finance company loans have been established   - J4: Length of time installment loans been established   - J5: Length of time reported mortgage accounts have been established   - J6: Length of time open installment loans have been established   - J7: Length of time retail accounts have been established   - J8: Length of time revolving accounts have been established   - J9: Time since account activity is too long   - K0: Time since delinquency is too recent or unknown   - K1: Time since derogatory public record or collection is too short   - K2: Time since most recent account opening is too short   - K3: Time since most recent auto account opening is too short   - K4: Time since most recent bank/national account opening is too short   - K5: Time since most recent consumer finance company account opening is too short   - K6: Time since most recent installment loan account opening is too short   - K7: Time since most recent retail account established   - K8: Time since most recent revolving account established   - K9: Time since most recent sales finance company account opening is too short   - M0: Number of accounts currently in delinquent status   - M1: Number of accounts with delinquency   - M2: Number of accounts with recent delinquency   - M3: Number of active bank/national revolving accounts   - M4: Number of active retail accounts   - M5: Number of adverse/derog public records   - M6: Number of bank/national revolving accounts with balances   - M7: Number of bank/national revolving accounts   - M8: Number of bank/national revolving or other revolving accounts   - M9: Number of collections filed   - N0: Number of consumer finance company accounts established relative to length of consumer finance history   - N1: Number of consumer finance company inquiries   - N2: Number of established accounts   - N3: Number of open installment loans   - N4: Number of recently opened consumer finance company accounts   - N5: Number of retail accounts   - N6: Number of retail accounts with balances   - N7: Number of revolving accounts   - N8: Number of revolving accounts with balances higher than limits   - P0: Proportion of balance to limit on auto accounts is too high   - P1: Proportion of balance to limit on delinquent accounts is too high   - P2: Proportion of balance to limit on consumer finance company accounts is too high   - P3: Proportion of balance to limit on retail accounts is too high   - P5: Proportion of balances to credit limits on bank/national revolving or other revolving accounts is too high   - P6: Proportion of balances to credit limits on revolving accounts is too high   - P7: Proportion of balance to limit on sales finance company accounts is too high   - P8: Proportion of balances to loan amounts on mortgage loans is too high   - P9: Proportion of loan balances to loan amounts is too high   - Q0: Proportion of revolving balances to total balances is too high   - Q1: Proportion of balances to credit limits on bank/national revolving accounts is too high   - R0: Too few accounts currently paid as agreed   - R1: Too few accounts with balances   - R2: Too few accounts with recent payment information   - R3: Too few active accounts   - R4: Too few bank/national revolving accounts   - R5: Too few bank/national revolving accounts with recent payment information   - R6: Too few consumer finance company accounts with recent payment information   - R7: Too few installment accounts   - R8: Too few retail accounts   - R9: Too few retail accounts with recent payment information   - S0: Too few revolving accounts   - S1: Too few revolving accounts with recent payment information   - S2: Too few sales finance company accounts with recent payment information   - T0: Too many accounts recently opened   - T1: Too many accounts with balances   - T2: Too many bank/national revolving accounts   - T3: Too many consumer finance company accounts   - T4: Too many installment accounts   - T5: Too many inquiries last 12 months   - T6: Too many recently active accounts   - T7: Too many recently active auto accounts   - T8: Too many recently active bank/national revolving accounts   - T9: Too many recently active consumer finance company accounts   - U0: Too many recently active installment loan accounts   - U1: Too many recently active retail accounts   - U2: Too many recently active sales finance company accounts   - U4: Too many recently opened accounts with balances   - U5: Too many recently opened bank/national revolving accounts   - U6: Too many recently opened consumer finance company accounts   - U7: Too many recently opened installment accounts   - U8: Too many recently opened retail accounts with balances   - U9: Too many recently opened revolving accounts   - V0: Too many recently opened revolving accounts with balances   - V1: Too many recently opened sales finance company accounts   - V2: Too many retail accounts   - V3: Too many revolving accounts   - V4: Too many recently opened bank/national revolving accounts with balances   - X0: Payments due on accounts    Score Reason corresponding to Model Number 02682   - 00002: Number of Consumer Initiated Finance Company Inquiries in the Past 24 Months   - 00003: Length of Time Accounts Have Been Opened   - 00006: Number of Accounts Reported in the Past 12 Months   - 00008: Number of Accounts with Past Due Balances   - 00009: Current Delinquent Rating Reported   - 00015: Length of Time Bank Revolving Accounts Have Been Opened   - 00026: Utilization of Available Credit on Department Store Accounts   - 00049: Percent of Accounts Open in the Past 6 Months Versus Total Accounts   - 00056: Time Since Most Recent Activity   - 00058: Number of Credit Union Accounts Ever Paid as Agreed   - 00072: Number of Consumer Initiated Inquiries in the Past 12 Months   - 00073: Number of Retail Inquiries in Last 24 Months   - 00077: Utilization on Revolving Accounts Reported in the Past 6 Months   - 00124: Number of Accounts Reported Late 60 Days or More in the Past 24 Months   - 00149: Number of Auto Finance Accounts Ever Paid as Agreed   - 00190: Lack of Recently Reported Revolving Account Information   - 00191: Lack of Recently Reported Credit Union Accounts Information   - 00193: Lack of Recently Reported Finance Account Information   - 00195: Lack of Recently Reported Department Store Account Information   - 00197: Lack of Recently Reported Bank Revolving Account Information   - 00199: Lack of Recently Reported Status on Accounts   - 00200: Lack of Recently Reported Account Information   - 00219: Percent of Bank revolving Accounts Paid As Agreed    Score Reason corresponding to Model Number 02718   - 00003: Length of Time Accounts Have Been Opened   - 00015: Length of Time Bank Revolving Accounts Have been Opened   - 00024: Utilization of Available Credit on Accounts   - 00051: Time Since Most Recent Derogatory Public Record Filed   - 00061: Number of Derogatory Public Records Items on File   - 00062: Number of Accounts Reported 30+ Days Past Due in the Past 24 Months   - 00116: Number of Bank Installment Accounts Ever Reported 60+ Days Past Due   - 00145: Number of Accounts Ever Reported 60+ Days Past Due   - 00146: Total Balances for Revolving Accounts Reported in the Past 12 Months   - 00159: Number of Credit Union Accounts   - 00171: Number of Opened Accounts   - 00173: Amount Currently Past Due on Accounts   - 00182: Number of Personal Finance Accounts   - 00191: Lack of Recently Reported Credit Union Accounts Information   - 00194: Lack of Recently Reported Bank Installment Account Information   - 00197: Lack of Recently Reported Bank Revolving Account Information   - 00198: Lack of Recently Reported Balances on Accounts   - 00199: Lack of Recently Reported Status on Accounts   - 00200: Lack of Recently Reported Account Information   - 00201: No Recent Public Record Information Available   - 00251: Number of Bank Installment Accounts   - 00346: Lack of Recently Reported Personal Finance Information    Score Reason corresponding to Model Number 02485   - 00001: Bankruptcy on file   - 00002: Deceased   - 00003: Deceased and Bankruptcy on file    Score Reason corresponding to Model Number 02505   - 00001: Number of Consumer Initiated Inquiries in the Past 6 Months   - 00003: Length of Time Accounts Have Been Established   - 00007: Total Amount of Available Credit on All Open Accounts   - 00008: Number of Accounts With Past Due Balances   - 00011: Number of Accounts With High Balances   - 00019: Number of Bank Revolving Accounts With High Balances   - 00035: Number of Accounts With Reported Late Payments   - 00039: Number of Accounts Reported in the Past 12 Months   - 00049: Percent of Accounts Open in the Last 6 Months Versus Active Accounts   - 00051: Time Since Most Recent Derogatory Public Record Filed   - 00061: Number of Derogatory Public Record Items on File   - 00062: Number of Accounts Not Paid as Agreed in the Last 24 Months   - 00064: Number of Accounts Paid As Agreed   - 00071: Number of Accounts with Low Balance compared to High Credit   - 00072: Number of Consumer Initiated Inquiries in the Past 12 Months   - 00077: Utilization on Revolving Accounts Reported in the Past 6 Months   - 00079: Length of Time Most Recent Account Opened   - 00087: Number of Accounts Reported as 30 Days Late in the Past 24 Months   - 00094: Number of Bank Revolving Accounts with Past Due Balances or Status of Bank Revolving Accounts is Unknown   - 00095: Number of Credit Union Accounts Currently or in the Past 60 Days Late or Status of Credit Union Acct Unknown   - 00116: Number of Bank Installment Accounts Currently or in the Past 60+ Days Late   - 00124: Number of Accounts Reported 60 Days + Late or Public Record in the Past 24 Months   - 00138: Number of Bank Revolving Trades Currently Reported 90+ Days Late   - 00140: Number of Accounts Paid as Agreed with Recently Reported Balances   - 00141: Number of Accounts Ever 30 or 60 Days Late   - 00158: Number of Trades Established in Last 3 Months   - 00159: Number of Credit Union Accounts   - 00160: Number of Bank Revolving Trades   - 00161: Number of Personal Finance Trades Past Due   - 00163: Number of Bank Installment Trades Currently Past Due   - 00164: Number of Auto Finance Trades Currently Past Due   - 00165: Number of Bank Installment Trades Ever 30 Days Past Due   - 00166: Maximum Available Bank Installment Utilization Ratio   - 00168: Number of Trades Opened in the Last 24 Months   - 00169: Number of Accounts Paid as Agreed   - 00170: Maximum Available Personal Finance Utilization Ratio   - 00171: Number of Established Accounts   - 00173: Amount Currently Past Due on Accounts   - 00190: Lack of Recently Reported Revolving Account Information   - 00191: Lack of Recently Reported Credit Union Account Information   - 00194: Lack of Recently Reported Bank Installment Account Information   - 00195: Lack of Recently Reported Department Store Account Information   - 00197: Lack of Recently Reported Bank Revolving Account Information   - 00198: Lack of Recently Reported Balances on Accounts   - 00199: Lack of Recently Reported Status on Accounts   - 00202: Number of Accounts Currently Reported 60 Days Late   - 00203: Number of Department Store Accounts Ever Reported 30 or 60 Days Late    Score Reason corresponding to Model Number 02558   - 00001: Number of Consumer Initiated Inquiries in the Past 6 Months   - 00003: Length of Time Accounts Have Been Established   - 00007: Total Amount of Available Credit on All Open Accounts   - 00008: Number of Accounts With Past Due Balances   - 00011: Number of Accounts With High Balances   - 00019: Number of Bank Revolving Accounts With High Balances   - 00035: Number of Accounts With Reported Late Payments   - 00039: Number of Accounts Reported in the Past 12 Months   - 00049: Percent of Accounts Open in the Last 6 Months Versus Active Accounts   - 00051: Time Since Most Recent Derogatory Public Record Filed   - 00061: Number of Derogatory Public Record Items on File   - 00062: Number of Accounts Not Paid as Agreed in the Last 24 Months   - 00064: Number of Accounts Paid As Agreed   - 00071: Number of Accounts with Low Balance compared to High Credit   - 00072: Number of Consumer Initiated Inquiries in the Past 12 Months   - 00077: Utilization on Revolving Accounts Reported in the Past 6 Months   - 00079: Length of Time Most Recent Account Opened   - 00087: Number of Accounts Reported as 30 Days Late in the Past 24 Months   - 00094: Number of Bank Revolving Accounts with Past Due Balances or Status of Bank Revolving Accounts is Unknown   - 00095: Number of Credit Union Accounts Currently or in the Past 60 Days Late or Status of Credit Union Acct Unknown   - 00116: Number of Bank Installment Accounts Currently or in the Past 60+ Days Late   - 00124: Number of Accounts Reported 60 Days + Late or Public Record in the Past 24 Months   - 00138: Number of Bank Revolving Trades Currently Reported 90+ Days Late   - 00140: Number of Accounts Paid as Agreed with Recently Reported Balances   - 00141: Number of Accounts Ever 30 or 60 Days Late   - 00158: Number of Trades Established in Last 3 Months   - 00159: Number of Credit Union Accounts   - 00160: Number of Bank Revolving Trades   - 00161: Number of Personal Finance Trades Past Due   - 00163: Number of Bank Installment Trades Currently Past Due   - 00164: Number of Auto Finance Trades Currently Past Due   - 00165: Number of Bank Installment Trades Ever 30 Days Past Due   - 00166: Maximum Available Bank Installment Utilization Ratio   - 00168: Number of Trades Opened in the Last 24 Months   - 00169: Number of Accounts Paid as Agreed   - 00170: Maximum Available Personal Finance Utilization Ratio   - 00171: Number of Established Accounts   - 00173: Amount Currently Past Due on Accounts   - 00190: Lack of Recently Reported Revolving Account Information   - 00191: Lack of Recently Reported Credit Union Account Information   - 00194: Lack of Recently Reported Bank Installment Account Information   - 00195: Lack of Recently Reported Department Store Account Information   - 00197: Lack of Recently Reported Bank Revolving Account Information   - 00198: Lack of Recently Reported Balances on Accounts   - 00199: Lack of Recently Reported Status on Accounts   - 00202: Number of Accounts Currently Reported 60 Days Late   - 00203: Number of Department Store Accounts Ever Reported 30 or 60 Days Late    Score Reason corresponding to Model Number 01203   - 00002: Percent of Balance Past Due   - 00003: Percent of Bankcard Balance Past Due   - 00005: Percent of Bankcard Accounts 60+ Days Delinquent   - 00023: Percent of Revolving Accounts 120+ Days Delinquent   - 00030: Percent of Trades 120+ Days Delinquent   - 00033: Percent of Accounts Bankcard   - 00034: Percent of Accounts Credit Union   - 00035: Percent of Trades Department Store   - 00037: Percent of Trades Opened Recently   - 00038: Percent of Trades Retail   - 00040: Percent of Trades Satisfactory   - 00051: 30 Days Delinquency Occurrences on Installment Trades   - 00053: 30 Days Delinquency Occurrences on Revolving Trades   - 00057: 60 Days Delinquency Occurrences On Installment Accounts   - 00059: 60 Days Delinquency Occurrences on Revolving Trades   - 00065: 90 Days Delinquency Occurrences On Revolving Accounts   - 00067: Age of Bankcard Account Activity   - 00068: Age of Bankcard Trades   - 00076: Age of Revolving Trades   - 00079: Age of Trade Activity   - 00080: Age of Trades   - 00083: Bankcard High Credit   - 00084: Bankcard Utilization   - 00088: Mortgage High Credit   - 00105: Number of Bankcard Accounts Past Due   - 00107: Number of Bankcard Trades with High Utilization   - 00109: Number of Collections   - 00121: Number of Department Store Accounts With High Utilization   - 00122: Number of Department Store Accounts With Major Derogatory Event   - 00123: Number of Inquiries   - 00124: Number of Installment Trades   - 00127: Number of Installment Accounts 30 Days Delinquent   - 00129: Number of Installment Trades 60+ Days Delinquent   - 00133: Number of Installment Accounts Opened Recently   - 00136: Number of Installment Trades with Major Derogatory Event   - 00137: Number of Mortgage Accounts With High Balance Outstanding   - 00139: Number of Open Auto Finance Trades   - 00141: Number of Open Credit Union Trades   - 00142: Number of Open Department Store Trades   - 00143: Number of Open Installment Accounts   - 00144: Number of Open Mortgage Trades   - 00145: Number of Open Personal Finance or Student Loan Trades   - 00147: Number of Open Revolving Accounts   - 00154: Number of Recent Inquiries   - 00167: Number of Revolving Accounts 120+ Days Delinquent   - 00168: Number of Revolving Accounts 120-180 or More Days Delinquent   - 00169: Number of Revolving Accounts 30 Days Delinquent   - 00170: Number of Revolving Accounts 60 Days Delinquent   - 00172: Number of Revolving Accounts 90 Days Delinquent   - 00178: Number of Revolving Trades with High Utilization   - 00189: Number of Satisfactory Revolving Accounts   - 00191: Number of Trades   - 00199: Number of Trades Opened Recently   - 00200: Number of Trades Past Due   - 00201: Number of Accounts With Balance   - 00203: Occurrence of Severe Derogatory Event   - 00205: Revolving High Credit   - 00206: Revolving Utilization   - 00207: Total Amount Past Due For Accounts   - 00208: Total Amount Past Due For Bankcard Accounts   - 00214: Total Balance on Bankcard Trades   - 00215: Total Balance on Credit Union Trades   - 00216: Total Balance on Department Store Trades   - 00219: Total Balance on Personal Finance or Student Loan Trades   - 00220: Total Balance on Retail Trades   - 00222: Total Balance on Sales Finance Trades   - 00223: Total Balance on Trades   - 00224: Total Collection Amount   - 00225: Worst Rating For Auto Finance Accounts   - 00226: Worst Rating for Mortgage Trades   - 00290: Insufficient information on or lack of bankcard trades   - 00291: Insufficient information on or lack of credit union trades   - 00292: Insufficient information on or lack of department store trades   - 00294: Insufficient information on or lack of mortgage trades   - 00295: Insufficient information on or lack of personal finance and student loan trades   - 00296: Insufficient information on or lack of retail trades   - 00297: Insufficient information on or lack of revolving trades   - 00298: Insufficient information on or lack of sales finance trades   - 00299: Insufficient information on or lack of trades   - 00304: 30 Days or Worse Delinquency Occurrences on Installment Trades   - 00306: Number of Revolving Accounts 120-180 or More Days Delinquent or With Major Derogatory Event   - 00307: Number of Auto Finance Accounts 90, 120-180 or More Days Delinquent or With Major Derogatory Event   - 00310: Foreclosure w/in 24 Months   - 00311: Bankruptcy w/in 24 Months    Score Reason corresponding to Model Number 01204   - 00002: Percent of Balance Past Due   - 00003: Percent of Bankcard Balance Past Due   - 00005: Percent of Bankcard Accounts 60+ Days Delinquent   - 00023: Percent of Revolving Accounts 120+ Days Delinquent   - 00030: Percent of Trades 120+ Days Delinquent   - 00033: Percent of Accounts Bankcard   - 00034: Percent of Accounts Credit Union   - 00035: Percent of Trades Department Store   - 00037: Percent of Trades Opened Recently   - 00038: Percent of Trades Retail   - 00040: Percent of Trades Satisfactory   - 00051: 30 Days Delinquency Occurrences on Installment Trades   - 00053: 30 Days Delinquency Occurrences on Revolving Trades   - 00057: 60 Days Delinquency Occurrences On Installment Accounts   - 00059: 60 Days Delinquency Occurrences on Revolving Trades   - 00065: 90 Days Delinquency Occurrences On Revolving Accounts   - 00067: Age of Bankcard Account Activity   - 00068: Age of Bankcard Trades   - 00076: Age of Revolving Trades   - 00079: Age of Trade Activity   - 00080: Age of Trades   - 00083: Bankcard High Credit   - 00084: Bankcard Utilization   - 00088: Mortgage High Credit   - 00105: Number of Bankcard Accounts Past Due   - 00107: Number of Bankcard Trades with High Utilization   - 00109: Number of Collections   - 00121: Number of Department Store Accounts With High Utilization   - 00122: Number of Department Store Accounts With Major Derogatory Event   - 00123: Number of Inquiries   - 00124: Number of Installment Trades   - 00127: Number of Installment Accounts 30 Days Delinquent   - 00129: Number of Installment Trades 60+ Days Delinquent   - 00133: Number of Installment Accounts Opened Recently   - 00136: Number of Installment Trades with Major Derogatory Event   - 00137: Number of Mortgage Accounts With High Balance Outstanding   - 00139: Number of Open Auto Finance Trades   - 00141: Number of Open Credit Union Trades   - 00142: Number of Open Department Store Trades   - 00143: Number of Open Installment Accounts   - 00144: Number of Open Mortgage Trades   - 00145: Number of Open Personal Finance or Student Loan Trades   - 00147: Number of Open Revolving Accounts   - 00154: Number of Recent Inquiries   - 00167: Number of Revolving Accounts 120+ Days Delinquent   - 00168: Number of Revolving Accounts 120-180 or More Days Delinquent   - 00169: Number of Revolving Accounts 30 Days Delinquent   - 00170: Number of Revolving Accounts 60 Days Delinquent   - 00172: Number of Revolving Accounts 90 Days Delinquent   - 00178: Number of Revolving Trades with High Utilization   - 00189: Number of Satisfactory Revolving Accounts   - 00191: Number of Trades   - 00199: Number of Trades Opened Recently   - 00200: Number of Trades Past Due   - 00201: Number of Accounts With Balance   - 00203: Occurrence of Severe Derogatory Event   - 00205: Revolving High Credit   - 00206: Revolving Utilization   - 00207: Total Amount Past Due For Accounts   - 00208: Total Amount Past Due For Bankcard Accounts   - 00214: Total Balance on Bankcard Trades   - 00215: Total Balance on Credit Union Trades   - 00216: Total Balance on Department Store Trades   - 00219: Total Balance on Personal Finance or Student Loan Trades   - 00220: Total Balance on Retail Trades   - 00222: Total Balance on Sales Finance Trades   - 00223: Total Balance on Trades   - 00224: Total Collection Amount   - 00225: Worst Rating For Auto Finance Accounts   - 00226: Worst Rating for Mortgage Trades   - 00290: Insufficient information on or lack of bankcard trades   - 00291: Insufficient information on or lack of credit union trades   - 00292: Insufficient information on or lack of department store trades   - 00294: Insufficient information on or lack of mortgage trades   - 00295: Insufficient information on or lack of personal finance and student loan trades   - 00296: Insufficient information on or lack of retail trades   - 00297: Insufficient information on or lack of revolving trades   - 00298: Insufficient information on or lack of sales finance trades   - 00299: Insufficient information on or lack of trades   - 00304: 30 Days or Worse Delinquency Occurrences on Installment Trades   - 00306: Number of Revolving Accounts 120-180 or More Days Delinquent or With Major Derogatory Event   - 00307: Number of Auto Finance Accounts 90, 120-180 or More Days Delinquent or With Major Derogatory Event   - 00310: Foreclosure w/in 24 Months   - 00311: Bankruptcy w/in 24 Months    Score Reason corresponding to Model Number 02912   - 00002: Percent of Balance Past Due   - 00003: Percent of Bankcard Balance Past Due   - 00005: Percent of Bankcard Accounts 60+ Days Delinquent   - 00023: Percent of Revolving Accounts 120+ Days Delinquent   - 00030: Percent of Trades 120+ Days Delinquent   - 00033: Percent of Accounts Bankcard   - 00034: Percent of Accounts Credit Union   - 00035: Percent of Trades Department Store   - 00037: Percent of Trades Opened Recently   - 00038: Percent of Trades Retail   - 00040: Percent of Trades Satisfactory   - 00051: 30 Days Delinquency Occurrences on Installment Trades   - 00053: 30 Days Delinquency Occurrences on Revolving Trades   - 00057: 60 Days Delinquency Occurrences On Installment Accounts   - 00059: 60 Days Delinquency Occurrences on Revolving Trades   - 00065: 90 Days Delinquency Occurrences On Revolving Accounts   - 00067: Age of Bankcard Account Activity   - 00068: Age of Bankcard Trades   - 00076: Age of Revolving Trades   - 00079: Age of Trade Activity   - 00080: Age of Trades   - 00083: Bankcard High Credit   - 00084: Bankcard Utilization   - 00088: Mortgage High Credit   - 00105: Number of Bankcard Accounts Past Due   - 00107: Number of Bankcard Trades with High Utilization   - 00109: Number of Collections   - 00121: Number of Department Store Accounts With High Utilization   - 00122: Number of Department Store Accounts With Major Derogatory Event   - 00123: Number of Inquiries   - 00124: Number of Installment Trades   - 00127: Number of Installment Accounts 30 Days Delinquent   - 00129: Number of Installment Trades 60+ Days Delinquent   - 00133: Number of Installment Accounts Opened Recently   - 00136: Number of Installment Trades with Major Derogatory Event   - 00137: Number of Mortgage Accounts With High Balance Outstanding   - 00139: Number of Open Auto Finance Trades   - 00141: Number of Open Credit Union Trades   - 00142: Number of Open Department Store Trades   - 00143: Number of Open Installment Accounts   - 00144: Number of Open Mortgage Trades   - 00145: Number of Open Personal Finance or Student Loan Trades   - 00147: Number of Open Revolving Accounts   - 00154: Number of Recent Inquiries   - 00167: Number of Revolving Accounts 120+ Days Delinquent   - 00168: Number of Revolving Accounts 120-180 or More Days Delinquent   - 00169: Number of Revolving Accounts 30 Days Delinquent   - 00170: Number of Revolving Accounts 60 Days Delinquent   - 00172: Number of Revolving Accounts 90 Days Delinquent   - 00178: Number of Revolving Trades with High Utilization   - 00189: Number of Satisfactory Revolving Accounts   - 00191: Number of Trades   - 00199: Number of Trades Opened Recently   - 00200: Number of Trades Past Due   - 00201: Number of Accounts With Balance   - 00203: Occurrence of Severe Derogatory Event   - 00205: Revolving High Credit   - 00206: Revolving Utilization   - 00207: Total Amount Past Due For Accounts   - 00208: Total Amount Past Due For Bankcard Accounts   - 00214: Total Balance on Bankcard Trades   - 00215: Total Balance on Credit Union Trades   - 00216: Total Balance on Department Store Trades   - 00219: Total Balance on Personal Finance or Student Loan Trades   - 00220: Total Balance on Retail Trades   - 00222: Total Balance on Sales Finance Trades   - 00223: Total Balance on Trades   - 00224: Total Collection Amount   - 00225: Worst Rating For Auto Finance Accounts   - 00226: Worst Rating for Mortgage Trades   - 00290: Insufficient information on or lack of bankcard trades   - 00291: Insufficient information on or lack of credit union trades   - 00292: Insufficient information on or lack of department store trades   - 00294: Insufficient information on or lack of mortgage trades   - 00295: Insufficient information on or lack of personal finance and student loan trades   - 00296: Insufficient information on or lack of retail trades   - 00297: Insufficient information on or lack of revolving trades   - 00298: Insufficient information on or lack of sales finance trades   - 00299: Insufficient information on or lack of trades   - 00304: 30 Days or Worse Delinquency Occurrences on Installment Trades   - 00306: Number of Revolving Accounts 120-180 or More Days Delinquent or With Major Derogatory Event   - 00307: Number of Auto Finance Accounts 90, 120-180 or More Days Delinquent or With Major Derogatory Event   - 00310: Foreclosure w/in 24 Months   - 00311: Bankruptcy w/in 24 Months    Score Reason corresponding to Model Number 02903   - 00002: Percent of Balance Past Due   - 00003: Percent of Bankcard Balance Past Due   - 00005: Percent of Bankcard Accounts 60+ Days Delinquent   - 00023: Percent of Revolving Accounts 120+ Days Delinquent   - 00030: Percent of Trades 120+ Days Delinquent   - 00033: Percent of Accounts Bankcard   - 00034: Percent of Accounts Credit Union   - 00035: Percent of Trades Department Store   - 00037: Percent of Trades Opened Recently   - 00038: Percent of Trades Retail   - 00040: Percent of Trades Satisfactory   - 00051: 30 Days Delinquency Occurrences on Installment Trades   - 00053: 30 Days Delinquency Occurrences on Revolving Trades   - 00057: 60 Days Delinquency Occurrences On Installment Accounts   - 00059: 60 Days Delinquency Occurrences on Revolving Trades   - 00065: 90 Days Delinquency Occurrences On Revolving Accounts   - 00067: Age of Bankcard Account Activity   - 00068: Age of Bankcard Trades   - 00076: Age of Revolving Trades   - 00079: Age of Trade Activity   - 00080: Age of Trades   - 00083: Bankcard High Credit   - 00084: Bankcard Utilization   - 00088: Mortgage High Credit   - 00105: Number of Bankcard Accounts Past Due   - 00107: Number of Bankcard Trades with High Utilization   - 00109: Number of Collections   - 00121: Number of Department Store Accounts With High Utilization   - 00122: Number of Department Store Accounts With Major Derogatory Event   - 00123: Number of Inquiries   - 00124: Number of Installment Trades   - 00127: Number of Installment Accounts 30 Days Delinquent   - 00129: Number of Installment Trades 60+ Days Delinquent   - 00133: Number of Installment Accounts Opened Recently   - 00136: Number of Installment Trades with Major Derogatory Event   - 00137: Number of Mortgage Accounts With High Balance Outstanding   - 00139: Number of Open Auto Finance Trades   - 00141: Number of Open Credit Union Trades   - 00142: Number of Open Department Store Trades   - 00143: Number of Open Installment Accounts   - 00144: Number of Open Mortgage Trades   - 00145: Number of Open Personal Finance or Student Loan Trades   - 00147: Number of Open Revolving Accounts   - 00154: Number of Recent Inquiries   - 00167: Number of Revolving Accounts 120+ Days Delinquent   - 00168: Number of Revolving Accounts 120-180 or More Days Delinquent   - 00169: Number of Revolving Accounts 30 Days Delinquent   - 00170: Number of Revolving Accounts 60 Days Delinquent   - 00172: Number of Revolving Accounts 90 Days Delinquent   - 00178: Number of Revolving Trades with High Utilization   - 00189: Number of Satisfactory Revolving Accounts   - 00191: Number of Trades   - 00199: Number of Trades Opened Recently   - 00200: Number of Trades Past Due   - 00201: Number of Accounts With Balance   - 00203: Occurrence of Severe Derogatory Event   - 00205: Revolving High Credit   - 00206: Revolving Utilization   - 00207: Total Amount Past Due For Accounts   - 00208: Total Amount Past Due For Bankcard Accounts   - 00214: Total Balance on Bankcard Trades   - 00215: Total Balance on Credit Union Trades   - 00216: Total Balance on Department Store Trades   - 00219: Total Balance on Personal Finance or Student Loan Trades   - 00220: Total Balance on Retail Trades   - 00222: Total Balance on Sales Finance Trades   - 00223: Total Balance on Trades   - 00224: Total Collection Amount   - 00225: Worst Rating For Auto Finance Accounts   - 00226: Worst Rating for Mortgage Trades   - 00290: Insufficient information on or lack of bankcard trades   - 00291: Insufficient information on or lack of credit union trades   - 00292: Insufficient information on or lack of department store trades   - 00294: Insufficient information on or lack of mortgage trades   - 00295: Insufficient information on or lack of personal finance and student loan trades   - 00296: Insufficient information on or lack of retail trades   - 00297: Insufficient information on or lack of revolving trades   - 00298: Insufficient information on or lack of sales finance trades   - 00299: Insufficient information on or lack of trades   - 00304: 30 Days or Worse Delinquency Occurrences on Installment Trades   - 00306: Number of Revolving Accounts 120-180 or More Days Delinquent or With Major Derogatory Event   - 00307: Number of Auto Finance Accounts 90, 120-180 or More Days Delinquent or With Major Derogatory Event   - 00310: Foreclosure w/in 24 Months   - 00311: Bankruptcy w/in 24 Months    Score Reason corresponding to Model Number 02904   - 00002: Percent of Balance Past Due   - 00003: Percent of Bankcard Balance Past Due   - 00005: Percent of Bankcard Accounts 60+ Days Delinquent   - 00023: Percent of Revolving Accounts 120+ Days Delinquent   - 00030: Percent of Trades 120+ Days Delinquent   - 00033: Percent of Accounts Bankcard   - 00034: Percent of Accounts Credit Union   - 00035: Percent of Trades Department Store   - 00037: Percent of Trades Opened Recently   - 00038: Percent of Trades Retail   - 00040: Percent of Trades Satisfactory   - 00051: 30 Days Delinquency Occurrences on Installment Trades   - 00053: 30 Days Delinquency Occurrences on Revolving Trades   - 00057: 60 Days Delinquency Occurrences On Installment Accounts   - 00059: 60 Days Delinquency Occurrences on Revolving Trades   - 00065: 90 Days Delinquency Occurrences On Revolving Accounts   - 00067: Age of Bankcard Account Activity   - 00068: Age of Bankcard Trades   - 00076: Age of Revolving Trades   - 00079: Age of Trade Activity   - 00080: Age of Trades   - 00083: Bankcard High Credit   - 00084: Bankcard Utilization   - 00088: Mortgage High Credit   - 00105: Number of Bankcard Accounts Past Due   - 00107: Number of Bankcard Trades with High Utilization   - 00109: Number of Collections   - 00121: Number of Department Store Accounts With High Utilization   - 00122: Number of Department Store Accounts With Major Derogatory Event   - 00123: Number of Inquiries   - 00124: Number of Installment Trades   - 00127: Number of Installment Accounts 30 Days Delinquent   - 00129: Number of Installment Trades 60+ Days Delinquent   - 00133: Number of Installment Accounts Opened Recently   - 00136: Number of Installment Trades with Major Derogatory Event   - 00137: Number of Mortgage Accounts With High Balance Outstanding   - 00139: Number of Open Auto Finance Trades   - 00141: Number of Open Credit Union Trades   - 00142: Number of Open Department Store Trades   - 00143: Number of Open Installment Accounts   - 00144: Number of Open Mortgage Trades   - 00145: Number of Open Personal Finance or Student Loan Trades   - 00147: Number of Open Revolving Accounts   - 00154: Number of Recent Inquiries   - 00167: Number of Revolving Accounts 120+ Days Delinquent   - 00168: Number of Revolving Accounts 120-180 or More Days Delinquent   - 00169: Number of Revolving Accounts 30 Days Delinquent   - 00170: Number of Revolving Accounts 60 Days Delinquent   - 00172: Number of Revolving Accounts 90 Days Delinquent   - 00178: Number of Revolving Trades with High Utilization   - 00189: Number of Satisfactory Revolving Accounts   - 00191: Number of Trades   - 00199: Number of Trades Opened Recently   - 00200: Number of Trades Past Due   - 00201: Number of Accounts With Balance   - 00203: Occurrence of Severe Derogatory Event   - 00205: Revolving High Credit   - 00206: Revolving Utilization   - 00207: Total Amount Past Due For Accounts   - 00208: Total Amount Past Due For Bankcard Accounts   - 00214: Total Balance on Bankcard Trades   - 00215: Total Balance on Credit Union Trades   - 00216: Total Balance on Department Store Trades   - 00219: Total Balance on Personal Finance or Student Loan Trades   - 00220: Total Balance on Retail Trades   - 00222: Total Balance on Sales Finance Trades   - 00223: Total Balance on Trades   - 00224: Total Collection Amount   - 00225: Worst Rating For Auto Finance Accounts   - 00226: Worst Rating for Mortgage Trades   - 00290: Insufficient information on or lack of bankcard trades   - 00291: Insufficient information on or lack of credit union trades   - 00292: Insufficient information on or lack of department store trades   - 00294: Insufficient information on or lack of mortgage trades   - 00295: Insufficient information on or lack of personal finance and student loan trades   - 00296: Insufficient information on or lack of retail trades   - 00297: Insufficient information on or lack of revolving trades   - 00298: Insufficient information on or lack of sales finance trades   - 00299: Insufficient information on or lack of trades   - 00304: 30 Days or Worse Delinquency Occurrences on Installment Trades   - 00306: Number of Revolving Accounts 120-180 or More Days Delinquent or With Major Derogatory Event   - 00307: Number of Auto Finance Accounts 90, 120-180 or More Days Delinquent or With Major Derogatory Event   - 00310: Foreclosure w/in 24 Months   - 00311: Bankruptcy w/in 24 Months    Score Reason corresponding to Model Number 02470   - 00008: Number of Accounts with Past Due Balances   - 00011: Number of Accounts with High Balances   - 00019: Number of Bank Revolving Accounts with High Balances   - 00021: Lack of Recently Reported Bank Installment Accounts   - 00025: Utilization of Available Credit on Bank Revolving Accounts   - 00026: Utilization of Available Credit on Department Store Accounts   - 00027: Too few Accounts Currently or in the Past Paid as Agreed   - 00032: Percent of Accounts Reported in the Past 12 Months versus Total Accounts on File   - 00033: Percent of Bank Revolving Accounts Reported in the Past 12 Months versus Total Bank Revolving Accounts on File   - 00044: Percent of Retail Accounts versus Total Accounts Reported in the Past 12 Months   - 00048: Percent of Accounts Opened in the Past 24 Months versus Total Accounts   - 00060: Number of Personal Finance Accounts   - 00063: Lack of Recently Opened Accounts   - 00065: Number of Accounts Currently 30+ Days Late   - 00068: Number of Accounts Reported as 90-120 Days Late in the Past 24 Months or Status of Accounts is Unknown   - 00071: Number of Accounts with Low Balance of High Credit is Too Few   - 00072: Number of Consumer Initiated Inquiries in the Past 12 Months   - 00076: Percent of Credit Union Accounts versus Total Accounts Reported in the Past 12 Months   - 00077: Utilization on Revolving Accounts Reported in the Past 6 Months   - 00094: Number of Bank Revolving Accounts with Past Due Balances or Status of Accounts is Unknown   - 00114: Insufficient Number or Lack of Personal Finance Accounts   - 00115: Number of Travel and Entertainment Accounts Always Paid as Agreed   - 00116: Number of Bank Installment Accounts Currently or in the Past 60+ Days Late   - 00117: Number of Personal Finance Accounts Currently or in the Past 60+ Days Late   - 00118: Number of Auto Finance Accounts Currently or in the Past 30+ Days Late   - 00119: Number of Accounts Opened in the Past 6 Months   - 00190: Lack of Recently Reported Revolving Account Information   - 00191: Lack of Recently Reported Credit Union Account Information   - 00192: Lack of Recently Reported Retail Account Information   - 00193: Lack of Recently Reported Auto Finance Account Information   - 00194: Lack of Recently Reported Bank Installment Account Information   - 00195: Lack of Recently Reported Department Store Account Information   - 00196: Lack of Recently Reported Travel &amp; Entertainment Account Information   - 00197: Lack of Recently Reported Bank Revolving Account Information   - 00198: Lack of Recently Reported Bank Balances on Accounts   - 00199: Lack of Recently Reported Status on Accounts    Score Reason corresponding to Model Number 02557   - 00008: Number of Accounts with Past Due Balances   - 00011: Number of Accounts with High Balances   - 00019: Number of Bank Revolving Accounts with High Balances   - 00021: Lack of Recently Reported Bank Installment Accounts   - 00025: Utilization of Available Credit on Bank Revolving Accounts   - 00026: Utilization of Available Credit on Department Store Accounts   - 00027: Too few Accounts Currently or in the Past Paid as Agreed   - 00032: Percent of Accounts Reported in the Past 12 Months versus Total Accounts on File   - 00033: Percent of Bank Revolving Accounts Reported in the Past 12 Months versus Total Bank Revolving Accounts on File   - 00044: Percent of Retail Accounts versus Total Accounts Reported in the Past 12 Months   - 00048: Percent of Accounts Opened in the Past 24 Months versus Total Accounts   - 00060: Number of Personal Finance Accounts   - 00063: Lack of Recently Opened Accounts   - 00065: Number of Accounts Currently 30+ Days Late   - 00068: Number of Accounts Reported as 90-120 Days Late in the Past 24 Months or Status of Accounts is Unknown   - 00071: Number of Accounts with Low Balance of High Credit is Too Few   - 00072: Number of Consumer Initiated Inquiries in the Past 12 Months   - 00076: Percent of Credit Union Accounts versus Total Accounts Reported in the Past 12 Months   - 00077: Utilization on Revolving Accounts Reported in the Past 6 Months   - 00094: Number of Bank Revolving Accounts with Past Due Balances or Status of Accounts is Unknown   - 00114: Insufficient Number or Lack of Personal Finance Accounts   - 00115: Number of Travel and Entertainment Accounts Always Paid as Agreed   - 00116: Number of Bank Installment Accounts Currently or in the Past 60+ Days Late   - 00117: Number of Personal Finance Accounts Currently or in the Past 60+ Days Late   - 00118: Number of Auto Finance Accounts Currently or in the Past 30+ Days Late   - 00119: Number of Accounts Opened in the Past 6 Months   - 00190: Lack of Recently Reported Revolving Account Information   - 00191: Lack of Recently Reported Credit Union Account Information   - 00192: Lack of Recently Reported Retail Account Information   - 00193: Lack of Recently Reported Auto Finance Account Information   - 00194: Lack of Recently Reported Bank Installment Account Information   - 00195: Lack of Recently Reported Department Store Account Information   - 00196: Lack of Recently Reported Travel &amp; Entertainment Account Information   - 00197: Lack of Recently Reported Bank Revolving Account Information   - 00198: Lack of Recently Reported Bank Balances on Accounts   - 00199: Lack of Recently Reported Status on Accounts    Score Reason corresponding to Model Number 02458   - 00003: Length of Time Accounts Have Been Established   - 00005: Too Few Accounts Established   - 00008: Number of Accounts With Past Due Balances   - 00009: Current Delinquent Rating Reported   - 00024: Utilization of Available Credit on Accounts   - 00027: Too Few Accounts Currently or in the Past Paid as Agreed   - 00028: Too Few Bank Revolving Accounts Currently or in the Past Paid as Agreed   - 00041: Percent of Bank Revolving Accounts versus Total Accounts Reported in the Past 12 Months   - 00043: Percent of Bank Installment Accounts versus Total Accounts Reported in the Past 12 Months   - 00061: Number of Derogatory Public Record Items on File   - 00062: Number of Accounts Not Paid as Agreed in the Past 24 Months   - 00071: Number of Accounts with Low Balance of High Credit is Too Few in the Last 12 Months   - 00072: Number of Consumer Initiated Inquiries in the Past 12 Months   - 00073: Number of Consumer Initiated Retail Inquiries in the Past 12 Months   - 00074: Number to Telco/Utility Accounts Reported Bad Debt   - 00075: Too Few Auto Finance Accounts with No Reported Last Payments   - 00076: Percent of Credit Union Accounts versus Total Accounts Reported in the Past 12 Months   - 00077: Utilization on Revolving Accounts Reported in the Past 6 Months    Score Reason corresponding to Model Number 02479   - xxxxx: Recovery Index Score doesn&amp;apos;t return reason code    Score Reason corresponding to Model Number 02978   - 00: No usable accounts   - 01: No open accounts   - 02: No accounts with valid credit amount   - 03: No recently reported accounts   - 04: No presently rated accounts   - 05: No rated accounts   - 06: No open, rated accounts   - 07: No recently opened, rated accounts   - 08: No accounts with a valid open date   - 09: No open accounts with a balance   - 10: No usable installment accounts   - 11: No open installment accounts   - 12: No installment accounts with valid credit amount   - 16: No open, rated installment accounts   - 17: No recently opened, rated installment accounts   - 20: No usable revolving accounts   - 21: No open revolving accounts   - 22: No revolving accounts with a valid credit amount   - 28: No revolving accounts with a valid open date   - 30: No usable bankcard accounts   - 31: No open bankcard accounts   - 32: No bankcard accounts with a valid credit amount   - 33: No recently reported bankcard accounts   - 35: No rated bankcard accounts   - 36: No open, rated bankcard accounts   - 40: No usable auto accounts   - 45: No rated auto accounts   - 46: No open, rated auto accounts   - 50: No usable real estate accounts   - 51: No open real estate accounts   - 52: No real estate accounts with valid credit amount   - 55: No rated real estate accounts   - 60: No usable retail revolving accounts   - 61: No open retail revolving accounts   - 62: No retail revolving accounts with a valid credit amount   - 90: Too few accounts   - 91: Presence of a bankruptcy   - 1A: No recently rated installment accounts   - 2A: No recently rated revolving accounts   - 2B: No recently opened revolving accounts   - 3A: No recently rated bankcard accounts   - 4A: No recently rated auto accounts   - 5A: No recently rated real estate accounts   - AA: Too few auto accounts consistently paid on time   - AB: Too few auto accounts with no severe delinquency   - AC: Too many auto accounts with severe delinquency/derog status   - AD: Worst status on auto accounts is delinquent/derog   - AE: Worst status in recent months on auto accounts is delinquent/derog   - AF: Worst present status on open auto accounts is delinquent   - AG: Newest delinquency/derog status on auto accounts is too recent   - BA: Too many recently opened bankcard accounts   - BB: Too many open bankcard accounts   - BC: Too many open bankcard accounts, open for at least six months   - BD: Too many open bankcard accounts with a balance   - BE: Too many open bankcard accounts with a high balance   - BF: Too many bankcard accounts with high utilization   - BG: Too few open bankcard accounts, open for at least six months   - BH: Too few bankcard accounts consistently paid on time   - BJ: Too many bankcard accounts with delinquency/derog status in recent months   - BK: Worst status on bankcard accounts is delinquent/derog   - BL: Worst status in recent months on bankcard accounts is delinquent/derog   - BM: Worst present status on open bankcard accounts is delinquent   - BN: Sum of balances on bankcard accounts is too high   - BP: Available credit on open bankcard accounts is too low   - BQ: Average credit amount on open bankcard accounts is too low   - BR: Maximum credit amount on open bankcard accounts is too low   - BS: Open bankcard account balance/credit amount ratio is too high   - BT: Too high proportion of bankcard accounts were opened recently   - BU: Too high proportion of bankcard accounts recently delinquency/derog   - BV: Too high proportion of balances from open bankcard accounts   - BW: Too high proportion of bankcard accounts have high utilization   - CA: Too many collection agency accounts with an amount greater than $250   - CB: Too many unpaid collection agency accounts   - CC: Too many collection agency accounts   - CD: Too many recent collection agency accounts   - CE: Presence of a collection agency account   - CF: The sum of balances on collection agency accounts is too high   - CG: Time since youngest collection agency account opened is too recent   - CH: Too high proportion of collection agency accounts were opened recently   - CJ: Too high proportion of collection agency accounts are unpaid   - DA: Too many open retail revolving accounts with a balance   - DB: Too many retail revolving accounts with high utilization   - DC: Too few retail accounts with no severe delinquencies   - DD: Sum of balances on open retail revolving accounts is too high   - DE: Open retail revolving account balance/credit amount ratio is too high   - FA: Too many finance company accounts   - FB: Too many open finance company accounts   - IA: Too many recently opened installment accounts   - IB: Presence of presently delinquent/derog installment accounts   - IC: Presence of severe delinquency/derog status on an installment account   - ID: Worst status on installment accounts is delinquent/derog   - IE: Worst status in recent months on installment accounts is delinquent/derog   - IF: Worst status on recently opened installment accounts is delinquent/derog   - IG: Worst present status on open installment accounts is delinquent   - IH: Sum of balances on delinquent/derog installment accounts is too high   - IJ: Sum of credit amounts on open installment accounts is too low   - IK: Average credit amount on open installment accounts is too low   - IL: Amount paid down on open installment accounts is too low   - IM: Newest delinquency/derog status on installment accounts is too recent   - IN: Open installment account balance/credit amount ratio is too high   - IP: Too high proportion of balances from open non-installment accounts   - MA: Too few open real estate accounts   - MB: Too few real estate accounts with no severe delinquencies   - MC: Worst status in recent months on real estate accounts is delinquent/derog   - MD: Worst present status on open real estate accounts is delinquent   - ME: Average credit amount on open real estate accounts is too low   - MF: Amount paid down on open real estate accounts is too low   - MG: Too low proportion of accounts are real estate accounts   - PA: Too many public record judgments/tax liens   - PB: Too many recent public record judgments/tax liens   - PC: Too many unsatisfied public record judgments/tax liens   - PD: Too many public record bankruptcy filings   - PE: Newest public record judgment/tax lien is too recent   - PF: Presence of public record judgment/tax lien since bankruptcy filing   - PG: Too high proportion of public record judgments/tax liens are unsatisfied   - Q0: Number of inquiries was also a factor, but effect was not significant   - QA: Too many recent inquiries   - QB: Too many inquiries   - RA: Too many open revolving accounts   - RB: Too few revolving accounts with a high credit amount   - RC: Too many revolving accounts with high utilization   - RD: Presence of presently delinquent/derog revolving accounts   - RE: Too many revolving accounts with delinquency/derog status   - RF: Worst status of any revolving account is delinquent/derog   - RG: Worst status in recent months on revolving accounts is delinquent/derog   - RH: Worst status on recently opened revolving accounts is delinquent/derog   - RJ: Sum of balances on revolving accounts is too high   - RK: Average balance on open revolving trades is too high   - RL: Available credit on open revolving accounts is too low   - RM: Sum of balances on delinquent/derog revolving accounts is too high   - RN: Average credit amount on open revolving accounts is too low   - RP: Time since oldest revolving account opened is too recent   - RQ: Time since youngest revolving account opened is too recent   - RR: Average time since revolving accounts opened is too recent   - RS: Newest delinquency/derog status on revolving accounts is too recent   - RT: Open revolving account balance/credit amount ratio is too high   - RU: Recenlty opened revolving account balance/credit amount ratio is too high   - RV: Too high proportion of revolving account delinquencies/derogs are recent   - RW: Too high proportion of recently opened accounts are revolving accounts   - RX: Too high proportion of balances from open revolving accounts   - RY: Too high proportion of revolving accounts have high utilization   - T0: Too high proportion of account delinquencies/derogs are recent   - T1: Too low proportion of accounts paid on time in recent months   - T2: Too low proportion of accounts with no recent severe delinquency   - T3: Too high proportion of accounts recently delinquency/derog   - TA: Too many recently opened accounts   - TB: Too few recently reported accounts presently current   - TC: Too many recently reported accounts presently delinquent/derog   - TD: Too few accounts paid on time in recent months   - TE: Presence of presently delinquent/derog accounts   - TF: Too many open accounts presently delinquent   - TG: Too many recently opened accounts with delinquency/derog status   - TH: Too many accounts with a bankrupt status   - TJ: Too many accounts with delinquency/derog status in recent months   - TK: Worst status on accounts is delinquent/derog   - TL: Worst status on recently opened accounts is delinquent/derog   - TM: Worst present status on open accounts is delinquent   - TN: Worst present status on recently opened, open accounts is delinquent   - TP: Worst present performance on accounts is delinquent/derog   - TQ: Open account balance/credit amount ratio is too high   - TR: Sum of balances on delinquent/derog accounts is too high   - TS: Time since oldest account opened is too recent   - TT: Time since youngest account opened is too recent   - TU: Average time since accounts opened is too recent   - TV: Newest delinquency/derog status on accounts is too recent   - TW: Presence of delinquency/derog status since bankruptcy filing   - TX: Ratio of accounts consistently paid on time to all accounts is too low   - TY: Too high proportion of accounts are in delinquency/derog status   - TZ: Too high proportion of accounts were opened recently   - --: No adverse action applied    Score Reason corresponding to Model Number 02991   - 00: No hay cuentas utilizables   - 01: No hay cuentas abiertas   - 02: No hay cuentas con monto de credito valido   - 03: No hay cuentas recientemente reportadas   - 04: No hay cuentas actualmente calificadas   - 05: No hay cuentas calificadas   - 06: No hay cuentas abiertas calificadas   - 07: No hay cuentas recientemente abiertas calificadas   - 08: No hay cuentas con fecha de apertura valida   - 09: No hay cuentas abiertas con saldo   - 10: No hay cuentas a plazo utilizables   - 11: No hay cuentas a plazo abiertas   - 12: No hay cuentas a plazo con monto de credito valido   - 16: No hay cuentas a plazo abiertas calificadas   - 17: No hay cuentas a plazo recientemente abiertas calificadas   - 20: No hay cuentas rotatoria utilizables   - 21: No hay cuentas rotatorias abiertas   - 22: No hay cuentas rotatorias con credito valido   - 28: No hay cuentas rotatorias con fecha apertura valida   - 30: No hay tarjetas bancarias utilizables   - 31: No hay tarjetas bancarias abiertas   - 32: No hay tarjetas bancarias con credito valido   - 33: No hay tarjetas bancarias recientemente reportadas   - 35: No hay tarjetas bancarias calificadas   - 36: No hay tarjetas bancarias abiertas calificadas   - 40: No hay cuentas de auto utilizables   - 45: No hay cuentas de auto calificadas   - 46: No hay cuentas de auto abiertas calificadas   - 50: No hay cuentas inmobiliarias utilizables   - 51: No hay cuentas inmobiliarias abiertas   - 52: No hay cuentas inmobiliarias con credito valido   - 55: No hay cuentas inmobiliarias calificadas   - 60: No hay cuentas rotatorias de consumo utilizables   - 61: No hay cuentas rotatorias de consumo abiertas   - 62: No hay cuentas rotatorias de consumo con credito valido   - 90: Muy pocas cuentas   - 91: Presencia de quiebra   - 1A: No hay cuentas a plazo recientemente calificadas   - 2A: No hay cuentas rotatorias recientemente calificadas   - 2B: No hay cuentas rotatorias recientemente abiertas   - 3A: No hay tarjetas bancarias recientemente calificadas   - 4A: No hay cuentas de auto recientemente calificadas   - 5A: No hay cuentas inmobiliarias recientemente calificadas   - AA: Muy pocas cuentas de auto consistentemente pagadas a tiempo   - AB: Muy pocas cuentas de auto sin mora severa   - AC: Numero excesivo de cuentas de auto en estado incobrable/mora severos   - AD: Peor estado en cuentas de auto es incobrable/mora   - AE: Peor estado reciente en en cuentas de auto es incobrable/mora   - AF: Peor estado actual en cuentas de auto abiertas es mora   - AG: Estado incobrable/mora mas reciente en cuentas de auto es muy reciente   - BA: Muchas tarjetas bancarias recientemente abiertas   - BB: Muchas tarjetas bancarias abiertas   - BC: Muchas tarjetas bancarias abiertas por lo menos seis meses   - BD: Muchas tarjetas bancarias abiertas con un saldo   - BE: Muchas tarjetas bancarias abiertas con un saldo alto   - BF: Muchas tarjetas bancarias con alta utilizacion   - BG: Muy pocas tarjetas bancarias abiertas por lo menos seis meses   - BH: Muy pocas tarjetas bancarias consistentemente pagadas a tiempo   - BJ: Muchas tarjetas bancarias con estado incobrable/mora en meses recientes   - BK: Peor estado tarjetas bancarias incobrable/mora   - BL: Peor estado reciente en tarjetas bancarias abiertas incobrable/mora   - BM: Peor estado actual tarjetas bancarias abiertas es mora   - BN: Suma saldos tarjetas bancarias es muy alta   - BP: Credito disponible en tarjetas bancarias abiertas es muy bajo   - BQ: Monto de credito promedio en tarjetas bancarias abiertas muy bajo   - BR: Monto de credito maximo en tarjetas bancarias abiertas muy bajo   - BS: Relacion saldo y monto de credito de tarjetas bancarias abiertas muy alta   - BT: Proporcion muy alta tarjetas bancarias fueron abiertas recientemente   - BU: Proporcion muy alta tarjetas bancarias recientemente en incobrables/mora   - BV: Proporcion muy alta de saldos de tarjetas bancarias abiertas   - BW: Proporcion muy alta de tarjetas bancarias tienen alta utilizacion   - CA: Demasiadas cuentas en agencia de cobro con un monto superior a $250   - CB: Demasiadas cuentas en agencia de cobro sin pagar   - CC: Demasiadas cuentas en agencias de cobro   - CD: Demasiadas cuentas en agencia de cobro recientes   - CE: Presencia de una cuenta en agencia de cobro   - CF: Suma de saldos de cuentas en agencias de cobro es muy alta   - CG: Plazo desde apertura de ultima cuenta con agencia de cobro muy reciente   - CH: Porcion muy alta de cuentas en agencias de cobro abiertas recientemente   - CJ: Proporcion muy alta de cuentas en agencias de cobro estan sin pagar   - DA: Demasiadas cuentas rotatorias de consumo abiertas con un saldo   - DB: Demasiadas cuentas rotatorias de consumo con alta utilizacion   - DC: Muy pocas cuentas de consumo sin morosidad severa   - DD: Suma de saldos en cuentas rotatorias de consumo abiertas es muy alta   - DE: Relacion saldo y monto credito ctas rotatorias consumo abiertas muy alta   - FA: Demasiadas cuentas con companias financieras   - FB: Demasiadas cuentas abiertas con companias financieras   - IA: Demasiadas cuentas a plazo recientemente abiertas   - IB: Presencia de cuentas a plazo actualmente en incobrable/mora   - IC: Presencia de estado incobrable/ mora severo en una cuenta a plazo   - ID: Peor estado en cuentas a plazo es incobrable/mora   - IE: Peor estado reciente en en cuentas a plazo es incobrable/mora   - IF: Peor estado en cuentas a plazo recientemente abiertas es incobrable/mora   - IG: Peor estado actual en cuentas a plazo abiertas es de mora   - IH: Suma de saldos en cuentas a plazo en incobrables/mora es muy alta   - IJ: Suma de montos de credito en cuentas a plazo abiertas es muy baja   - IK: Monto de credito promedio en cuentas a plazo abiertas es muy bajo   - IL: Monto pagado en cuentas a plazos abiertas es muy abajo   - IM: Estado incobrable/mora mas reciente en cuentas a plazo es muy reciente   - IN: Relacion entre saldo y monto de credito de cuentas a plazo es muy alta   - IP: Proporcion excesivamente alta saldos cuentas abiertas que no son a plazo   - MA: Muy pocas cuentas inmobiliarias abiertas   - MB: Muy pocas cuentas inmobiliarias sin mora severa   - MC: Peor estado reciente en en cuentas inmobiliarias es incobrable/mora   - MD: Peor estado actual en cuentas inmobiliarias abiertas es mora   - ME: Monto de credito promedio en cuentas inmobiliarias abiertas es muy bajo   - MF: Monto pagado en cuentas inmobiliarias abiertas es muy bajo   - MG: Proporcion excesivamente baja de cuentas son cuentas inmobiliarias   - PA: Demasiados gravamenes tributarios/sentencias anotados   - PB: Demasiados gravamenes tributarios/sentencias anotados recientes   - PC: Muchos gravamenes tributarios/sentencias anotados no pagados o ejecutadas   - PD: Demasiadas declaraciones de quiebra anotadas   - PE: Gravamen tributario o sentencia inscrito mas reciente es muy reciente   - PF: Hay gravamen tributario/sentencia anotados desde declaracion de quiebra   - PG: Muchos gravamenes tributarios/sentencias anotados no pagados o ejecutadas   - Q0: Numero de consultas fue un factor, pero el efecto no fue significativo   - QA: Numero excesivo de consultas recientes   - QB: Numero excesivo de consultas   - RA: Numero excesivo de cuentas rotatorias abiertas   - RB: Muy pocas cuentas rotatorias con un monto de credito alto   - RC: Numero excesivo de cuentas rotatorias con alta utilizacion   - RD: Presencia de cuentas rotatorias actualmente en incobrable/mora   - RE: Numero excesivo de cuentas rotatorias con estado incobrable/mora   - RF: Peor estado de cualquier cuenta rotatoria es incobrable/mora   - RG: Peor estado reciente en en cuentas rotatorias es incobrable/mora   - RH: Peor estado cuentas rotatorias abiertas recientemente es incobrable/mora   - RJ: Suma de saldos en cuentas rotatorias es muy alta   - RK: Saldo promedio en cuentas rotatorias abiertas es muy alto   - RL: Credito disponible en cuentas rotatorias abiertas es muy bajo   - RM: Suma de saldos de cuentas rotatorias en incobrable/mora es muy alta   - RN: Monto de credito promedio en cuentas rotatorias abiertas es muy bajo   - RP: Tiempo desde que se abrio cuenta rotatoria mas vieja es muy reciente   - RQ: Tiempo desde que se abrio cuenta rotatoria mas nueva es muy reciente   - RR: Tiempo promedio desde que se abrieron cuentas rotatorias es muy reciente   - RS: Estado incobrable/mora mas reciente en cuentas rotatorias es muy reciente   - RT: Relacion saldo y monto de credito cuentas rotatorias abiertas es muy alta   - RU: Ratio saldo y monto credito cuentas rotatorias recien abiertas muy alta   - RV: Proporcion estado incobrable/mora reciente en cuentas rotatorias muy alta   - RW: Proporcion muy alta de cuentas recien abiertas son cuentas rotatorias   - RX: Proporcion muy alta de saldos de cuentas rotatorias abiertas   - RY: Proporcion muy alta de cuentas rotatorias tienen alta utilizacion   - T0: Proporcion muy alta de estado incobrable/mora recientes en cuentas   - T1: Proporcion muy baja de cuentas pagadas a tiempo en meses recientes   - T2: Proporcion muy baja de cuentas sin morosidad severa reciente   - T3: Proporcion excesiva cuentas recientemente en incobrable/mora   - TA: Numero excesivo cuentas recientemente abiertas   - TB: Muy pocas cuentas recientemente reportadas actualmente pagadas a tiempo   - TC: Demasiadas cuentas recientemente reportadas actualmente incobrable/mora   - TD: Muy pocas cuentas pagadas a tiempo en meses recientes   - TE: Presencia cuentas actualmente en mora o incobrables   - TF: Numero excesivo cuentas abiertas actualmente en mora   - TG: Numero excesivo cuentas recientemente abiertas con estado incobrable/mora   - TH: Numero excesivo cuentas con un estado de quiebra   - TJ: Numero excesivo cuentas con un estado incobrable/mora en meses recientes   - TK: Peor estado en cuentas es de mora o incobrable   - TL: Peor estado en cuentas recientemente abiertas es incobrable/mora   - TM: Peor estado actual en cuentas abiertas es de mora   - TN: Peor estado actual en cuentas abiertas, recientemente abiertas es de mora   - TP: Peor rendimiento actual de cuentas es mora o incobrable   - TQ: Relacion entre saldo cuentas y monto del credito es muy alta   - TR: Suma de los saldos de cuentas en incobrable/mora es muy alta   - TS: Tiempo desde que se abrio cuenta mas vieja es muy reciente   - TT: Tiempo desde que se abrio cuenta mas nueva es muy reciente   - TU: Tiempo promedio desde que se abrieron cuentas es muy reciente   - TV: Estado mas reciente incobrable/mora en cuentas es muy reciente   - TW: Presencia estado incobrable/ mora desde la declaracion de quiebra   - TX: Proporcion de cuentas consistentemente pagadas a tiempo es muy baja   - TY: Proporcion excesiva cuentas estan en estado moroso o son incobrables   - TZ: Proporcion excesiva de cuentas fueron abiertas recientemente   - --: No se aplico una medida negativa    Score Reason corresponding to Model Number 05008   - 00: You have no accounts that can be used in determining a credit score   - 01: You have no open accounts   - 02: None of your accounts show a credit amount   - 03: You have no recently reported accounts   - 04: You have no accounts that currently show your payment status   - 05: You have no accounts that show your payment status   - 06: You have no open accounts that show a payment status   - 07: You have no recently opened accounts that show a payment status   - 08: None of your accounts show when they were opened   - 09: You have no open accounts with a balance   - 10: No usable installment accounts   - 11: You have no open installment accounts   - 12: None of your installment accounts show a credit amount   - 16: You have no open installment accounts that show a payment status   - 17: You have no recently opened installment accounts that show a payment status   - 20: No usable revolving accounts   - 21: You have no open revolving credit accounts   - 22: None of your revolving accounts show a credit amount   - 28: None of your revolving accounts show when they were opened   - 30: No usable bankcard accounts   - 31: You have no open bank credit card accounts   - 32: None of your bank credit card accounts show a credit amount   - 33: You have no recently reported bank credit card accounts   - 35: You have no bank credit card accounts that show your payment status   - 36: You have no open bank credit card accounts that show a payment status   - 40: You have no auto accounts that can be used in determining a credit score   - 45: You have no auto accounts that show your payment status   - 46: You have no open auto accounts that show a payment status   - 50: No usable real estate accounts   - 51: You have no open real estate accounts   - 52: None of your real estate accounts show a credit amount   - 55: You have no real estate accounts that show your payment status   - 60: No usable retail revolving accounts   - 61: You have no open retail revolving accounts   - 62: None of your retail revolving accounts show a credit amount   - 90: You have too few credit accounts   - 91: There is a bankruptcy on your credit report   - 1A: None of your installment accounts have recently reported your payment status   - 2A: None of your revolving accounts have recently reported your payment status   - 2B: You have no recently opened revolving credit accounts   - 3A: No recently rated bankcard accounts   - 4A: None of your auto accounts have recently reported your payment status   - 5A: None of your real estate accounts have recently reported your payment status   - AA: Not enough of your auto accounts have been consistently paid on time   - AB: Too many of your auto accounts have a severe delinquency   - AC: Too many of your auto accounts are severely delinquent or derogatory   - AD: Worst status on auto accounts is delinquent/derogatory   - AE: Worst status in recent months on auto accounts is delinquent/derogatory   - AF: A delinquency is currently the worst status on your open auto accounts   - AG: Newest delinquency/derogatory status on auto accounts is too recent   - BA: You have too many recently opened bank credit card accounts   - BB: You have too many open bank credit card accounts   - BC: Too many open bankcard accounts, open for at least six months   - BD: You have too many open bank credit card accounts with a balance   - BE: You have too many open bank credit card accounts with a high balance   - BF: You have too many bank credit card accounts with high utilization   - BG: Too few open bankcard accounts, open for at least six months   - BH: Not enough of your bank credit card accounts are consistently paid on time   - BJ: Too many bankcard accounts with delinquency/derog status in recent months   - BK: Worst status on bankcard accounts is delinquent/derogatory   - BL: Worst status in recent months on bankcard accounts is delinquent/derogatory   - BM: Worst present status on open bankcard accounts is delinquent   - BN: The sum of your bank credit card account balances is too high   - BP: The available credit on your open bank credit card accounts is too low   - BQ: Your average credit amount on bank credit cards is too low   - BR: The maximum credit amount on your open bank credit card accounts is too low   - BS: Open bankcard account balance/credit amount ratio is too high   - BT: Too high a proportion of your bank credit card accounts were opened recently   - BU: Too high proportion of bankcard accounts recently delinquency/derogatory   - BV: Too high proportion of balances from open bankcard accounts   - BW: Too many of your bank credit card accounts have high utilization   - CA: Too many collection agency accounts with an amount greater than $250   - CB: You have too many unpaid collection agency accounts   - CC: You have too many collection agency accounts   - CD: You have too many recent collection agency accounts   - CE: You have a collection agency account listed on your credit report   - CF: You have a high sum of balances on collection agency accounts   - CG: You have a collection agency account that was recently opened   - CH: Too many of your collection agency accounts were opened recently   - CJ: Too many of your collection accounts are unpaid   - DA: You have too many open retail revolving credit accounts with a balance   - DB: You have too many retail revolving credit accounts with high utilization   - DC: Too many of your retail credit accounts have severe delinquencies   - DD: The sum of your open retail revolving credit account balances is too high   - DE: Open retail revolving account balance/credit amount ratio is too high   - FA: You have too many finance company accounts   - FB: You have too many open finance company accounts   - IA: You have too many recently opened installment accounts   - IB: You have installment accounts that are currently delinquent or derogatory   - IC: You have an installment account that is severely delinquent or derogatory   - ID: Worst status on installment accounts is delinquent/derogatory   - IE: Worst status in recent months on installment accounts is delinquent/derog   - IF: Worst status on recently opened installment accounts is delinquent/derogatory   - IG: Worst present status on open installment accounts is delinquent   - IH: Sum of balances on delinquent/derogatory installment accounts is too high   - IJ: Your sum of credit amounts on installment accounts is too low   - IK: Your average credit amount on installment accounts is too low   - IL: The amount paid on your open installment accounts is too low   - IM: Newest delinquency/derogatory status on installment accounts is too recent   - IN: Open installment account balance/credit amount ratio is too high   - IP: Too high proportion of balances from open non-installment accounts   - MA: You do not have enough open real estate accounts   - MB: Too many of your real estate accounts have been severely delinquent   - MC: Worst status in recent months on real estate accounts is delinquent/derog   - MD: Worst present status on open real estate accounts is delinquent   - ME: Your average credit amount on open real estate accounts is too low   - MF: The amount paid on your open real estate accounts is too low   - MG: Too low of a proportion of your accounts are real estate accounts   - PA: There are too many public record judgments or tax liens on your credit report   - PB: Too many recent public record judgments/tax liens   - PC: Too many unsatisfied public record judgments/tax liens   - PD: There are too many public record bankruptcy filings on your credit report   - PE: You have one or more public record judgments or tax liens that are too recent   - PF: Presence of public record judgment/tax lien since bankruptcy filing   - PG: Too high proportion of public record judgments/tax liens are unsatisfied   - Q0: Number of inquiries was also a factor, but effect was not significant   - QA: You have too many recent inquiries on your credit report   - QB: You have too many inquiries on your credit report   - RA: You have too many open revolving credit accounts   - RB: You have too few revolving accounts with high credit limits   - RC: You have too many revolving credit accounts with high utilization   - RD: Presence of presently delinquent/derogatory revolving accounts   - RE: Too many of your revolving credit accounts are delinquent or derogatory   - RF: Worst status of any revolving account is delinquent/derogatory   - RG: Worst status in recent months on revolving accounts is delinquent/derogatory   - RH: Worst status on recently opened revolving accounts is delinquent/derogatory   - RJ: The sum of your revolving credit account balances is too high   - RK: The average balance on open revolving credit accounts is too high   - RL: The available credit on your open revolving credit accounts is too low   - RM: Sum of balances on delinquent/derogatory revolving accounts is too high   - RN: Your average credit amount on open revolving accounts is too low   - RP: Your oldest revolving credit account was opened too recently   - RQ: Your newest revolving credit account was opened too recently   - RR: On average, your revolving credit accounts were opened too recently   - RS: Newest delinquency/derogatory status on revolving accounts is too recent   - RT: Open revolving account balance/credit amount ratio is too high   - RU: Recently opened revolving account balance/credit amount ratio is too high   - RV: Too high proportion of revolving account delinquencies/derogs are recent   - RW: Too high proportion of recently opened accounts are revolving accounts   - RX: Too high of a proportion of your balances are from open revolving accounts   - RY: Too many of your revolving credit accounts have high utilization   - T0: Too high a proportion of your account delinquencies are recent   - T1: Too low proportion of accounts paid on time in recent months   - T2: Too low proportion of accounts with no recent severe delinquency   - T3: Too high proportion of accounts recently delinquency/derogatory   - TA: You have too many recently opened accounts   - TB: Too many of your recently reported accounts are currently delinquent   - TC: Too many recently reported accounts presently delinquent/derogatory   - TD: Not enough of your accounts have been paid on time in recent months   - TE: You have accounts that are currently delinquent or derogatory   - TF: You have too many open accounts that are currently delinquent   - TG: Too many recently opened accounts with delinquency/derogatory status   - TH: Too many of your accounts have been included in a bankruptcy   - TJ: Too many of your accounts have been delinquent or derogatory in recent months   - TK: A delinquent or derogatory item is the worst status on your reported accounts   - TL: Worst status on recently opened accounts is delinquent/derogatory   - TM: Worst present status on open accounts is delinquent   - TN: Worst present status on recently opened, open accounts is delinquent   - TP: Worst present performance on accounts is delinquent/derogatory   - TQ: Open account balance/credit amount ratio is too high   - TR: The sum of the balances on delinquent or derogatory accounts is too high   - TS: Time since oldest account opened is too recent   - TT: Your most recently opened account is too new   - TU: On average, your accounts are too new   - TV: Newest delinquency/derogatory status on accounts is too recent   - TW: Presence of delinquency/derogatory status since bankruptcy filing   - TX: Not enough of your accounts are consistently paid on time   - TY: Too high of a proportion of your accounts are delinquent or derogatory   - TZ: Too high a proportion of your accounts were opened recently   - --: No adverse action applied    Score Reason corresponding to Model Number 05028   - 00: No hay cuentas utilizables   - 01: Usted no tiene cuentas abiertas   - 02: Ninguna de sus cuentas muestra un monto de credito   - 03: Usted no tiene cuentas reportadas recientemente   - 04: Usted no tiene cuentas que muestren actualmente su estatus de pagos   - 05: Usted no tiene cuentas que muestren su estatus de pagos   - 06: Usted no tiene cuentas abiertas que muestren su estatus de pagos   - 07: No hay cuentas recientemente abiertas calificadas   - 08: Ninguna de sus cuentas muestran cuando fueron abiertas   - 09: Usted no tiene cuentas abiertas que muestren un saldo   - 10: No hay cuentas a plazo utilizables   - 11: Usted no tiene cuentas de pagos a plazo abiertas   - 12: Ninguna de sus cuentas de pagos a plazo muestran un monto de credito   - 16: No hay cuentas a plazo abiertas calificadas   - 17: No hay cuentas a plazo recientemente abiertas calificadas   - 20: No hay cuentas rotatoria utilizables   - 21: Usted no tiene cuentas de credito rotativo abiertas   - 22: Ninguna de sus cuentas rotativas muestran un monto de credito   - 28: Ninguna de sus cuentas rotativas muestran cuando fueron abiertas   - 30: No hay tarjetas bancarias utilizables   - 31: Usted no tiene cuentas de credito bancario abiertas   - 32: Ninguna de sus cuentas de credito bancario muestran un monto de credito   - 33: Usted no tiene cuentas de credito bancario reportadas recientemente   - 35: No hay tarjetas bancarias calificadas   - 36: No hay tarjetas bancarias abiertas calificadas   - 40: No hay cuentas de auto utilizables   - 45: No hay cuentas de auto calificadas   - 46: No hay cuentas de auto abiertas calificadas   - 50: No hay cuentas inmobiliarias utilizables   - 51: Usted no tiene cuentas inmobiliarias abiertas   - 52: Ninguna de sus cuentas inmobiliarias muestran un monto de credito   - 55: Usted no tiene cuentas inmobiliarias que muestren su estatus de pagos   - 60: No hay cuentas rotatorias de consumo utilizables   - 61: Usted no tiene cuentas comerciales rotativas abiertas   - 62: Ninguna de sus cuentas comerciales rotativas muestran un monto de credito   - 90: Usted tiene demasiadas pocas cuentas de credito   - 91: Su historial de credito muestra una bancarrota   - 1A: No hay cuentas a plazo recientemente calificadas   - 2A: No hay cuentas rotatorias recientemente calificadas   - 2B: Usted no tiene cuentas de credito rotativo abiertas recientemente   - 3A: No hay tarjetas bancarias recientemente calificadas   - 4A: No hay cuentas de auto recientemente calificadas   - 5A: No hay cuentas inmobiliarias recientemente calificadas   - AA: Muy pocas cuentas de auto consistentemente pagadas a tiempo   - AB: Muy pocas cuentas de auto sin mora severa   - AC: Numero excesivo de cuentas de auto en estado incobrable/mora severos   - AD: Peor estado en cuentas de auto es incobrable/mora   - AE: Peor estado reciente en en cuentas de auto es incobrable/mora   - AF: Peor estado actual en cuentas de auto abiertas es mora   - AG: Estado incobrable/mora mas reciente en cuentas de auto es muy reciente   - BA: Muchas tarjetas bancarias recientemente abiertas   - BB: Usted tiene demasiadas cuentas de tarjeta de credito bancarias abiertas   - BC: Muchas tarjetas bancarias abiertas por lo menos seis meses   - BD: Muchas tarjetas bancarias abiertas con un saldo   - BE: Muchas tarjetas bancarias abiertas con un saldo alto   - BF: Muchas tarjetas bancarias con alta utilizacion   - BG: Muy pocas tarjetas bancarias abiertas por lo menos seis meses   - BH: Muy pocas tarjetas bancarias consistentemente pagadas a tiempo   - BJ: Muchas tarjetas bancarias con estado incobrable/mora en meses recientes   - BK: Peor estado tarjetas bancarias incobrable/mora   - BL: Peor estado reciente en tarjetas bancarias abiertas incobrable/mora   - BM: Peor estado actual tarjetas bancarias abiertas es mora   - BN: Suma saldos tarjetas bancarias es muy alta   - BP: Credito disponible en tarjetas bancarias abiertas es muy bajo   - BQ: Monto de credito promedio en tarjetas bancarias abiertas muy bajo   - BR: Monto de credito maximo en tarjetas bancarias abiertas muy bajo   - BS: Relacion saldo y monto de credito de tarjetas bancarias abiertas muy alta   - BT: Proporcion muy alta tarjetas bancarias fueron abiertas recientemente   - BU: Proporcion muy alta tarjetas bancarias recientemente en incobrables/mora   - BV: Proporcion muy alta de saldos de tarjetas bancarias abiertas   - BW: Proporcion muy alta de tarjetas bancarias tienen alta utilizacion   - CA: Demasiadas cuentas en agencia de cobro con un monto superior a $250   - CB: Usted tiene demasiadas cuentas de agencias de cobros sin pagar   - CC: Usted tiene demasiadas cuentas de agencias de cobros   - CD: Usted tiene demasiadas cuentas recientes de agencias de cobros   - CE: Usted tiene una cuenta de agencia de cobros incluida en su reporte de credito   - CF: Usted tiene una alta suma de saldos en sus cuentas de agencias de cobros   - CG: Usted tiene una cuenta de agencia de cobros que ha sido abierta recientemente   - CH: Porcion muy alta de cuentas en agencias de cobro abiertas recientemente   - CJ: Muchas de sus cuentas de cobros estan sin pagar   - DA: Demasiadas cuentas rotatorias de consumo abiertas con un saldo   - DB: Demasiadas cuentas rotatorias de consumo con alta utilizacion   - DC: Demasiadas de sus cuentas de credito comerciales son severamente morosas   - DD: Suma de saldos en cuentas rotatorias de consumo abiertas es muy alta   - DE: Relacion saldo y monto credito ctas rotatorias consumo abiertas muy alta   - FA: Usted tiene demasiadas cuentas de compañias de financiamiento   - FB: Usted tiene demasiadas cuentas de compañias de financiamiento abiertas   - IA: Usted tiene demasiadas cuentas de pagos a plazo abiertas recientemente   - IB: Presencia de cuentas a plazo actualmente en incobrable/mora   - IC: Presencia de estado incobrable/ mora severo en una cuenta a plazo   - ID: Peor estado en cuentas a plazo es incobrable/mora   - IE: Peor estado reciente en en cuentas a plazo es incobrable/mora   - IF: Peor estado en cuentas a plazo recientemente abiertas es incobrable/mora   - IG: Peor estado actual en cuentas a plazo abiertas es de mora   - IH: Suma de saldos en cuentas a plazo en incobrables/mora es muy alta   - IJ: Suma de montos de credito en cuentas a plazo abiertas es muy baja   - IK: Monto de credito promedio en cuentas a plazo abiertas es muy bajo   - IL: Monto pagado en cuentas a plazos abiertas es muy abajo   - IM: Estado incobrable/mora mas reciente en cuentas a plazo es muy reciente   - IN: Relacion entre saldo y monto de credito de cuentas a plazo es muy alta   - IP: Proporcion excesivamente alta saldos cuentas abiertas que no son a plazo   - MA: Usted no tiene suficientes cuentas inmobiliarias abiertas   - MB: Demasiadas de sus cuentas inmobiliarias han sido severamente morosas   - MC: Peor estado reciente en en cuentas inmobiliarias es incobrable/mora   - MD: Peor estado actual en cuentas inmobiliarias abiertas es mora   - ME: Monto de credito promedio en cuentas inmobiliarias abiertas es muy bajo   - MF: La cantidad pagada en sus cuentas inmobiliarias abiertas es demasiado baja   - MG: Una proporcion demasiado baja de sus cuentas son cuentas inmobiliarias   - PA: Demasiados gravamenes tributarios/sentencias anotados   - PB: Demasiados gravamenes tributarios/sentencias anotados recientes   - PC: Muchos gravamenes tributarios/sentencias anotados no pagados o ejecutadas   - PD: Demasiadas declaraciones de quiebra anotadas   - PE: Gravamen tributario o sentencia inscrito mas reciente es muy reciente   - PF: Hay gravamen tributario/sentencia anotados desde declaracion de quiebra   - PG: Muchos gravamenes tributarios/sentencias anotados no pagados o ejecutadas   - Q0: Numero de consultas fue un factor, pero el efecto no fue significativo   - QA: Numero excesivo de consultas recientes   - QB: Usted tiene demasiadas solicitudes de informacion en su reporte de credito   - RA: Usted tiene demasiadas cuentas de credito rotativo abiertas   - RB: Usted tiene demasiadas pocas cuentas rotativas con limites de credito altos   - RC: Numero excesivo de cuentas rotatorias con alta utilizacion   - RD: Presencia de cuentas rotatorias actualmente en incobrable/mora   - RE: Demasiadas de sus cuentas de credito rotativo son morosas o incobrables   - RF: Peor estado de cualquier cuenta rotatoria es incobrable/mora   - RG: Peor estado reciente en en cuentas rotatorias es incobrable/mora   - RH: Peor estado cuentas rotatorias abiertas recientemente es incobrable/mora   - RJ: La suma de los saldos de su cuenta de credito rotativo es demasiado alta   - RK: Saldo promedio en cuentas rotatorias abiertas es muy alto   - RL: Credito disponible en cuentas rotatorias abiertas es muy bajo   - RM: Suma de saldos de cuentas rotatorias en incobrable/mora es muy alta   - RN: Monto de credito promedio en cuentas rotatorias abiertas es muy bajo   - RP: Tiempo desde que se abrio cuenta rotatoria mas vieja es muy reciente   - RQ: Su mas nueva cuenta de credito rotativa fue abierta demasiado reciente   - RR: Tiempo promedio desde que se abrieron cuentas rotatorias es muy reciente   - RS: Estado incobrable/mora mas reciente en cuentas rotatorias es muy reciente   - RT: Relacion saldo y monto de credito cuentas rotatorias abiertas es muy alta   - RU: Ratio saldo y monto credito cuentas rotatorias recien abiertas muy alta   - RV: Proporcion estado incobrable/mora reciente en cuentas rotatorias muy alta   - RW: Proporcion muy alta de cuentas recien abiertas son cuentas rotatorias   - RX: Proporcion muy alta de saldos de cuentas rotatorias abiertas   - RY: Proporcion muy alta de cuentas rotatorias tienen alta utilizacion   - T0: Una proporcion demasiado alta de sus cuentas moratorias es muy reciente   - T1: Proporcion muy baja de cuentas pagadas a tiempo en meses recientes   - T2: Proporcion muy baja de cuentas sin morosidad severa reciente   - T3: Proporcion excesiva cuentas recientemente en incobrable/mora   - TA: Usted tiene demasiadas cuentas abiertas recientemente   - TB: Muchas de sus cuentas reportadas recientemente son actualmente morosas   - TC: Demasiadas cuentas recientemente reportadas actualmente incobrable/mora   - TD: Muy pocas cuentas pagadas a tiempo en meses recientes   - TE: Usted tiene actualmente cuentas que son morosas o incobrables   - TF: Usted tiene actualmente demasiadas cuentas abiertas que son morosas   - TG: Numero excesivo cuentas recientemente abiertas con estado incobrable/mora   - TH: Demasiadas de sus cuentas han sido incluidas en una bancarrota   - TJ: Muchas de sus cuentas han sido morosas o incobrables en meses recientes   - TK: Un elemento moroso o incobrable es el peor estatus en sus cuentas reportadas   - TL: Peor estado en cuentas recientemente abiertas es incobrable/mora   - TM: Peor estado actual en cuentas abiertas es de mora   - TN: Peor estado actual en cuentas abiertas, recientemente abiertas es de mora   - TP: Peor rendimiento actual de cuentas es mora o incobrable   - TQ: Relacion entre saldo cuentas y monto del credito es muy alta   - TR: Suma de los saldos de cuentas en incobrable/mora es muy alta   - TS: El tiempo desde que abrio su cuenta de mas antiguedad es demasiado reciente   - TT: Su cuenta abierta mas recientemente es demasiado nueva   - TU: En promedio, sus cuentas son demasiado nuevas   - TV: Estado mas reciente incobrable/mora en cuentas es muy reciente   - TW: Presencia estado incobrable/ mora desde la declaracion de quiebra   - TX: Proporcion de cuentas consistentemente pagadas a tiempo es muy baja   - TY: Una proporcion demasiado alta de sus cuentas es morosa o incobrable   - TZ: Una proporcion demasiado alta de sus cuentas fue abierta recientemente   - --: No se aplico una medida negativa    Score Reason corresponding to Model Number 05143   - 00004: The balances on your accounts are too high compared to loan amounts   - 00005: Too many of the delinquencies on your accounts are recent   - 00006: You have too many accounts that were opened recently   - 00007: You have too many delinquent or derogatory accounts   - 00008: You have either very few loans or too many loans with recent delinquencies   - 00009: The worst payment status on your accounts is delinquent or derogatory   - 00010: You have either very few loans or too many loans with delinquencies   - 00011: The total of your delinquent or derogatory account balances is too high   - 00012: The date that you opened your oldest account is too recent   - 00013: Your most recently opened account is too new   - 00014: Lack of sufficient credit history   - 00015: Newest delinquent or derogatory payment status on your accounts is too recent   - 00016: The total of all balances on your open accounts is too high   - 00017: Balances on previously delinquent accounts are too high compared to loan amts   - 00018: Total of balances on accounts never late is too high compared to loan amounts   - 00021: No open accounts in your credit file   - 00022: No recently reported account information   - 00023: Lack of sufficient relevant account information   - 00029: Too many of your open bankcard or revolving accounts have a balance   - 00030: Too few of your bankcard or other revolving accounts have high limits   - 00031: Too many bankcard or other revolving accounts were opened recently   - 00032: Balances on bankcard or revolving accounts too high compared to credit limits   - 00033: Your worst bankcard or revolving account status is delinquent or derogatory   - 00034: Total of all balances on bankcard or revolving accounts is too high   - 00035: Your highest bankcard or revolving account balance is too high   - 00036: Your largest credit limit on open bankcard or revolving accounts is too low   - 00039: Available credit on your open bankcard or revolving accounts is too low   - 00040: The date you opened your oldest bankcard or revolving account is too recent   - 00042: The date you opened your newest bankcard or revolving account is too recent   - 00043: Lack of sufficient credit history on bankcard or revolving accounts   - 00044: Too many bankcard or revolving accounts with delinquent or derogatory status   - 00045: Total balances too high on delinquent/derogatory bankcard or revolving accts   - 00047: No open bankcard or revolving accounts in your credit file   - 00048: No bankcard or revolving recently reported account information   - 00049: Lack of sufficient relevant bankcard or revolving account information   - 00053: The worst status on your real estate accounts is delinquent or derogatory   - 00054: The amount of balance paid down on your open real estate accounts is too low   - 00055: Open real estate account balances are too high compared to their loan amounts   - 00057: Too many real estate accounts with delinquent or derogatory payment status   - 00058: The total of all balances on your open real estate accounts is too high   - 00061: No open real estate accounts in your credit file   - 00062: No recently reported real estate account information   - 00063: Lack of sufficient relevant real estate account information   - 00064: No open first mortgage accounts in your credit file   - 00065: Lack of sufficient relevant first mortgage account information   - 00066: Your open auto account balances are too high compared to their loan amounts   - 00068: No open auto accounts in your credit file   - 00069: Lack of sufficient relevant auto account information   - 00071: You have either very few installment loans or too many with delinquencies   - 00072: Too many installment accounts with a delinquent or derogatory payment status   - 00073: The worst status on your installment accounts is delinquent or derogatory   - 00074: The balance amount paid down on your open installment accounts is too low   - 00075: The installment account that you opened most recently is too new   - 00076: You have insufficient credit history on installment loans   - 00077: Newest delinquent or derogatory status on installment accounts is too recent   - 00078: Balances on installment accounts are too high compared to their loan amounts   - 00079: Too many of the delinquencies on your installment accounts are recent   - 00081: No open installment accounts in your credit file   - 00083: Lack of sufficient relevant installment account information   - 00084: The number of inquiries was also a factor, but effect was not significant   - 00085: You have too many inquiries on your credit report.   - 00086: Your credit report contains too many derogatory public records   - 00087: Your credit report contains too many unsatisfied public records   - 00088: One or more derogatory public records in your credit file is too recent   - 00090: Too few discharged bankruptcies   - 00093: The worst status on your student loan accounts is delinquent or derogatory   - 00094: The balance amount paid down on your open student loan accounts is too low   - 00095: You have too many collection agency accounts that are unpaid   - 00096: The total you owe on collection agency accounts is high   - 00097: You have too few credit accounts   - 00098: There is a bankruptcy on your credit report    Score Reason corresponding to Model Number 05151   - 00004: Los saldos de cuentas son altos comparados con limites de prestamos   - 00005: Hay demasiadas cuentas atrasadas recientes   - 00006: Ha abierto demasiadas cuentas recientemente   - 00007: Tiene demasiadas cuentas atrasadas o con credito negativo   - 00008: Tiene muy pocos o demasiados prestamos con pagos atrasados recientes   - 00009: El peor estado de pago de cuentas esta atrasado o es negativo   - 00010: Tiene muy pocos o demasiados prestamos con pagos atrasados   - 00011: Total alto de saldos de cuentas atrasadas o con credito negativo   - 00012: La fecha en que abrio la cuenta con mayor tiempo es muy reciente   - 00013: La ultima cuenta que abrio es demasiado reciente   - 00014: No hay suficiente historial de credito   - 00015: El ultimo estado de pago de cuentas atrasado o negativo es muy reciente   - 00016: El total de todos los saldos de las cuentas abiertas es muy alto   - 00017: Saldos altos de cuentas anteriormente atrasadas comparados con prestamos   - 00018: Total alto de saldos de cuentas nunca atrasadas comparado con prestamos   - 00021: No hay cuentas abiertas en su historial de credito   - 00022: No se ha reportado ninguna informacion de cuentas recientemente   - 00023: No hay suficiente informacion relevante de cuentas   - 00029: Demasiadas tarjetas bancarias o cuentas renovables abiertas con saldo   - 00030: Pocas tarjetas bancarias u otras cuentas renovables con limites altos   - 00031: Abrio demasiadas tarjetas bancarias o cuentas renovables recientemente   - 00032: Saldos altos de tarjetas o cuentas comparados con limites de credito   - 00033: El peor estado de tarjeta o cuenta renovable esta atrasado o es negativo   - 00034: Total alto de saldos de tarjetas bancarias o cuentas renovables   - 00035: Saldo mas alto de tarjetas bancarias o cuentas renovables es muy alto   - 00036: Limite de credito mas alto de tarjetas o cuentas abiertas es bajo   - 00039: Credito disponible de tarjetas o cuentas renovables abiertas es muy bajo   - 00040: Fecha en que abrio la tarjeta o cuenta con mayor tiempo es muy reciente   - 00042: Fecha en que abrio la ultima tarjeta o cuenta renovable no es reciente   - 00043: No hay suficiente historial de credito de tarjetas o cuentas renovables   - 00044: Demasiadas tarjetas o cuentas renovables con estado atrasado o negativo   - 00045: Total alto de saldos en tarjetas o cuentas atrasadas o negativas   - 00047: No hay tarjetas o cuentas renovables abiertas en historial de credito   - 00048: No se han reportado datos de tarjetas o cuentas renovables recientemente   - 00049: No hay informacion relevante de tarjetas bancarias o cuentas renovables   - 00053: El peor estado de cuentas de bienes raices esta atrasado o es negativo   - 00054: El saldo pagado en cuentas abiertas de bienes raices es muy bajo   - 00055: Saldos altos de cuentas de bienes raices comparados con prestamos   - 00057: Demasiadas cuentas de bienes raices con estado de pago atrasado o negativo   - 00058: El total de saldos de cuentas abiertas de bienes raices es muy alto   - 00061: No hay cuentas abiertas de bienes raices en su historial de credito   - 00062: No se han reportado datos de cuentas de bienes raices recientemente   - 00063: No hay informacion relevante de cuentas de bienes raices   - 00064: No hay cuentas abiertas de primera hipoteca en su historial de credito   - 00065: No hay informacion relevante de cuentas de primera hipoteca   - 00066: Saldos altos de cuentas abiertas de auto comparados con prestamos   - 00068: No hay cuentas abiertas de automovil en su historial de credito   - 00069: No hay informacion relevante de cuentas de automovil   - 00071: Tiene muy pocos o demasiados prestamos a plazos con pagos atrasados   - 00072: Demasiadas cuentas a plazos con estado de pago atrasado o negativo   - 00073: El peor estado de cuentas a plazos esta atrasado o es negativo   - 00074: El saldo pagado en cuentas a plazos abiertas es demasiado bajo   - 00075: La ultima cuenta a plazos que abrio es demasiado reciente   - 00076: No tiene suficiente historial de credito en prestamos a plazos   - 00077: El ultimo estado de cuentas a plazos atrasado o negativo es muy reciente   - 00078: Saldos altos de cuentas a plazos comparados con prestamos   - 00079: Hay demasiadas cuentas a plazos atrasadas recientes   - 00081: No hay cuentas a plazos abiertas en su historial de credito   - 00083: No hay suficiente informacion relevante de cuentas a plazos   - 00084: La cantidad de consultas fue un factor, pero no considerable   - 00085: Ha hecho demasiadas consultas en su reporte de credito.   - 00086: Reporte de credito con muchos registros publicos con credito negativo   - 00087: Reporte de credito con muchos registros publicos no pagados   - 00088: Por lo menos un registro publico con credito negativo es muy reciente   - 00090: Muy pocas bancarrotas saldadas   - 00093: El peor estado de prestamos de estudiante esta atrasado o es negativo   - 00094: El saldo pagado en cuentas de estudiante abiertas es muy bajo   - 00095: Demasiadas cuentas de agencias de cobro que no se han pagado   - 00096: El total que debe en cuentas de agencias de cobro es demasiado alto   - 00097: Tiene muy pocas cuentas de credito   - 00098: Hay una bancarrota en su reporte de credito    Score Reason corresponding to Model Number 05151   - xxxxx: Income Predictor 2.0 doesn&amp;apos;t return any reason code    Score Reason corresponding to Model Number 02778   - 00030: Excessive amount owed on accounts   - 00031: Lack of recent account information   - 00032: Proportion of revolving balances to revolving credit limits is too high   - 00033: Lack of recent revolving account information   - 00034: Unfavorable amount owed on revolving accounts   - 00035: Delinquency date too recent   - 00036: Unfavorable percentage of recently opened revolving accounts to all rev accts   - 00037: Proportion of bank/natl rev balances to bank/natl rev credit limits too high   - 00038: Lack of recent bank or national revolving account information   - 00039: Insufficient length of time bank or national revolving accounts established   - 00040: Excessive amount owed on auto finance accounts   - 00051: Excessive or unknown amount owed on accounts   - 00055: Too many consumer finance company accounts   - 00056: Too many recent credit checks   - 00057: Too many new accounts   - 00058: Proportion of revolving balances to revolving credit limits is too high or there are no revolving credit accounts   - 00059: Unfavorable or unknown amount owed on revolving credit accounts   - 00061: Delinquency date too recent or date unknown   - 00062: Insufficient length of time of credit history   - 00063: Accounts currently or in the past delinquent   - 00067: Presence of collection account   - 00070: Insufficient length of time since most recent account established   - 00071: Unfavorable number of installments loan accounts   - 00083: Unfavorable number of accounts   - 00084: Unfavorable length of time since most recent retail account opened   - 00088: Presence of adverse public records   - 00089: Unfavorable number of accounts currently paid as agreed   - 00092: Unfavorable percentage of retail accounts with balances to all retail accounts   - 00093: Unfavorable percentage of recently opened revolving accounts to all revolving accounts or there are no revolving accounts   - 00094: Proportion of bank or national revolving balances to bank or national revolving credit limits is too high or there are no bank or national revolving accounts   - 00095: Insufficient length of time bank or national revolving accounts established or none present   - 00096: Unfavorable percentage of recently opened revolving accounts with balances to all revolving accounts with balances   - 00097: Excessive or unknown amount owed on auto finance accounts   - 00098: Relationship of installment loan balances to amounts    Score Reason corresponding to Model Number 02779   - 00030: Excessive amount owed on accounts   - 00031: Lack of recent account information   - 00032: Proportion of revolving balances to revolving credit limits is too high   - 00033: Lack of recent revolving account information   - 00034: Unfavorable amount owed on revolving accounts   - 00035: Delinquency date too recent   - 00036: Unfavorable percentage of recently opened revolving accounts to all rev accts   - 00037: Proportion of bank/natl rev balances to bank/natl rev credit limits too high   - 00038: Lack of recent bank or national revolving account information   - 00039: Insufficient length of time bank or national revolving accounts established   - 00040: Excessive amount owed on auto finance accounts   - 00051: Excessive or unknown amount owed on accounts   - 00055: Too many consumer finance company accounts   - 00056: Too many recent credit checks   - 00057: Too many new accounts   - 00058: Proportion of revolving balances to revolving credit limits is too high or there are no revolving credit accounts   - 00059: Unfavorable or unknown amount owed on revolving credit accounts   - 00061: Delinquency date too recent or date unknown   - 00062: Insufficient length of time of credit history   - 00063: Accounts currently or in the past delinquent   - 00067: Presence of collection account   - 00070: Insufficient length of time since most recent account established   - 00071: Unfavorable number of installments loan accounts   - 00083: Unfavorable number of accounts   - 00084: Unfavorable length of time since most recent retail account opened   - 00088: Presence of adverse public records   - 00089: Unfavorable number of accounts currently paid as agreed   - 00092: Unfavorable percentage of retail accounts with balances to all retail accounts   - 00093: Unfavorable percentage of recently opened revolving accounts to all revolving accounts or there are no revolving accounts   - 00094: Proportion of bank or national revolving balances to bank or national revolving credit limits is too high or there are no bank or national revolving accounts   - 00095: Insufficient length of time bank or national revolving accounts established or none present   - 00096: Unfavorable percentage of recently opened revolving accounts with balances to all revolving accounts with balances   - 00097: Excessive or unknown amount owed on auto finance accounts   - 00098: Relationship of installment loan balances to amounts    Score Reason corresponding to Model Number 05236   - 27: Percent of Revolving Accounts Satisfactory   - 28: Percent of Revolving Accounts With Major Derogatory Event   - 30: Percent of Accounts 120+ Days Delinquent   - 31: Percent of Accounts 60+ Days Delinquent   - 33: Percent of Accounts Bankcard   - 36: Percent of Accounts Installment   - 37: Percent of Accounts Opened Recently   - 39: Percent of Accounts Revolving   - 40: Percent of Accounts Satisfactory   - 49: 30 Days Delinquency Occurrences On Bankcard Accounts   - 68: Age of Bankcard Accounts   - 71: Age of Installment Accounts   - 75: Age of Revolving Account Activity   - 78: Age of Tax Lien   - 79: Age of Account Activity   - 80: Age of Accounts   - 83: Bankcard High Credit   - 95: Number of Auto Accounts With Major Derogatory Event   - 96: Number of Bankcard Accounts   - 104: Number of Bankcard Accounts Less Than 60 Days Delinquent   - 107: Number of Bankcard Accounts With High Utilization   - 109: Number of Collections    - 123: Number Of Inquiries   - 124: Number Of Installment Accounts   - 125: Number Of Installment Accounts 120+ Days Delinquent   - 126: Number Of Installment Accounts 120-180 Or More Days Delinquent   - 133: Number of Installment Accounts Opened Recently   - 135: Number of Installment Accounts With High Balance Outstanding   - 136: Number of Installment Accounts With Major Derogatory Event   - 144: Number of Open Mortgage Accounts   - 149: Number of Open Accounts   - 154: Number of Recent Inquiries   - 164: Number of Retail Accounts With High Utilization    - 166: Number of Revolving Accounts   - 174: Number of Revolving Accounts Less Than 60 Days Delinquent   - 190: Number of Satisfactory Accounts   - 191: Number of Accounts   - 198: Number of Accounts Less Than 60 Days Delinquent   - 199: Number of Accounts Opened Recently   - 200: Number of Accounts Past Due   - 203: Occurrence of Severe Derogatory Event   - 208: Total Amount Past Due For Bankcard Accounts   - 219: Total Balance On Personal Finance or Student Loan Accounts   - 224: Total Collection Amount   - 287: Insufficient Information On Credit History   - 290: Insufficient Information On or Lack of Bankcard Accounts   - 292: Insufficient Information On or Lack of Department Store Accounts   - 293: Insufficient Information On or Lack of Installment Accounts   - 296: Insufficient Information On or Lack of Retail Accounts   - 297: Insufficient Information On or Lack of Revolving Accounts   - 299: Insufficient Information On or Lack of Accounts   - 301: Number of Recent Utility Inquiries   - 302: Number of Utility Inquiries   - 303: Number of Recent Non-Utility Inquiries   - 305: Number of Auto Accounts   - 315: 60+ Days Delinquency Occurrences On Bankcard Accounts   - 317: 60+ Days Delinquency Occurrences On Installment Accounts   - 322: Number Of Retail Accounts Past Due   - 327: Length Of Credit History   - 330: Percent Of Utility Inquiries Posted Recently   - 331: Percent of Non-Utility Inquiries Posted Recently   - A05: Average of open balances on NCTUE non-derogatory accounts in last 12 months   - A14: Number of Months since the latest NCTUE involuntary disconnection   - A16: Number of NCTUE satisfactory occurrences reported in the last 12 months   - A26: # of NCTUE 60+ days past due or derogatory accounts reported in last 12 months   - A31: % of NCTUE accounts in last 6 month reported 30 days past due   - A34: Number of Months since latest NCTUE 90+ days past due reported in last 24 months   - C18: Insufficient information on recently reported NCTUE account balances   - G93: Not enough information on NCTUE paid-closed accounts    - Y15: Number of NCTUE accounts connected in the last 24 months   - Y24: Number of NCTUE accounts connected in the last 3 months   - Y29: Months since latest 30+ days past due reported within 24 months on NCTUE   - Y33: Total of latest balances for NCTUE accounts reported in the last 2 months   - Y41: Number of times 60 days past due was reported in the last 6 months on NCTUE   - Y44: Months since the latest NCTUE charge-off reported in the last 24 months   - Y46: Average number of months since NCTUE connections   - Y47: Not enough information on latest balances reported on NCTUE   - Y49: Not enough information on connections of NCTUE accounts   - Y56: Not enough information on paid-as-agreed NCTUE accounts   - Y58: Worst NCTUE delinquency or derogatory reported in the last 6 months   - Y72: Months since latest NCTUE 60+ days past due reported in last 24 months   - Y74: Months since connection of oldest paid-as-agreed NCTUE account   - Y91: Not enough information on NCTUE accounts reported in the last 6 months    - Y92: Not enough information on NCTUE accounts reported in the last 12 months    - 802: The input SSN is reported as deceased   - 803: The input SSN was issued prior to the input date-of-birth   - 804: The input last name and SSN are verified, but not with the input address and phone   - 806: The input SSN is invalid   - 807: The input phone number may be disconnected   - 808: The input phone number is potentially invalid   - 809: The input phone number is a pager number   - 810: The input phone number is a mobile number   - 811: The input address may be invalid according to postal specifications   - 812: The input zip code belongs to a post office box   - 813: The input address has an invalid apartment designation   - 814: The input address is a transient commercial or institutional address   - 815: The input phone number matches a transient commercial or institutional address   - 816: The input phone number and input zip code combination is invalid   - 819: Unable to verify name, address, SSN/TIN and phone   - 820: Unable to verify applicant name, address and phone number   - 822: Unable to verify applicant name and address   - 823: Unable to verify applicant name and SSN   - 824: Unable to verify applicant address and SSN   - 825: Unable to verify address   - 826: Unable to verify SSN/TIN   - 827: Unable to verify phone number   - 828: Unable to verify date-of-birth   - 829: The input SSN/TIN may have been miskeyed   - 830: The input address may have been miskeyed   - 831: The input phone number may have been miskeyed   - 835: Insufficient verification to return a score under CA law   - 836: Identity elements not fully verified on all available sources   - 837: Unable to verify name   - 841: The input driver&amp;apos;s license number is invalid for the input DL state   - 845: The input SSN and address are not associated with the input last name and phone   - 848: Unable to verify first name   - 849: The input phone and address are geographically distant (&gt; 10 miles)   - 850: The input address matches a prison address   - 851: The input last name is not associated with the input SSN   - 852: The input first name is not associated with input SSN   - 871: The input SSN is not found in the public record   - 872: The input SSN is associated with a different name and address   - 873: The input phone number is not found in the public record   - 874: The input phone number is associated with a different name and address   - 877: The input name was missing   - 878: The input address was missing   - 879: The input SSN/TIN was missing or incomplete   - 880: The input phone was missing or incomplete   - 881: The input date-of-birth was missing or incomplete   - 882: The input name and address return a different phone number   - 883: The input date-of-birth may have been miskeyed   - 891: Security Freeze (CRA corrections database)   - 892: Security Alert (CRA corrections database)   - 893: Identity Theft Alert (CRA corrections database)   - 894: Dispute On File (CRA corrections database)   - 895: Subject has opted out of prescreen offers   - 897: Criminal record found   - 898: Lien/Judgment record found   - 899: The input address is verified but may not be primary residence   - 89A: No evidence of property ownership   - 89B: Evidence of historical property ownership but no current record   - 89C: Length of residence   - 89D: Change of address frequency   - 89E: Number of sources confirming identity and current address   - 89F: Date of confirming source update   - 89G: Insufficient Age   - 89H: Evidence of sub-prime credit services solicited   - 89I: No evidence of post-secondary education   - 89J: Age of Oldest Public Record on file   - 89K: Address dwelling type   - 89L: Distance between the current and previous address   - 89M: Insufficient evidence of wealth   - 89N: Correctional institution in address history   - 89O: No evidence of phone service at address   - 89P: Number of consumer finance inquiries   - 89Q: Number of inquiries in the last 12 months   - 89R: Length of time on sources confirming identity   - 89S: Type of mortgage   - 89T: Input phone is invalid, non-residential, or disconnected   - 89U: Input address is invalid, non-residential, or undeliverable   - 89V: Input SSN is invalid, recently issued, or inconsistent with date of birth   - 89W: Bankruptcy record on file   - 89X: Insufficient information on file   - 89Y: Insufficient purchase activity reported   - 8EV: Eviction record found   - 8MI: Multiple identities associated with the input SSN   - 8MN: The input SSN was issued within the last seventeen years   - 8MS: Multiple SSNs reported with applicant   - 8PV: Insufficient property value   - P01: No usable Public Record data   - P02: No usable Credit data   - 991: Number of open accounts and total collection amount   - 992: Insufficient information or number of open accounts   - 993: Insufficient information or number of open accounts or total collection amount    Score Reason corresponding to Model Number 05168   - 00801: Important Application Data Missing   - 00802: The input SSN is reported as deceased   - 00803: The input SSN was issued prior to the input Date of Birth   - 00804: The input Last Name and SSN are verified&#x3D; but not with the input Address and Phone   - 00806: The input SSN is invalid   - 00807: The input phone number may be disconnected   - 00808: The input phone number is potentially invalid   - 00809: The input phone number is a pager number   - 00810: The input phone number is a mobile number   - 00811: The input address may be invalid according to postal specifications   - 00812: The input zip code belongs to a post office box   - 00813: The input address has an invalid apartment designation   - 00814: The input address is a transient commercial or institutional address   - 00815: The input phone number matches a transient commercial or institutional address   - 00816: The input phone number and input zip code combination is invalid   - 00819: Unable to verify name, address, SSN/TIN and phone   - 00820: Unable to verify applicant name, address and phone number   - 00821: Unable to verify applicant name and phone number   - 00822: Unable to verify applicant name and address   - 00823: Unable to verify applicant name and SSN   - 00824: Unable to verify applicant address and SSN   - 00825: Unable to verify applicant address   - 00826: Unable to verify SSN / TIN   - 00827: Unable to verify applicant phone number   - 00828: Unable to verify applicant date-of-birth   - 00829: The input SSN/TIN may have been miskeyed   - 00830: The input address may have been miskeyed   - 00831: The input phone number may have been miskeyed   - 00832: The input name matches the OFAC file   - 00835: Insufficient verification to return a score under CA law   - 00836: Identity elements not fully verified on all available sources   - 00837: Unable to verify applicant name   - 00838: The input SSN is associated with multiple last names   - 00839: The input SSN is recently issued   - 00842: The input SSN matches the bankruptcy file   - 00843: The input name and address match the bankruptcy file   - 00845: The input SSN and address are not associated with the input last name and phone   - 00848: Unable to verify first name   - 00849: The input phone and address are geographically distant (&gt; 10 miles)   - 00850: The input address matches a prison address   - 00851: The input last name is not associated with the input SSN   - 00852: The input first name is not associated with input SSN   - 00871: The input SSN is not found in the public record   - 00872: The input SSN is associated with a different name and address   - 00873: The input phone number is not found in the public record   - 00874: The input phone number is associated with a different name and address   - 00877: The input name was missing   - 00878: The input address was missing   - 00879: The input SSN/TIN was missing or incomplete   - 00880: The input phone was missing or incomplete   - 00881: The input date-of-birth was missing or incomplete   - 00882: The input name and address return a different phone number   - 00883: The input date-of-birth may have been miskeyed   - 00889: The input SSN was issued within the last three years   - 00890: The input SSN was issued after age five (post-1990)   - 00891: Security Freeze (CRA corrections database)   - 00892: Security Alert (CRA corrections database)   - 00893: Identity Theft Alert (CRA corrections database)   - 00894: Dispute On File (CRA corrections database)   - 00895: Unused - For Future Use   - 00896: Corrections Database Information Utilized (CRA corrections database)   - 00897: Criminal record found   - 00898: Lien / Judgment record found   - 00899: The input address is verified but may not be primary residence   - 0089A: No evidence of property ownership   - 0089B: Evidence of historical property ownership but no current record   - 0089C: Length of residence   - 0089D: Change of address frequency   - 0089E: Number of sources confirming identity and current address   - 0089F: Date of confirming source update   - 0089G: Insufficient Age   - 008IA: The input IP address is unknown   - 0089H: Evidence of sub-price credit services solicited   - 0089I: No evidence of post-secondary education   - 0089J: Age of oldest public record on file   - 008EV: Eviction record found   - 008MI: Multiple identities associated with the input SSN   - 008MN: The input SSN was issued within the last seventeen years   - 008MS: Multiple SSNs reported with applicant   - 008PV: Insufficient property value   - 0089K: Address dwelling type   - 0089L: Distance between the current and previous address   - 0089M: Insufficient evidence of wealth   - 0089N: Correctional institution in address history   - 0089O: No evidence of phone service at address   - 0089P: Number of consumer finance inquiries   - 0089Q: Number of inquiries in the last 12 months   - 0089R: Length of time on sources confirming identity   - 0089S: Type of mortgage   - 0089T: Input phone is invalid, non-residential, or disconnected   - 0089U: Input address is invalid, non-residential, or undeliverable   - 0089V: Input SSN is invalid, recently issued, or inconsistent with date of birth   - 0089W: Bankruptcy record on file   - 0089X: Insufficient information on file   - 0089Y: Insufficient purchase activity reported    Score Reason corresponding to Model Number 05271   - 00016: Percent of Open Bankcard Accounts   - 00035: Percent of Accounts Department Store   - 00037: Percent of Accounts Opened Recently   - 00038: Percent of Accounts Retail   - 00040: Percent of Accounts Satisfactory   - 00068: Age of Bankcard Accounts   - 00070: Age of Installment Account Activity   - 00071: Age of Installment Accounts   - 00075: Age of Revolving Account Activity   - 00076: Age of Revolving Accounts   - 00079: Age of Account Activity   - 00083: Bankcard High Credit   - 00087: Installment High Credit   - 00095: Number of Auto Accounts With Major Derogatory Event   - 00096: Number of Bankcard Accounts   - 00106: Number of Bankcard Accounts With Balance   - 00107: Number of Bankcard Accounts With High Utilization   - 00123: Number of Inquiries   - 00133: Number of Installment Accounts Opened Recently   - 00144: Number of Open Mortgage Accounts   - 00147: Number of Open Revolving Accounts   - 00154: Number of Recent Inquiries   - 00174: Number of Revolving Accounts Less Than 60 Days Delinquent   - 00175: Number of Revolving Accounts Opened Recently   - 00187: Number of Satisfactory Installment Accounts   - 00199: Number of Accounts Opened Recently   - 00200: Number of Accounts Past Due   - 00203: Occurrence of Severe Derogatory Event   - 00205: Revolving High Credit   - 00206: Revolving Utilization   - 00207: Total Amount Past Due For Accounts    - 00213: Total Balance On Auto Accounts   - 00217: Total Balance On Installment Accounts   - 00223: Total Balance On Accounts   - 00287: Insufficient Information On Credit History   - 00289: Insufficient Information On or Lack of Auto Accounts   - 00290: Insufficient Information On or Lack of Bankcard Accounts   - 00292: Insufficient Information On or Lack of Department Store Accounts   - 00293: Insufficient Information On or Lack of Installment Accounts   - 00297: Insufficient Information On or Lack of Revolving Accounts   - 00299: Insufficient Information On or Lack of Accounts   - 00303: Number of Recent Non-Utility Inquiries   - 00308: Number of Mortgage Accounts   - 00314: 60+ Days Delinquency Occurrences   - 00327: Length of Credit History   - 00351: Number of Unpaid Collections   - 00352: Total Unpaid Collection Amount   - 00672: 30+ Days Delinquency Occurrences   - 00690: Number of Accounts 30+ Days Delinquent    Score Reason corresponding to Model Number 05274   - 16: Percent of Open Bankcard Accounts   - 35: Percent of Accounts Department Store      - 37: Percent of Accounts Opened Recently   - 38: Percent of Accounts Retail   - 40: Percent of Accounts Satisfactory   - 68: Age of Bankcard Accounts   - 70: Age of Installment Account Activity   - 71: Age of Installment Accounts   - 75: Age of Revolving Account Activity   - 76: Age of Revolving Accounts   - 79: Age of Account Activity   - 83: Bankcard High Credit   - 87: Installment High Credit   - 95: Number of Auto Accounts With Major Derogatory Event   - 96: Number of Bankcard Accounts   - 106: Number of Bankcard Accounts With Balance   - 107: Number of Bankcard Accounts With High Utilization   - 123: Number of Inquiries   - 133: Number of Installment Accounts Opened Recently   - 144: Number of Open Mortgage Accounts   - 147: Number of Open Revolving Accounts   - 154: Number of Recent Inquiries   - 174: Number of Revolving Accounts Less Than 60 Days Delinquent   - 175: Number of Revolving Accounts Opened Recently   - 187: Number of Satisfactory Installment Accounts   - 199: Number of Accounts Opened Recently   - 200: Number of Accounts Past Due   - 203: Occurrence of Severe Derogatory Event   - 205: Revolving High Credit   - 206: Revolving Utilization   - 207: Total Amount Past Due For Accounts    - 213: Total Balance On Auto Accounts   - 217: Total Balance On Installment Accounts   - 223: Total Balance On Accounts   - 287: Insufficient Information On Credit History   - 289: Insufficient Information On or Lack of Auto Accounts   - 290: Insufficient Information On or Lack of Bankcard Accounts   - 292: Insufficient Information On or Lack of Department Store Accounts   - 293: Insufficient Information On or Lack of Installment Accounts   - 297: Insufficient Information On or Lack of Revolving Accounts   - 299: Insufficient Information On or Lack of Accounts   - 303: Number of Recent Non-Utility Inquiries   - 308: Number of Mortgage Accounts   - 314: 60+ Days Delinquency Occurrences   - 327: Length of Credit History   - 351: Number of Unpaid Collections   - 352: Total Unpaid Collection Amount   - 672: 30+ Days Delinquency Occurrences   - 690: Number of Accounts 30+ Days Delinquent   - A13: Number of NCTUE accounts involuntary disconnected in the last 48 months   - A15: Number of Months since the latest NCTUE voluntary disconnection   - A16: Number of NCTUE satisfactory occurrences reported in the last 12 months   - A45: Number of NCTUE accounts connected in the last 36 months   - A59: Months since latest NCTUE paid-closed account reported in the last 24 months   - G91: Not enough information on NCTUE voluntary disconnections   - G92: Not enough information on NCTUE accounts reported in last 6 months   - G93: Not enough information on paid-closed NCTUE accounts   - G94: Not enough information on balances reported in the last 3 months on NCTUE   - G95: Not enough information on NCTUE account disconnections   - X01: Avg Number of NCTUE satisfactory occurrences reported in the last 12 months   - Y14: Number of NCTUE accounts connected in the last 12 months   - Y15: Number of NCTUE accounts connected in the last 24 months   - Y26: Age of oldest NCTUE connection   - Y28: Months since the latest paid-as-agreed reported within 24 months on NCTUE   - Y36: Highest balance of NCTUE open accounts in the last 6 months   - Y37: Highest NCTUE balance reported in the last 6 months   - Y38: Total of latest payments made reported in the last 2 months   - Y45: Total charge-off amount on NCTUE accounts reported in the last 6 months   - Y46: Average number of months since NCTUE connections   - Y48: Not enough information on latest payments on NCTUE   - Y50: Not enough information on balances reported in the last 6 months on NCTUE   - Y53: Not enough information on NCTUE connections   - Y56: Not enough information on paid-as-agreed NCTUE accounts   - Y61: Highest balance of NCTUE open accounts in the last 3 months   - Y67: Months since the latest NCTUE account disconnection   - Y72: Months since latest NCTUE 60+ days past due reported in last 24 months   - Y74: Months since connection of oldest paid-as-agreed NCTUE account   - A14: Number of months Months since the latest NCTUE involuntary disconnection   - 802: The input SSN is reported as deceased   - 803: The input SSN was issued prior to the input date-of-birth   - 804: The input last name and SSN are verified, but not with the input address and phone   - 806: The input SSN is invalid   - 807: The input phone number may be disconnected   - 808: The input phone number is potentially invalid   - 809: The input phone number is a pager number   - 810: The input phone number is a mobile number   - 811: The input address may be invalid according to postal specifications   - 812: The input zip code belongs to a post office box   - 813: The input address has an invalid apartment designation   - 814: The input address is a transient commercial or institutional address   - 815: The input phone number matches a transient commercial or institutional address   - 816: The input phone number and input zip code combination is invalid   - 819: Unable to verify name, address, SSN/TIN and phone   - 820: Unable to verify applicant name, address and phone number   - 822: Unable to verify applicant name and address   - 823: Unable to verify applicant name and SSN   - 824: Unable to verify applicant address and SSN   - 825: Unable to verify address   - 826: Unable to verify SSN/TIN   - 827: Unable to verify phone number   - 828: Unable to verify date-of-birth   - 829: The input SSN/TIN may have been miskeyed   - 830: The input address may have been miskeyed   - 831: The input phone number may have been miskeyed   - 835: Insufficient verification to return a score under CA law   - 836: Identity elements not fully verified on all available sources   - 837: Unable to verify name   - 841: The input driver&amp;apos;s license number is invalid for the input DL state   - 845: The input SSN and address are not associated with the input last name and phone   - 848: Unable to verify first name   - 849: The input phone and address are geographically distant (&gt; 10 miles)   - 850: The input address matches a prison address   - 851: The input last name is not associated with the input SSN   - 852: The input first name is not associated with input SSN   - 871: The input SSN is not found in the public record   - 872: The input SSN is associated with a different name and address   - 873: The input phone number is not found in the public record   - 874: The input phone number is associated with a different name and address   - 877: The input name was missing   - 878: The input address was missing   - 879: The input SSN/TIN was missing or incomplete   - 880: The input phone was missing or incomplete   - 881: The input date-of-birth was missing or incomplete   - 882: The input name and address return a different phone number   - 883: The input date-of-birth may have been miskeyed   - 891: Security Freeze (CRA corrections database)   - 892: Security Alert (CRA corrections database)   - 893: Identity Theft Alert (CRA corrections database)   - 894: Dispute On File (CRA corrections database)   - 895: Subject has opted out of prescreen offers   - 897: Criminal record found   - 898: Lien/Judgment record found   - 899: The input address is verified but may not be primary residence   - 89A: No evidence of property ownership   - 89B: Evidence of historical property ownership but no current record   - 89C: Length of residence   - 89D: Change of address frequency   - 89E: Number of sources confirming identity and current address   - 89F: Date of confirming source update   - 89G: Insufficient Age   - 89H: Evidence of sub-prime credit services solicited   - 89I: No evidence of post-secondary education   - 89J: Age of Oldest Public Record on file   - 89K: Address dwelling type   - 89L: Distance between the current and previous address   - 89M: Insufficient evidence of wealth   - 89N: Correctional institution in address history   - 89O: No evidence of phone service at address   - 89P: Number of consumer finance inquiries   - 89Q: Number of inquiries in the last 12 months   - 89R: Length of time on sources confirming identity   - 89S: Type of mortgage   - 89T: Input phone is invalid, non-residential, or disconnected   - 89U: Input address is invalid, non-residential, or undeliverable   - 89V: Input SSN is invalid, recently issued, or inconsistent with date of birth   - 89W: Bankruptcy record on file   - 89X: Insufficient information on file   - 89Y: Insufficient purchase activity reported   - 8EV: Eviction record found   - 8MI: Multiple identities associated with the input SSN   - 8MN: The input SSN was issued within the last seventeen years   - 8MS: Multiple SSNs reported with applicant   - 8PV: Insufficient property value   - P01: No usable Public Record data   - P02: No usable Credit data   - P03: No usable NCTUE data  Score Reason corresponding to Model Number 05285    - 00027: Percent of Revolving Accounts Satisfactory   - 00028: Percent of Revolving Accounts With Major Derogatory Event   - 00030: Percent of Accounts 120+ Days Delinquent   - 00031: Percent of Accounts 60+ Days Delinquent   - 00033: Percent of Accounts Bankcard   - 00036: Percent of Accounts Installment   - 00037: Percent of Accounts Opened Recently   - 00039: Percent of Accounts Revolving   - 00040: Percent of Accounts Satisfactory   - 00049: 30 Days Delinquency Occurrences On Bankcard Accounts   - 00068: Age of Bankcard Accounts   - 00071: Age of Installment Accounts   - 00075: Age of Revolving Account Activity   - 00078: Age of Tax Lien   - 00079: Age of Account Activity   - 00080: Age of Accounts   - 00083: Bankcard High Credit   - 00095: Number of Auto Accounts With Major Derogatory Event   - 00096: Number of Bankcard Accounts   - 00104: Number of Bankcard Accounts Less Than 60 Days Delinquent   - 00107: Number of Bankcard Accounts With High Utilization   - 00109: Number of Collections   - 00123: Number Of Inquiries   - 00124: Number Of Installment Accounts   - 00125: Number Of Installment Accounts 120+ Days Delinquent   - 00126: Number Of Installment Accounts 120-180 Or More Days Delinquent   - 00133: Number of Installment Accounts Opened Recently   - 00135: Number of Installment Accounts With High Balance Outstanding   - 00136: Number of Installment Accounts With Major Derogatory Event   - 00144: Number of Open Mortgage Accounts   - 00154: Number of Recent Inquiries   - 00164: Number of Retail Accounts With High Utilization    - 00166: Number of Revolving Accounts   - 00174: Number of Revolving Accounts Less Than 60 Days Delinquent   - 00190: Number of Satisfactory Accounts   - 00191: Number of Accounts   - 00198: Number of Accounts Less Than 60 Days Delinquent   - 00199: Number of Accounts Opened Recently   - 00200: Number of Accounts Past Due   - 00203: Occurrence of Severe Derogatory Event   - 00208: Total Amount Past Due For Bankcard Accounts   - 00219: Total Balance On Personal Finance or Student Loan Accounts   - 00224: Total Collection Amount   - 00287: Insufficient Information On Credit History   - 00290: Insufficient Information On or Lack of Bankcard Accounts   - 00292: Insufficient Information On or Lack of Department Store Accounts   - 00293: Insufficient Information On or Lack of Installment Accounts   - 00296: Insufficient Information On or Lack of Retail Accounts   - 00297: Insufficient Information On or Lack of Revolving Accounts   - 00298: Insufficient Information On or Lack of Sales Finance Accounts   - 00299: Insufficient Information On or Lack of Accounts   - 00301: Number of Recent Utility Inquiries   - 00302: Number of Utility Inquiries   - 00303: Number of Recent Non-Utility Inquiries   - 00305: Number of Auto Accounts   - 00315: 60+ Days Delinquency Occurrences On Bankcard Accounts   - 00317: 60+ Days Delinquency Occurrences On Installment Accounts   - 00322: Number Of Retail Accounts Past Due   - 00327: Length Of Credit History   - 00330: Percent Of Utility Inquiries Posted Recently   - 00331: Percent of Non-Utility Inquiries Posted Recently   - 00991: Number of open accounts and total collection amount    Score Reason corresponding to Model Number 05264   - 1:   PERCENT OF AUTO BALANCE OUTSTANDING ON EQ   - 2:   PERCENT OF BALANCE PAST DUE ON EQ   - 26:  PERCENT OF REVOLVING ACCOUNTS OPENED RECENTLY ON EQ   - 27:  PERCENT OF REVOLVING ACCOUNTS SATISFACTORY ON EQ   - 28:  PERCENT OF REVOLVING ACCOUNTS WITH MAJOR DEROGATORY EVENT ON EQ   - 29:  PERCENT OF REVOLVING ACCOUNTS SATISFACTORY ON EQ   - 40:  PERCENT OF ACCOUNTS SATISFACTORY ON EQ   - 49:  30 DAYS DELINQUENCY OCCURRENCES ON BANKCARD ACCOUNTS ON EQ   - 51:  30 DAYS DELINQUENCY OCCURRENCES ON INSTALLMENT ACCOUNTS ON EQ   - 66:  AGE OF AUTO ACCOUNTS ON EQ   - 68:  AGE OF BANKCARD ACCOUNTS ON EQ   - 79:  AGE OF ACCOUNT ACTIVITY ON EQ   - 80:  LENGTH OF CREDIT TRADE HISTORY ON EQ   - 83:  BANKCARD HIGH CREDIT ON EQ   - 84:  BANKCARD UTILIZATION ON EQ   - 86:  DEPARTMENT STORE UTILIZATION ON EQ   - 95:  NUMBER OF AUTO ACCOUNTS WITH MAJOR DEROGATORY EVENT ON EQ   - 107: NUMBER OF OPEN BANKCARD ACCOUNTS WITH HIGH UTILIZATION ON EQ   - 109: NUMBER OF COLLECTIONS ON EQ   - 123: NUMBER OF CREDIT INQUIRIES ON EQ   - 133: NUMBER OF INSTALLMENT ACCOUNTS OPENED RECENTLY ON EQ   - 135: NUMBER OF INSTALL ACCOUNTS WITH HIGH BALANCE OUTSTANDING ON EQ   - 145: NUMBER OF OPEN PERSONAL FINANCE OR STUDENT LOAN ACCOUNTS ON EQ   - 154: NUMBER OF RECENT CREDIT INQUIRIES ON EQ   - 177: NUMBER OF REVOLVING ACCOUNTS WITH BALANCE ON EQ   - 178: NUMBER OF REVOLVING ACCOUNTS WITH HIGH UTILIZATION ON EQ   - 189: NUMBER OF SATISFACTORY REVOLVING ACCOUNTS ON EQ   - 190: NUMBER OF SATISFACTORY ACCOUNTS ON EQ   - 199: NUMBER OF ACCOUNTS OPENED RECENTLY ON EQ   - 200: NUMBER OF ACCOUNTS PAST DUE ON EQ   - 203: OCCURRENCE OF SEVERE DEROGATORY EVENT ON EQ   - 206: REVOLVING UTILIZATION ON EQ   - 214: TOTAL BALANCE ON BANKCARD ACCOUNTS ON EQ   - 220: TOTAL BALANCE ON RETAIL ACCOUNTS ON EQ   - 222: TOTAL BALANCE ON SALES FINANCE ACCOUNTS ON EQ   - 224: TOTAL COLLECTION AMOUNT ON EQ   - 225: WORST RATING FOR AUTO ACCOUNTS ON EQ   - 226: WORST RATING FOR MORTGAGE ACCOUNTS ON EQ   - 289: INSUFFICIENT INFORMATION ON OR LACK OF AUTO ACCOUNTS ON EQ   - 290: INSUFFICIENT INFORMATION ON OR LACK OF BANKCARD ACCOUNTS ON EQ   - 294: INSUFFICIENT INFORMATION ON OR LACK OF MORTGAGE ACCOUNTS ON EQ   - 296: INSUFFICIENT INFORMATION ON OR LACK OF RETAIL ACCOUNTS ON EQ   - 297: INSUFFICIENT INFORMATION ON OR LACK OF REVOLVING ACCOUNTS ON EQ   - 298: INSUFFICIENT INFORMATION ON OR LACK OF SALES FINANCE ACCTS ON EQ   - 299: INSUFFICIENT INFORMATION ON OR LACK OF ACCOUNTS ON EQ   - 303: NUMBER OF RECENT NON-UTILITY CREDIT INQUIRIES ON EQ   - 304: NUMBER OF NON-UTILITY CREDIT INQUIRIES ON EQ   - 305: NUMBER OF AUTO ACCOUNTS ON EQ   - 351: NUMBER OF UNPAID COLLECTIONS ON EQ   - 352: TOTAL UNPAID COLLECTION AMOUNT ON EQ   - 804: INSUFFICIENT ADDRESS INFORMATION ON LEXISNEXIS FILE   - 812: INSUFFICIENT NON-DEROGATORY REPORTING HISTORY ON LEXISNEXIS FILE   - 813: TIME AT RESIDENCE   - 814: NUMBER OF ADDRESS CHANGES ON LEXISNEXIS FILE   - 821: NUMBER OF SHORT-TERM LOAN OFFER REQUESTS ON LEXISNEXIS FILE   - 833: EVICTION RECORD ON LEXISNEXIS FILE   - 834: LIEN OR JUDGMENT RECORD ON LEXISNEXIS FILE   - 841: NO RECORD OF PROPERTY OWNERSHIP   - 842: NO RECORD OF CURRENT PROPERTY OWNERSHIP   - 844: NO RECORD OF OWNERSHIP OF CURRENT PROPERTY   - 851: INSUFFICIENT PROPERTY CHARACTERISTICS ON LEXISNEXIS FILE   - 857: INSUFFICIENT OCCUPATIONAL CHARACTERISTICS ON LEXISNEXIS FILE   - 860: NUMBER OF LEXISNEXIS INQUIRIES IN THE LAST 12 MONTHS   - 870: NUMBER OF PERSONAL FINANCE LEXISNEXIS INQUIRIES IN THE LAST 12 MONTHS   - 880: TAX ASSESSED PROPERTY VALUE FOR INPUT ADDRESS   - A02: WORST NCTUE DELINQUENCY OR DEROGATORY REPORTED IN THE LAST 6 MONTHS   - A03: WORST NCTUE DELINQUENCY OR DEROGATORY REPORTED IN THE LAST 3 MONTHS   - A06: HIGHEST BALANCE OF NCTUE OPEN ACCOUNTS IN THE LAST 12 MONTHS   - A07: HIGHEST CURRENT BALANCE OF NCTUE ACCOUNTS   - A16: NUMBER OF NCTUE SATISFACTORY OCCURRENCES REPORTED IN THE LAST 12 MONTHS   - B15: RELATION OF INCOME &amp; AVAIL BANKCRAD AMT TO CURR DEBT AND COLLECT AMT ON EQ   - B16: RELATION OF INCOME AND HELOC AVAIL CREDIT TO CURRENT BANKCARD DEBT ON EQ   - B17: RELATION OF INCOME TO SCHEDULED PAYMENT ON BANKCARD ACCOUNTS ON EQ   - C02: CURRENT BANKCARD DEBT ON EQ   - D14: RELATION OF INCOME, AVAIL CREDIT TO CURRENT DEBT AND MAJOR DEROG AMT ON EQ   - D15: DEBT AND COLLECT AMT TO INC &amp; AVAIL AMT ON BNKCRD, OTHER INSTALL &amp; HE ON EQ   - D16: RELATION OF CURRENT DEBT ON BANKCARD ACCOUNTS TO INCOME ON EQ   - D17: RELATION OF INCOME MINUS CURRENT DEBT AND COLLECTION AMOUNT ON EQ   - D18: DEBT AND COLLECT AMT TO INC &amp; AVAIL CREDIT ON INSTALL &amp; OTHER REVOLV ON EQ   - D20: RELATION OF INC, EQUITY IN HOME AND AVAIL CREDIT TO COLLECT AMT ON EQ   - G01: INSUFFICIENT INFORMATION ON BANKCARD ACCOUNTS ON EQ   - G02: INSUFFICIENT INFORMATION ON INCOME, AVAILABLE CREDIT OR DEBT ON EQ   - G03: RELATION OF INCOME AND MORTGAGE AVAILABLE CREDIT TO CURR DEBT ON EQ   - G05: INSUFFICIENT INFORMATION ON REVOLVING AVAILABLE CREDIT ON EQ   - G06: INSUFFICIENT INFO ON CREDIT LIMIT FOR OTHER INSTALLMENT ACCOUNTS ON EQ   - G07: INSUFFICIENT INFO ON INCOME, CURRENT DEBT OR MAJOR DEROG AMOUNT ON EQ   - G08: INSUFFICIENT INFORMATION ON BANKCARD ACCOUNTS ON EQ   - G09: INSUFFICIENT INFO ON INCOME, CURR DEBT OR AVAIL AMT ON BANKCARD ACCTS ON EQ   - G10: LACK OF INFO ON DBT,COLL AMT,INC OR AVAIL AMT ON INST OR REVOLV ACCTS ON EQ   - G11: INSUFFICIENT INFO ON CREDIT LIMIT FOR OTHER INSTALLMENT ACCTS ON EQ   - G12: INSUFFICIENT INFO ON INC, AVAIL AMT ON HELOC OR CURR DEBT ON OPEN TRDS ON EQ   - G13: INSUFFICIENT INFO ON TOTAL AVAILABLE FOR REVOLVING AND INSTALL ACCTS ON EQ   - G14: INSUFFICIENT INFO ON INC, EQUITY IN HOME OR AVAIL AMT ON BNKCRD ACCTS ON EQ   - G16: INSUFFICIENT INFO ON INCOME, CURRENT DEBT OR COLLECTION AMOUNT ON EQ   - H01: CREDIT LIMIT HIGH CREDIT FOR OTHER INSTALLMENT ACCOUNTS ON EQ   - H02: TOTAL AVAILABLE ON REVOLVING AND INSTALLMENT ACCOUNTS ON EQ   - H03: TOTAL INCOME, EQUITY IN HOME AND AVAILABLE BANKCARD CREDIT ON EQ   - I01: MAJOR DEROGARTORY AMOUNT ON EQ   - J02: 3RD PARTY COLLECTION AMOUNT ON EQ   - L01: TOTAL BALANCE ON AUTO ACCOUNTS ON EQ   - O04: AVAILABLE REVOLVING CREDIT ON EQ   - O05: AVAILABLE CREDIT ON BANKCARD ACCOUNTS ON EQ   - P02: NO USABLE CREDIT DATA ON EQ   - P03: NO USABLE NCTUE DATA   - Y32: TOTAL OF LATEST BALANCES FOR NCTUE ACCOUNTS REPORTED IN THE LAST 6 MONTHS   - Y37: HIGHEST NCTUE BALANCE REPORTED IN THE LAST 6 MONTHS   - Y52: NOT ENOUGH INFORMATION ON BALANCES REPORTED IN THE LAST 6 MONTHS ON NCTUE   - Y54: NOT ENOUGH INFORMATION ON BALANCES REPORTED IN THE LAST 6 MONTHS ON NCTUE   - Y55: NOT ENOUGH INFORMATION ON BALANCES REPORTED ON NCTUE   - Y56: NOT ENOUGH INFORMATION ON PAID-AS-AGREED NCTUE ACCOUNTS   - Y72: MONTHS SINCE LATEST NCTUE 60+ DAYS PAST DUE REPORTED IN LAST 24 MONTHS   - Y74: MONTHS SINCE CONNECTION OF OLDEST PAID-AS-AGREED NCTUE ACCOUNT   - Y90: NOT ENOUGH INFORMATION ON NCTUE ACCOUNTS REPORTED IN THE LAST 3 MONTHS   - Y91: NOT ENOUGH INFORMATION ON NCTUE ACCOUNTS REPORTED IN THE LAST 6 MONTHS   - Y92: NOT ENOUGH INFORMATION ON NCTUE ACCOUNTS REPORTED IN THE LAST 12 MONTHS   - Y93: NOT ENOUGH INFORMATION ON NCTUE ACCOUNTS REPORTED IN THE LAST 24 MONTHS    Score Reason corresponding to Model Number 05184   - 3:  PERCENT OF BANKCARD BALANCE PAST DUE   - 7:  PERCENT OF BANKCARD ACCOUNTS SATISFACTORY   - 24: PERCENT OF REVOLVING ACCOUNTS 60+ DAYS DELINQUENT OR MAJOR DEROGATORY   - 27: PERCENT OF RECENTLY REPORTED REVOLVING ACCOUNTS THAT ARE SATISFACTORY   - 33: PERCENT OF ALL OPEN ACCOUNTS THAT ARE BANKCARDS   - 37: PERCENT OF ACCOUNTS OPENED RECENTLY   - 40: PERCENT OF ACCOUNTS SATISFACTORY   - 66: AGE OF MOST RECENT OPEN AUTO ACCOUNT   - 68: AGE OF OLDEST BANKCARD ACCOUNT   - 71: AGE OF OLDEST INSTALLMENT ACCOUNT   - 76: AGE OF REVOLVING ACCOUNTS   - 80: AGE OF OLDEST ACCOUNT   - 84: BANKCARD UTILIZATION   - 96: NUMBER OF BANKCARD ACCOUNTS   - 104: NUMBER OF BANKCARD ACCOUNTS LESS THAN 60 DAYS DELINQUENT   - 107: NUMBER OF BANKCARD ACCOUNTS WITH HIGH UTILIZATION   - 109: NUMBER OF COLLECTIONS   - 110: NUMBER OF DEPARTMENT STORE ACCOUNTS   - 129: NUMBER OF INSTALLMENT ACCOUNTS 60+ DAYS DELINQUENT   - 133: NUMBER OF INSTALLMENT ACCOUNTS OPENED RECENTLY   - 136: NUMBER OF INSTALLMENT ACCOUNTS WITH MAJOR DEROGATORY EVENT   - 149: NUMBER OF OPEN ACCOUNTS   - 174: NUMBER OF REVOLVING ACCOUNTS LESS THAN 60 DAYS DELINQUENT   - 191: NUMBER OF ACCOUNTS   - 198: NUMBER OF ACCOUNTS LESS THAN 60 DAYS DELINQUENT   - 199: NUMBER OF ACCOUNTS OPENED RECENTLY   - 203: OCCURRENCE OF SEVERE DEROGATORY EVENT   - 209: TOTAL AMOUNT PAST DUE FOR INSTALLMENT ACCOUNTS   - 214: TOTAL BALANCE ON BANKCARD ACCOUNTS   - 219: TOTAL BALANCE ON PERSONAL FINANCE OR STUDENT LOAN ACCOUNTS   - 223: TOTAL BALANCE ON ACCOUNTS   - 289: INSUFFICIENT INFORMATION ON OR LACK OF AUTO ACCOUNTS   - 290: INSUFFICIENT INFORMATION ON OR LACK OF BANKCARD ACCOUNTS   - 292: INSUFFICIENT INFORMATION ON OR LACK OF DEPARTMENT STORE ACCOUNTS   - 293: INSUFFICIENT INFORMATION ON OR LACK OF INSTALLMENT ACCOUNTS   - 296: INSUFFICIENT INFORMATION ON OR LACK OF RETAIL ACCOUNTS   - 297: INSUFFICIENT INFORMATION ON OR LACK OF REVOLVING ACCOUNTS   - 299: INSUFFICIENT INFORMATION ON OR LACK OF ACCOUNTS   - 302: NUMBER OF UTILITY INQUIRIES   - 303: NUMBER OF RECENT NON-UTILITY INQUIRIES   - 304: NUMBER OF NON-UTILITY INQUIRIES   - 305: NUMBER OF AUTO ACCOUNTS   - 308: NUMBER OF MORTGAGE ACCOUNTS   - 309: NUMBER OF RETAIL ACCOUNTS   - 310: NUMBER OF RETAIL ACCOUNTS WITH BALANCE   - 312: STUDENT LOAN HIGH CREDIT   - 317: 60+ DAYS DELINQUENCY OCCURRENCES ON INSTALLMENT ACCOUNTS   - 331: PERCENT OF RECENT NON-UTILITY INQUIRIES POSTED RECENTLY   - 334: PERCENT OF RECENTLY REPORTED ACCOUNTS THAT ARE SATISFACTORY   - 336: AGE OF MOST RECENT OPEN BANKCARD ACCOUNT   - 337: AGE OF MOST RECENT OPEN ACCOUNT   - 338: RECENT OCCURRENCE OF BANKRUPTCY EVENT   - 339: OCCURRENCE OF BANKRUPTCY EVENT   - 340: NUMBER OF JUDGMENTS   - 341: TOTAL ORIGINAL COLLECTION AMOUNT ON UNPAID 3RD PARTY COLLECTIONS POSTED RECENTLY   - 343: TOTAL ORIGINAL COLLECTION AMOUNT ON UNPAID 3RD PARTY COLLECTIONS   - 344: NUMBER OF RETAIL ACCOUNTS REPORTED RECENTLY   - 347: AGE OF MOST RECENT OPEN RETAIL ACCOUNT   - 991: NUMBER OF OPEN ACCOUNTS &amp; TOTAL COLLECTION AMOUNT   - 992: PERCENT OF ACCOUNTS SATISFACTORY &amp; NUMBER OF BANKCARD ACCOUNTS WITH HIGH UTILIZATION   - Y01: NO HIT TO CREDIT FILE   - Y02: NO TRADE ON CREDIT FILE   - Y03: NUMBER OF OPEN TRADES ON CREDIT FILE   - Y04: NUMBER OF OPEN TRADES ON CREDIT FILE AND 3RD PARTY COLLECTION   - Y05: PERCENT OF SATISFACTORY TRADES OF ALL TRADES ON CREDIT FILE   - Y06: PERCENT OF SATISFACTORY TRADES &amp; LACK OF OPEN BANKCARD TRADES ON CREDIT FILE   - Y07: PERCENT OF SATISFACTORY TRADES AND BANKCARD UTILIZATION ON CREDIT FILE   - Y08: UTILIZATION ON OPEN BANKCARD TRADES ON CREDIT FILE   - Y09: THIRD PARTY COLLECTION AMOUNT ON CREDIT FILE   - Y10: NUMBER OF INQUIRIES IN THE LAST 24 MONTHS ON CREDIT FILE   - Y11: PRESENCE OF PUBLIC RECORD JUDGMENT ON CREDIT FILE   - Y12: NUMBER OF NCTUE ACCOUNTS   - Y13: NUMBER OF NCTUE ACCOUNTS CONNECTED IN THE LAST 6 MONTHS   - Y14: NUMBER OF NCTUE ACCOUNTS CONNECTED IN THE LAST 12 MONTHS   - Y15: NUMBER OF NCTUE ACCOUNTS CONNECTED IN THE LAST 24 MONTHS   - Y16: NUMBER OF NCTUE ACCOUNTS CONNECTED IN THE LAST 48 MONTHS   - Y17: NUMBER OF NCTUE PAID-AS-AGREED ACCOUNTS REPORTED IN THE LAST 3 MONTHS   - Y18: NUMBER OF NCTUE PAID-AS-AGREED ACCOUNTS REPORTED IN THE LAST 6 MONTHS   - Y19: NUMBER OF NCTUE ACCOUNTS REPORTED IN LAST 6 MONTHS AS WORST 30 DAYS PAST DUE   - Y20: # OF NCTUE NON-DEROGATORY 60+ DAYS PAST DUE ACCTS REPORTED IN LAST 6 MONTHS   - Y21: # OF NCTUE NON-DEROGATORY WORST 60+ DAYS PAST DUE ACCOUNTS IN LAST 3 MONTHS   - Y22: # OF NCTUE ACCOUNTS 60+ DAYS PAST DUE OR DEROGATORY REPORTED IN LAST 6 MONTHS   - Y23: # OF NCTUE 90+ DAYS PAST DUE OR DEROGATORY ACCOUNTS REPORTED IN LAST 6 MONTHS   - Y24: NUMBER OF NCTUE ACCOUNTS CONNECTED IN THE LAST 3 MONTHS   - Y25: NUMBER OF NCTUE ACCOUNTS INVOLUNTARY DISCONNECTED IN THE LAST 3 MONTHS   - Y26: AGE OF OLDEST NCTUE CONNECTION   - Y27: AGE OF YOUNGEST NCTUE CONNECTION FOR PAID-AS-AGREED ACCOUNTS   - Y28: MONTHS SINCE THE LATEST PAID-AS-AGREED REPORTED WITHIN 24 MONTHS ON NCTUE   - Y29: MONTHS SINCE LATEST 30+ DAYS PAST DUE REPORTED WITHIN 24 MONTHS ON NCTUE   - Y30: MONTHS SINCE LATEST NCTUE 30+ DAYS PAST DUE OR DEROGATORY REPORTED IN 24 MOS   - Y31: MONTHS SINCE LATEST NCTUE DEROGATORY ACCOUNT REPORTED IN THE LAST 24 MONTHS   - Y32: TOTAL OF LATEST BALANCES FOR NCTUE ACCOUNTS REPORTED IN THE LAST 6 MONTHS   - Y33: TOTAL OF LATEST BALANCES FOR NCTUE ACCOUNTS REPORTED IN THE LAST 2 MONTHS   - Y34: % OF NCTUE TOTAL OPEN BALANCES OF TOTAL BALANCES REPORTED IN LAST 2 MONTHS   - Y35: AVERAGE BALANCE ON OPEN NCTUE ACCOUNTS IN THE LAST 6 MONTHS   - Y36: HIGHEST BALANCE OF NCTUE OPEN ACCOUNTS IN THE LAST 6 MONTHS   - Y37: HIGHEST NCTUE BALANCE REPORTED IN THE LAST 6 MONTHS   - Y38: TOTAL OF LATEST PAYMENTS MADE REPORTED IN THE LAST 2 MONTHS   - Y39: NUMBER OF TIMES PAID-AS-AGREED WAS REPORTED IN THE LAST 6 MONTHS ON NCTUE   - Y40: NUMBER OF TIMES 30 DAYS PAST DUE WAS REPORTED IN THE LAST 6 MONTHS ON NCTUE   - Y41: NUMBER OF TIMES 60 DAYS PAST DUE WAS REPORTED IN THE LAST 6 MONTHS ON NCTUE   - Y42: % OF NCTUE ACCOUNTS IN LAST 6 MONTH REPORTED 60+ DAYS PAST DUE OR DEROGATORY   - Y43: % OF NCTUE ACCOUNTS IN LAST 6 MONTH REPORTED 90+ DAYS PAST DUE OR DEROGATORY   - Y44: MONTHS SINCE THE LATEST NCTUE CHARGE-OFF REPORTED IN THE LAST 24 MONTHS   - Y45: TOTAL CHARGE-OFF AMOUNT ON NCTUE ACCOUNTS REPORTED IN THE LAST 6 MONTHS   - Y46: AVERAGE NUMBER OF MONTHS SINCE NCTUE CONNECTIONS   - Y47: NOT ENOUGH INFORMATION ON LATEST BALANCES REPORTED ON NCTUE   - Y48: NOT ENOUGH INFORMATION ON LATEST PAYMENTS ON NCTUE   - Y49: NOT ENOUGH INFORMATION ON CONNECTIONS OF NCTUE ACCOUNTS   - Y50: NOT ENOUGH INFORMATION ON BALANCES REPORTED IN THE LAST 6 MONTHS ON NCTUE   - Y51: NOT ENOUGH INFORMATION ON PAID-AS-AGREED NCTUE ACCOUNTS   - Y52: NOT ENOUGH INFORMATION ON BALANCES REPORTED IN THE LAST 6 MONTHS ON NCTUE   - Y53: NOT ENOUGH INFORMATION ON NCTUE CONNECTIONS   - Y54: NOT ENOUGH INFORMATION ON BALANCES REPORTED IN THE LAST 6 MONTHS ON NCTUE   - Y55: NOT ENOUGH INFORMATION ON BALANCES REPORTED ON NCTUE   - Y56: NOT ENOUGH INFORMATION ON PAID-AS-AGREED NCTUE ACCOUNTS   - Y57: NUMBER OF NCTUE ACCOUNTS REPORTED IN THE LAST 3 MONTHS   - Y58: WORST NCTUE DELINQUENCY OR DEROGATORY REPORTED IN THE LAST 6 MONTHS   - Y59: TOTAL LATEST BALANCE ON OPEN NCTUE ACCOUNTS REPORTED IN THE LAST 2 MONTHS   - Y60: AVERAGE BALANCE ON OPEN NCTUE ACCOUNTS IN THE LAST 3 MONTHS   - Y61: HIGHEST BALANCE OF NCTUE OPEN ACCOUNTS IN THE LAST 3 MONTHS   - Y62: AVERAGE NUMBER OF MONTHS SINCE NCTUE DISCONNECTION   - Y63: TOTAL BALANCE OF DEROGATORY NCTUE ACCOUNTS REPORTED IN THE LAST 6 MONTHS   - Y64: NOT ENOUGH INFORMATION ON NCTUE ACCOUNTS REPORTED IN THE LAST 3 MONTHS   - Y66: MONTHS SINCE THE LATEST NCTUE ACCOUNT CONNECTION   - Y68: MONTHS SINCE LATEST NCTUE INVOLUNTARY DISCONNECTION IN THE LAST 24 MONTHS   - Y69: NUMBER OF TIMES PAID AS AGREED REPORTED IN THE LAST 3 MONTHS ON NCTUE   - Y70: # OF NCTUE ACCOUNTS WORST NON-DEROGATORY 60+ DAYS PAST DUE IN LAST 6 MONTHS   - Y71: # OF NCTUE 60+ DAYS PAST DUE OR DEROGATORY ACCOUNTS REPORTED IN LAST 3 MONTHS   - Y72: MONTHS SINCE LATEST NCTUE 60+ DAYS PAST DUE REPORTED IN LAST 24 MONTHS   - Y73: TOTAL CHARGE-OFF AMOUNT ON NCTUE ACCOUNTS REPORTED IN THE LAST 2 MONTHS   - Y74: MONTHS SINCE CONNECTION OF OLDEST PAID-AS-AGREED NCTUE ACCOUNT   - Y75: MONTHS SINCE LATEST NCTUE 90+ DAYS PAST DUE OR DEROGATORY IN LAST 24 MONTHS   - Y77: NOT ENOUGH INFORMATION ON PAID-AS-AGREED NCTUE ACCOUNTS   - Y79: NOT ENOUGH INFORMATION ON PAID-AS-AGREED NCTUE ACCOUNTS   - Y80: NOT ENOUGH INFORMATION ON PAID-AS-AGREED NCTUE ACCOUNTS   - Y81: NUMBER OF COLLECTIONS ON CREDIT FILE   - Y82: THIRD PARTY COLLECTION AMOUNT ON CREDIT FILE   - Y83: NUMBER OF RECENT INQUIRIES ON CREDIT FILE
    consumerCreditReportReasonsDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportReasons
instance A.FromJSON ConsumerCreditReportReasons where
  parseJSON = A.withObject "ConsumerCreditReportReasons" $ \o ->
    ConsumerCreditReportReasons
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportReasons
instance A.ToJSON ConsumerCreditReportReasons where
  toJSON ConsumerCreditReportReasons {..} =
    A.object
      [ "code" .= consumerCreditReportReasonsCode,
        "description" .= consumerCreditReportReasonsDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportReasons' (by applying it's required fields, if any)
mkConsumerCreditReportReasons ::
  ConsumerCreditReportReasons
mkConsumerCreditReportReasons =
  ConsumerCreditReportReasons
    { consumerCreditReportReasonsCode = Nothing,
      consumerCreditReportReasonsDescription = Nothing
    }

-- ** ConsumerCreditReportRejects

-- | ConsumerCreditReportRejects
-- Reject codes corresponding to the model
data ConsumerCreditReportRejects = ConsumerCreditReportRejects
  { -- | "code" - Code value
    consumerCreditReportRejectsCode :: !(Maybe Text),
    -- | "description" - Reject Codes corresponding to Model Number 02781   - A1: File Under Review   - B0: Insufficient Information to Score   - D0: Bankruptcy On File   - L0: Subject Deceased   - N1: Inquiry Only File   - X7: File Cannot Be Scored    Reject Codes corresponding to Model Number 02782   - A1: File Under Review   - B0: Insufficient Information to Score   - D0: Bankruptcy On File   - L0: Subject Deceased   - N1: Inquiry Only File   - X7: File Cannot Be Scored    Reject Codes corresponding to Model Number 02783   - A1: File Under Review   - B0: Insufficient Information to Score   - D0: Bankruptcy On File   - L0: Subject Deceased   - N1: Inquiry Only File   - X7: File Cannot Be Scored    Reject Codes corresponding to Model Number 02784   - A1: File Under Review   - B0: Insufficient Information to Score   - D0: Bankruptcy On File   - L0: Subject Deceased   - N1: Inquiry Only File   - X7: File Cannot Be Scored    Reject Codes corresponding to Model Number 05146   - A1: File Under Review   - C1: No Qualifying Accounts Present   - C2: Bankruptcy Occurrence Present   - L0: Consumer Deceased   - R0: Insufficient Information to Score   - X1: Model Delivery Temporarily Unavailable   - X3: Too Many Inquiries on File   - X5: No Input Fields Provided   - X7: Model Delivery Temporarily Unavailable, File Cannot Be Scored    Reject Codes corresponding to Model Number 05147   - A1: File Under Review   - C1: No Qualifying Accounts Present   - C2: Bankruptcy Occurrence Present   - L0: Consumer Deceased   - R0: Insufficient Information to Score   - X1: Model Delivery Temporarily Unavailable   - X3: Too Many Inquiries on File   - X5: No Input Fields Provided   - X7: Model Delivery Temporarily Unavailable, File Cannot Be Scored    Reject Codes corresponding to Model Number 05276   - A1: File Under Review   - C1: No Qualifying Accounts Present   - C2: Bankruptcy Occurrence Present   - L0: Consumer Deceased   - R0: Insufficient Information to Score   - X1: Model Delivery Temporarily Unavailable   - X3: Too Many Inquiries on File   - X5: No Input Fields Provided   - X7: Model Delivery Temporarily Unavailable, File Cannot Be Scored  Reject Codes corresponding to Model Number 05277   - A1: File Under Review   - C1: No Qualifying Accounts Present   - C2: Bankruptcy Occurrence Present   - L0: Consumer Deceased   - R0: Insufficient Information to Score   - X1: Model Delivery Temporarily Unavailable   - X3: Too Many Inquiries on File   - X5: No Input Fields Provided   - X7: Model Delivery Temporarily Unavailable, File Cannot Be Scored    Reject Codes corresponding to Model Number 02502   - B0: No trade or inquiry reported within the last 24 months   - B1: Subject Deceased   - D0: Bankruptcy on File   - X7: File cannot be scored    Reject Codes corresponding to Model Number 02503   - B0: No trade or inquiry reported within the last 24 months   - B1: Subject Deceased   - D0: Bankruptcy on File   - X7: File cannot be scored    Reject Codes corresponding to Model Number 02037   - B0: No trade or inquiry reported within 24 months   - B1: Subject deceased   - X7: File cannot be scored    Reject Codes corresponding to Model Number 02525   - B0: No trade or inquiry reported within 24 months   - B1: Subject deceased   - X7: File cannot be scored    Reject Codes corresponding to Model Number 02725   - B0: No trade or inquiry reported within 24 months   - B1: Subject deceased   - X7: File cannot be scored    Reject Codes corresponding to Model Number 02874   - B0: Model Delivery is Not Available: Insufficient Information to Score   - L0: Model Delivery is Not Available: Subject Deceased   - X7: Model Delivery is Temporarily Unavailable   - A1: Model Delivery is Not Available: File Under Review   - F1: Model Delivery is Not Available: No Qualifying Accounts Present    Reject Codes corresponding to Model Number 02875   - B0: Model Delivery is Not Available: Insufficient Information to Score   - L0: Model Delivery is Not Available: Subject Deceased   - X7: Model Delivery is Temporarily Unavailable   - A1: Model Delivery is Not Available: File Under Review   - F1: Model Delivery is Not Available: No Qualifying Accounts Present    Reject Codes corresponding to Model Number 02893   - B0: Model Delivery is Not Available: Insufficient Information to Score   - L0: Model Delivery is Not Available: Subject Deceased   - X7: Model Delivery is Temporarily Unavailable   - A1: Model Delivery is Not Available: File Under Review   - F1: Model Delivery is Not Available: No Qualifying Accounts Present    Reject Codes corresponding to Model Number 02481   - B0: No trade or inquiry reported within 24 months   - L0: Subject Deceased   - L1: No qualifying information present   - X7: File cannot be scored    Reject Codes corresponding to Model Number 02527   - B0: No trade or inquiry reported within 24 months   - L0: Subject Deceased   - L1: No qualifying information present   - X7: File cannot be scored    Reject Codes corresponding to Model Number 02575   - B0: No trade or inquiry reported within 24 months   - L0: Subject Deceased   - X7: File cannot be scored   - A1: File Under Review    Reject Codes corresponding to Model Number 02531   - P1: Subject deceased   - P2: No qualifying trades   - P3: Insufficient or unknown tradeline history   - P4: No recently reported tradelines   - P5: No recent trades w/o data suppression or disputed info   - P6: Unable to score   - X7: Model delivery is temporarily unavailable    Reject Codes corresponding to Model Number 02825   - P1: Subject deceased   - P2: No qualifying trades   - P3: Insufficient or unknown tradeline history   - P4: No recently reported tradelines   - P5: No recent trades w/o data suppression or disputed info   - P6: Unable to score   - X7: Model delivery is temporarily unavailable    Reject Codes corresponding to Model Number 02905   - P1: Subject deceased   - P2: No qualifying trades   - P3: Insufficient or unknown tradeline history   - P4: No recently reported tradelines   - P5: No recent trades w/o data suppression or disputed info   - P6: Unable to score   - X7: Model delivery is temporarily unavailable    Reject Codes corresponding to Model Number 02906   - P1: Subject deceased   - P2: No qualifying trades   - P3: Insufficient or unknown tradeline history   - P4: No recently reported tradelines   - P5: No recent trades w/o data suppression or disputed info   - P6: Unable to score   - X7: Model delivery is temporarily unavailable    Reject Codes corresponding to Model Number 02682   - A1: File Under Review   - B0: Insufficient Information to Score   - L0: Subject deceased   - X7: File Cannot Be Scored    Reject Codes corresponding to Model Number 02718   - A1: File Under Review   - B0: Insufficient Information to Score   - L0: Subject deceased   - X7: File Cannot Be Scored   - N1: Inquiry Only File    Reject Codes corresponding to Model Number 02485   - B0: No trade or inquiry reported within the last 24 months   - X7: File cannot be scored    Reject Codes corresponding to Model Number 02505   - B1: Subject Deceased   - F1: No qualifying accounts present   - F3: No recently reported account information   - A0: Not available, file cannot be scored    Reject Codes corresponding to Model Number 02558   - B1: Subject Deceased   - F1: No qualifying accounts present   - F3: No recently reported account information   - A0: Not available, file cannot be scored    Reject Codes corresponding to Model Number 01203   - A1: File Under Review   - B0: Insufficient Information to Score   - F1: No Qualifying Accounts Present   - L0: Subject Deceased   - X7: Model Delivery is Temporarily Unavailable    Reject Codes corresponding to Model Number 01204   - A1: File Under Review   - B0: Insufficient Information to Score   - F1: No Qualifying Accounts Present   - L0: Subject Deceased   - X7: Model Delivery is Temporarily Unavailable  Reject Codes corresponding to Model Number 02912   - A1: File Under Review   - B0: Insufficient Information to Score   - F1: No Qualifying Accounts Present   - L0: Subject Deceased   - X7: Model Delivery is Temporarily Unavailable  Reject Codes corresponding to Model Number 02903   - A1: File Under Review   - B0: Insufficient Information to Score   - F1: No Qualifying Accounts Present   - L0: Subject Deceased   - X7: Model Delivery is Temporarily Unavailable  Reject Codes corresponding to Model Number 02904   - A1: File Under Review   - B0: Insufficient Information to Score   - F1: No Qualifying Accounts Present   - L0: Subject Deceased   - X7: Model Delivery is Temporarily Unavailable  Reject Codes corresponding to Model Number 02470   - B0: No trade or inquiry reported within 24 months   - B1: Subject deceased   - X7: File cannot be scored  Reject Codes corresponding to Model Number 02557   - B0: No trade or inquiry reported within 24 months   - B1: Subject deceased   - X7: File cannot be scored  Reject Codes corresponding to Model Number 02458   - B0: No trade or inquiry reported within 24 months   - B1: Subject deceased   - X7: File cannot be scored  Reject Codes corresponding to Model Number 02479   - B0: No trade or inquiry reported within the last 24 months   - B1: Subject Deceased   - D0: Bankruptcy on file   - X7: File cannot be scored  Reject Codes corresponding to Model Number 02978   - L0: Deceased   - F1: Lack of Trades   - B0: Lack of Activity   - X7: Model Delivery is Temporarily Unavailable   - A1: Model Delivery is Not Available  Reject Codes corresponding to Model Number 02991   - L0: Deceased   - F1: Lack of Trades   - B0: Lack of Activity   - X7: Model Delivery is Temporarily Unavailable   - A1: Model Delivery is Not Available  Reject Codes corresponding to Model Number 05008   - L0: Deceased   - F1: Lack of Trades   - B0: Lack of Activity   - X7: Model Delivery is Temporarily Unavailable   - A1: Model Delivery is Not Available  Reject Codes corresponding to Model Number 05028   - L0: Deceased   - F1: Lack of Trades   - B0: Lack of Activity   - X7: Model Delivery is Temporarily Unavailable   - A1: Model Delivery is Not Available  Reject Codes corresponding to Model Number 05143   - 000L0: Deceased   - 000F1: Lack of Trades   - 000B0: Lack of Activity   - 000X7: Model Delivery is Temporarily Unavailable   - 000A1: Model Delivery is Not Available  Reject Codes corresponding to Model Number 05151   - 000L0: Deceased   - 000F1: Lack of Trades   - 000B0: Lack of Activity   - 000X7: Model Delivery is Temporarily Unavailable   - 000A1: Model Delivery is Not Available  Reject Codes corresponding to Model Number 02770   - B0: Insufficient Information to Score   - L0: Subject Deceased   - X7: Model Delivery is Temporarily Unavailable   - A1: File Under Review  Reject Codes corresponding to Model Number 02778   - B1: Subject deceased   - F1: No trades on file   - F2: No trades on file with date open older than 5 months   - F3: No trades on files with date reported in last 6 months   - F4: No trades on file with a valid current status and without data suppression or disputed info   - X5: Invalid source data input (request missing a 1, 2, 3, 4 or 5 for the score desired)  Reject Codes corresponding to Model Number 02779   - B1: Subject deceased   - F1: No trades on file   - F2: No trades on file with date open older than 5 months   - F3: No trades on files with date reported in last 6 months   - F4: No trades on file with a valid current status and without data suppression or disputed info   - X5: Invalid source data input (request missing a 1, 2, 3, 4 or 5 for the score desired)  Reject Codes corresponding to Model Number 01958   - B0: No Trade/Inq     - B1: Deceased  Reject Codes corresponding to Model Number 01918   - B0: No Trade/Inq     - L0: Deceased  Reject Codes corresponding to Model Number 05236   - 01: DECEASED ON CREDIT, NCTUE AND LEXISNEXIS   - 02: DECEASED ON CREDIT AND NCTUE   - 03: DECEASED ON CREDIT AND LEXISNEXIS   - 04: DECEASED ON NCTUE AND LEXISNEXIS   - 05: DECEASED ON CREDIT   - 06: DECEASED ON NCTUE   - 07: DECEASED ON LEXISNEXIS   - 08: FILE IN REVIEW-CREDIT,FRAUD-NCTUE,IDENTITY THEFT -LEXISNEXIS   - 09: FILE IN REVIEW-CREDIT,FRAUD-NCTUE   - 10: FILE IN REVIEW-CREDIT,IDENTITY THEFT -LEXISNEXIS   - 11: FRAUD-NCTUE,IDENTITY THEFT -LEXISNEXIS   - 12: FILE IN REVIEW-CREDIT   - 13: FRAUD-NCTUE   - 14: IDENTITY THEFT -LEXISNEXIS   - 15: NO HIT-CREDIT,NO HIT-NCTUE,NO HIT-LEXISNEXIS   - 16: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,NO HIT-LEXISNEXIS   - 17: NO HIT-CREDIT,INQUIRY ONLY-NCTUE,NO HIT-LEXISNEXIS   - 18: INADEQUATE INFO-CREDIT,INQUIRY ONLY-NCTUE,NO HIT-LEXISNEXIS   - 19: NO HIT-CREDIT,BANKRUPTCY-NCTUE,NO HIT-LEXISNEXIS   - 20: INADEQUATE INFO-CREDIT,BANKRUPTCY-NCTUE,NO HIT-LEXISNEXIS   - 21: NO HIT-CREDIT,NO HIT-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 22: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 23: NO HIT-CREDIT,INQ ONLY-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 24: INADEQUATE INFO-CREDIT,INQ ONLY-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 25: NO HIT-CREDIT,BKP-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 26: INADEQUATE INFO-CREDIT,BKP-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 27: NO HIT-CREDIT,NO HIT-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 28: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 29: NO HIT-CREDIT,INQ ONLY-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 30: INADEQUATE INFO-CREDIT,INQ ONLY-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 31: NO HIT-CREDIT,BKP-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 32: INADEQUATE INFO-CREDIT,BKP-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 33: NO HIT-CREDIT,NO HIT-NCTUE,SECURITY ALERT-LEXISNEXIS   - 34: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,SECURITY ALERT-LEXISNEXIS   - 35: NO HIT-CREDIT,INQ ONLY-NCTUE,SECURITY ALERT-LEXISNEXIS   - 36: INADEQUATE INFO-CREDIT,INQ ONLY-NCTUE,SECURITY ALERT-LEXISNEXIS   - 37: NO HIT-CREDIT,BKP-NCTUE,SECURITY ALERT-LEXISNEXIS   - 38: INADEQUATE INFO-CREDIT,BKP-NCTUE,SECURITY ALERT-LEXISNEXIS   - 39: NO HIT-CREDIT,NO HIT-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 40: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 41: NO HIT-CREDIT,INQ ONLY-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 42: INADEQUATE INFO-CREDIT,INQ ONLY-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 43: NO HIT-CREDIT,BKP-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 44: INADEQUATE INFO-CREDIT,BKP-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 45: NO HIT-CREDIT,NO HIT-NCTUE,INADEQUATE INFO-LEXISNEXIS   - 46: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,INADEQUATE INFO-LEXISNEXIS   - 47: NO HIT-CREDIT,INQ ONLY-NCTUE,INADEQUATE INFO-LEXISNEXIS   - 48: INADEQUATE INFO-CREDIT,INQ ONLY-NCTUE,INADEQUATE INFO-LEXISNEXIS   - 49: NO HIT-CREDIT,BKP-NCTUE,INADEQUATE INFO-LEXISNEXIS   - 50: INADEQUATE INFO-CREDIT,BKP-NCTUE,INADEQUATE INFO-LEXISNEXIS   - A1: **NOT AVAILABLE, FILE UNDER REVIEW   - B0: INSUFFICIENT INFORMATION TO SCORE   - C1: MODEL DELIVERY IS NOT AVAILABLE: NO QUALIFYING ACCOUNTS PRESENT. NO HIT   - C2: MODEL DELIVERY UNAVAILABLE: FILE CONDITION NOT MET   - C3: ADDRESS FORMATTED INCORRECTLY FOR ALTERNATE DATA SOURCE   - C4: NAME FORMATTED INCORRECTLY FOR ALTERNATE DATA SOURCE   - C5: BUSINESS NAME INVALID   - C6: XML FORMAT ERROR BETWEEN INTERNAL DATABASES    - C7: INVALID ALTERNATE DATA SOURCE MBR NBR ON DATABASE SERVER   - C8: ALTERNATE DATA SOURCE MBR NBR NOT AUTHORIZED ON DATABASE   - C9: INVALID SECURITY CODE FOR ALTERNATE DATA SRCE ON DATABASE   - CC: NOT AUTHORIZED TO RECEIVE INSIGHT SCORES   - CD: INVALID PRODUCT CONFIGURATION FOR INSIGHT SCORES   - CE: ALTERNATE DATA SOURCE ERROR - MAX OF 4 ADDRESSES ALLOWED   - CF: INVALID ONLINE MATCH CONFIGURATION FOR INSIGHT SCORE   - CG: ALTERNATE DATA SRC ERROR - NO CONSUMER SRCH FIELDS PROVIDED   - CH: MISSING REQUIRED FIELDS FOR INTERNAL DATABASE SEARCH   - CJ: INTERNAL DATABASE ERROR - PLEASE TRY LATER OR CONTACT EFX   - CK: INTERNAL MDB LAYOUT ERROR   - CL: RETRY TRANSACTION TRANSIENT ERROR   - CQ: INTERNAL PROCESSING ERROR PLEASE TRY LATER OR CONTACT EFX   - CS: MODEL SERVER ERROR PLEASE TRY AGAIN LATER OR CONTACT EFX   - CT: INTERNAL CUSTOMER ID ERROR   - CX: HTTP ERROR RETURNED TO OMS FROM NC+/CONNEXUS   - CZ: RETRY TRANSACTION - IF ERROR CONTINUES, CONTACT EQUIFAX   - L0: MODEL DELIVERY IS NOT AVAILABLE: SUBJECT DECEASED   - N1: INQUIRY ONLY FILE   - R0: MODEL DELIVERY IS NOT AVAILABLE: INSUFFICIENT INFORMATION TO SCORE   - X7: MODEL DELIVERY IS TEMPORARILY UNAVAILABLE  Reject Codes corresponding to Model Number 05168   - B: RISKWISE AUTHORIZATION REQUIRED - CONTACT YOUR SALES REP   - R: DATA SOURCE CURRENTLY UNAVAILABLE   - S: DATA SOURCE CURRENTLY UNAVAILABLE   - T: REQUESTED PRODUCT UNAVAILABLE, CONTACT SALES REP   - U: UNABLE TO ACCESS DATA SOURCE   - V: UNABLE TO ACCESS DATA SOURCE   - W: DATA SOURCE IS TEMPORARILY OUT OF SERVICE   - X: DATA SOURCE IS TEMPORARILY OUT OF SERVICE   - Y: REQUIRED DATA NOT PRESENT   - Z: REQUIRED DATA NOT PRESENT 04  Reject Codes corresponding to Model Number 05271   - A1: MODEL DELIVERY NOT AVAILABLE: FILE UNDER REVIEW   - C1: MODEL DELIVERY NOT AVAILABLE: NO QUALIFYING ACCOUNTS PRESENT. NO HIT   - L0: MODEL DELIVERY NOT AVAILABLE: SUBJECT DECEASED   - R0: MODEL DELIVERY NOT AVAILABLE: INSUFFICIENT INFORMATION TO SCORE  Reject Codes corresponding to Model Number 05274   - 01: DECEASED ON CREDIT, NCTUE AND LEXISNEXIS   - 02: DECEASED ON CREDIT AND NCTUE   - 03: DECEASED ON CREDIT AND LEXISNEXIS   - 04: DECEASED ON NCTUE AND LEXISNEXIS   - 05: DECEASED ON CREDIT   - 06: DECEASED ON NCTUE   - 07: DECEASED ON LEXISNEXIS   - 08: FILE IN REVIEW-CREDIT,FRAUD-NCTUE,IDENTITY THEFT -LEXISNEXIS   - 09: FILE IN REVIEW-CREDIT,FRAUD-NCTUE   - 10: FILE IN REVIEW-CREDIT,IDENTITY THEFT -LEXISNEXIS   - 11: FRAUD-NCTUE,IDENTITY THEFT -LEXISNEXIS   - 12: FILE IN REVIEW-CREDIT   - 13: FRAUD-NCTUE   - 14: IDENTITY THEFT -LEXISNEXIS   - 15: NO HIT-CREDIT,NO HIT-NCTUE,NO HIT-LEXISNEXIS   - 16: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,NO HIT-LEXISNEXIS   - 17: NO HIT-CREDIT,INQUIRY ONLY-NCTUE,NO HIT-LEXISNEXIS   - 18: INADEQUATE INFO-CREDIT,INQUIRY ONLY-NCTUE,NO HIT-LEXISNEXIS   - 19: NO HIT-CREDIT,BANKRUPTCY-NCTUE,NO HIT-LEXISNEXIS   - 20: INADEQUATE INFO-CREDIT,BANKRUPTCY-NCTUE,NO HIT-LEXISNEXIS   - 21: NO HIT-CREDIT,NO HIT-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 22: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 23: NO HIT-CREDIT,INQ ONLY-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 24: INADEQUATE INFO-CREDIT,INQ ONLY-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 25: NO HIT-CREDIT,BKP-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 26: INADEQUATE INFO-CREDIT,BKP-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 27: NO HIT-CREDIT,NO HIT-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 28: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 29: NO HIT-CREDIT,INQ ONLY-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 30: INADEQUATE INFO-CREDIT,INQ ONLY-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 31: NO HIT-CREDIT,BKP-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 32: INADEQUATE INFO-CREDIT,BKP-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 33: NO HIT-CREDIT,NO HIT-NCTUE,SECURITY ALERT-LEXISNEXIS   - 34: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,SECURITY ALERT-LEXISNEXIS   - 35: NO HIT-CREDIT,INQ ONLY-NCTUE,SECURITY ALERT-LEXISNEXIS   - 36: INADEQUATE INFO-CREDIT,INQ ONLY-NCTUE,SECURITY ALERT-LEXISNEXIS   - 37: NO HIT-CREDIT,BKP-NCTUE,SECURITY ALERT-LEXISNEXIS   - 38: INADEQUATE INFO-CREDIT,BKP-NCTUE,SECURITY ALERT-LEXISNEXIS   - 39: NO HIT-CREDIT,NO HIT-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 40: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 41: NO HIT-CREDIT,INQ ONLY-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 42: INADEQUATE INFO-CREDIT,INQ ONLY-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 43: NO HIT-CREDIT,BKP-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 44: INADEQUATE INFO-CREDIT,BKP-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 45: NO HIT-CREDIT,NO HIT-NCTUE,INADEQUATE INFO-LEXISNEXIS   - 46: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,INADEQUATE INFO-LEXISNEXIS   - 47: NO HIT-CREDIT,INQ ONLY-NCTUE,INADEQUATE INFO-LEXISNEXIS   - 48: INADEQUATE INFO-CREDIT,INQ ONLY-NCTUE,INADEQUATE INFO-LEXISNEXIS   - 49: NO HIT-CREDIT,BKP-NCTUE,INADEQUATE INFO-LEXISNEXIS   - 50: INADEQUATE INFO-CREDIT,BKP-NCTUE,INADEQUATE INFO-LEXISNEXIS   - A1: **NOT AVAILABLE, FILE UNDER REVIEW   - C1: MODEL DELIVERY IS NOT AVAILABLE: NO QUALIFYING ACCOUNTS PRESENT. NO HIT   - C2: MODEL DELIVERY UNAVAILABLE, FILE CONDITION NOT MET   - C3: ADDRESS FORMATTED INCORRECTLY FOR ALTERNATE DATA SOURCE   - C4: NAME FORMATTED INCORRECTLY FOR ALTERNATE DATA SOURCE   - C5: BUSINESS NAME INVALID   - C6: XML FORMAT ERROR BETWEEN INTERNAL DATABASES    - C7: INVALID ALTERNATE DATA SOURCE MBR NBR ON DATABASE SERVER   - C8: ALTERNATE DATA SOURCE MBR NBR NOT AUTHORIZED ON DATABASE   - C9: INVALID SECURITY CODE FOR ALTERNATE DATA SRCE ON DATABASE   - CC: NOT AUTHORIZED TO RECEIVE INSIGHT SCORES   - CD: INVALID PRODUCT CONFIGURATION FOR INSIGHT SCORES   - CE: ALTERNATE DATA SOURCE ERROR - MAX OF 4 ADDRESSES ALLOWED   - CF: INVALID ONLINE MATCH CONFIGURATION FOR INSIGHT SCORE   - CG: ALTERNATE DATA SRC ERROR - NO CONSUMER SRCH FIELDS PROVIDED   - CH: MISSING REQUIRED FIELDS FOR INTERNAL DATABASE SEARCH   - CJ: INTERNAL DATABASE ERROR - PLEASE TRY LATER OR CONTACT EFX   - CK: INTERNAL MDB LAYOUT ERROR   - CL: RETRY TRANSACTION TRANSIENT ERROR   - CQ: INTERNAL PROCESSING ERROR PLEASE TRY LATER OR CONTACT EFX   - CS: MODEL SERVER ERROR PLEASE TRY AGAIN LATER OR CONTACT EFX   - CT: INTERNAL CUSTOMER ID ERROR   - CX: HTTP ERROR RETURNED TO OMS FROM NC+/CONNEXUS   - CZ: RETRY TRANSACTION - IF ERROR CONTINUES, CONTACT EQUIFAX   - L0: MODEL DELIVERY IS NOT AVAILABLE: SUBJECT DECEASED   - R0: MODEL DELIVERY IS NOT AVAILABLE: INSUFFICIENT INFORMATION TO SCORE  Reject Codes corresponding to Model Number 05285   - A1: **NOT AVAILABLE, FILE UNDER REVIEW   - B0: INSUFFICIENT INFORMATION TO SCORE   - C1: MODEL DELIVERY IS NOT AVAILABLE: NO QUALIFYING ACCOUNTS PRESENT. NO HIT   - L0: MODEL DELIVERY IS NOT AVAILABLE: SUBJECT DECEASED   - N1: INQUIRY ONLY FILE   - R0: MODEL DELIVERY IS NOT AVAILABLE: INSUFFICIENT INFORMATION TO SCORE   - X7: MODEL DELIVERY IS TEMPORARILY UNAVAILABLE  Reject Codes corresponding to Model Number 05264   - 01: DECEASED ON CREDIT, NCTUE AND LEXISNEXIS   - 02: DECEASED ON CREDIT AND NCTUE   - 03: DECEASED ON CREDIT AND LEXISNEXIS   - 04: DECEASED ON NCTUE AND LEXISNEXIS   - 05: DECEASED ON CREDIT   - 06: DECEASED ON NCTUE   - 07: DECEASED ON LEXISNEXIS   - 08: FILE IN REVIEW-CREDIT,FRAUD-NCTUE,IDENTITY THEFT-LEXISNEXIS   - 09: FILE IN REVIEW-CREDIT,FRAUD-NCTUE   - 10: FILE IN REVIEW-CREDIT,IDENTITY THEFT -LEXISNEXIS   - 11: FRAUD-NCTUE,IDENTITY THEFT -LEXISNEXIS   - 12: FILE IN REVIEW-CREDIT   - 13: FRAUD-NCTUE   - 14: IDENTITY THEFT -LEXISNEXIS   - 15: NO HIT-CREDIT,NO HIT-NCTUE,NO HIT-LEXISNEXIS   - 16: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,NO HIT-LEXISNEXIS   - 17: NO HIT-CREDIT,INQUIRY ONLY-NCTUE,NO HIT-LEXISNEXIS   - 18: INADEQUATE INFO-CREDIT,INQUIRY ONLY-NCTUE,NO HIT-LEXISNEXIS   - 19: NO HIT-CREDIT,BANKRUPTCY-NCTUE,NO HIT-LEXISNEXIS   - 20: INADEQUATE INFO-CREDIT,BANKRUPTCY-NCTUE,NO HIT-LEXISNEXIS   - 21: NO HIT-CREDIT,NO HIT-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 22: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 23: NO HIT-CREDIT,INQ ONLY-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 24: INADEQUATE INFO-CREDIT,INQ ONLY-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 25: NO HIT-CREDIT,BKP-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 26: INADEQUATE INFO-CREDIT,BKP-NCTUE,FAIL CA VERIFY-LEXISNEXIS   - 27: NO HIT-CREDIT,NO HIT-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 28: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 29: NO HIT-CREDIT,INQ ONLY-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 30: INADEQUATE INFO-CREDIT,INQ ONLY-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 31: NO HIT-CREDIT,BKP-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 32: INADEQUATE INFO-CREDIT,BKP-NCTUE,SECURITY FREEZE-LEXISNEXIS   - 33: NO HIT-CREDIT,NO HIT-NCTUE,SECURITY ALERT-LEXISNEXIS   - 34: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,SECURITY ALERT-LEXISNEXIS   - 35: NO HIT-CREDIT,INQ ONLY-NCTUE,SECURITY ALERT-LEXISNEXIS   - 36: INADEQUATE INFO-CREDIT,INQ ONLY-NCTUE,SECURITY ALERT-LEXISNEXIS   - 37: NO HIT-CREDIT,BKP-NCTUE,SECURITY ALERT-LEXISNEXIS   - 38: INADEQUATE INFO-CREDIT,BKP-NCTUE,SECURITY ALERT-LEXISNEXIS   - 39: NO HIT-CREDIT,NO HIT-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 40: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 41: NO HIT-CREDIT,INQ ONLY-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 42: INADEQUATE INFO-CREDIT,INQ ONLY-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 43: NO HIT-CREDIT,BKP-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 44: INADEQUATE INFO-CREDIT,BKP-NCTUE,DISPUTE ON FILE-LEXISNEXIS   - 45: NO HIT-CREDIT,NO HIT-NCTUE,INADEQUATE INFO-LEXISNEXIS   - 46: INADEQUATE INFO-CREDIT,NO HIT-NCTUE,INADEQUATE INFO-LEXISNEXIS   - 47: NO HIT-CREDIT,INQ ONLY-NCTUE,INADEQUATE INFO-LEXISNEXIS   - 48: INADEQUATE INFO-CREDIT,INQ ONLY-NCTUE,INADEQUATE INFO-LEXISNEXIS   - 49: NO HIT-CREDIT,BKP-NCTUE,INADEQUATE INFO-LEXISNEXIS   - 50: INADEQUATE INFO-CREDIT,BKP-NCTUE,INADEQUATE INFO-LEXISNEXIS   - A1: **NOT AVAILABLE, FILE UNDER REVIEW   - C1: NOT AVAILABLE: NO QUALIFYING ACCOUNTS PRESENT. NO HIT   - C6: XML FORMAT ERROR BETWEEN INTERNAL DATABASES   - C7: INVALID ALTERNATE DATA SOURCE MBR NBR ON DATABASE SERVER   - C8: ALTERNATE DATA SOURCE MBR NBR NOT AUTHORIZED ON DATABASE   - C9: INVALID SECURITY CODE FOR ALTERNATE DATA SRCE ON DATABASE   - CC: NOT AUTHORIZED TO RECEIVE INSIGHT SCORES   - CD: INVALID PRODUCT CONFIGURATION FOR INSIGHT SCORES   - CE: ALTERNATE DATA SOURCE ERROR - MAX OF 4 ADDRESSES ALLOWED   - CF: INVALID ONLINE MATCH CONFIGURATION FOR INSIGHT SCORE   - CG: ALTERNATE DATA SRC ERROR-NO CONSUMER SRCH FIELDS PROVIDED   - CH: MISSING REQUIRED FIELDS FOR INTERNAL DATABASE SEARCH   - CJ: INTERNAL DATABASE ERROR - PLEASE TRY LATER OR CONTACT EFX   - CK: INTERNAL MDS LAYOUT ERROR   - CL: RETRY TRANSACTION TRANSIENT ERROR   - CQ: INTERNAL PROCESSING ERROR PLEASE TRY LATER OR CONTACT EFX   - CS: MODEL SERVER ERROR PLEASE TRY AGAIN LATER OR CONTACT EFX   - CX: HTTP ERROR RETURNED TO OMS FROM NC+/CONNEXUS   - CZ: RETRY TRANSACTION . IF ERROR CONTINUES, CONTACT EQUIFAX   - L0: SUBJECT DECEASED INDICATED   - N1: INQUIRY ONLY FILE   - R0: MODEL DELIVERY IS NOT AVAILABLE: INSUFFICIENT INFORMATION TO SCORE   - X1: MODEL DELIVERY IS TEMPORARILY UNAVAILABLE: PROGRAM NOT DEFINED OR IN THE SYSTEM   - X3: MODEL DELIVERY IS TEMPORARILY UNAVAILABLE: TOO MANY INQUIRIES ON FILE   - X5: MODEL DELIVERY IS TEMPORARILY UNAVAILABLE: MODEL NEEDS INPUT FIELDS AND NONE WERE PROVIDED   - X7: MODEL DELIVERY IS TEMPORARILY UNAVAILABLE: FILE CANNOT BE SCORED  Reject Codes corresponding to Model Number 05184   - C1: MODEL DELIVERY UNAVAILABLE, SCORE RANGE NOT MET   - C2: MODEL DELIVERY UNAVAILABLE, FILE CONDITION NOT MET   - C3: ADDRESS FORMATTED INCORRECTLY FOR ALTERNATE DATA SOURCE   - C4: NAME FORMATTED INCORRECTLY FOR ALTERNATE DATA SOURCE   - C5: BUSINESS NAME INVALID   - C6: XML FORMAT ERROR BETWEEN INTERNAL DATABASES   - C7: INVALID ALTERNATE DATA SOURCE MBR NBR ON DATABASE SERVER   - C8: ALTERNATE DATA SOURCE MBR NBR NOT AUTHORIZED ON DATABASE   - C9: INVALID SECURITY CODE FOR ALTERNATE DATA SRCE ON DATABASE   - CC: NOT AUTHORIZED TO RECEIVE INSIGHT SCORES   - CD: INVALID PRODUCT CONFIGURATION FOR INSIGHT SCORES   - CE: ALTERNATE DATA SOURCE ERROR - MAX OF 4 ADDRESSES ALLOWED   - CF: INVALID ONLINE MATCH CONFIGURATION FOR INSIGHT SCORE   - CG: ALTERNATE DATA SRC ERROR-NO CONSUMER SRCH FIELDS PROVIDED   - CH: MISSING REQUIRED FIELDS FOR INTERNAL DATABASE SEARCH   - CJ: INTERNAL DATABASE ERROR - PLEASE TRY LATER OR CONTACT EFX   - CK: INTERNAL MDB LAYOUT ERROR   - CL: RETRY TRANSACTION TRANSIENT ERROR   - CQ: INTERNAL PROCESSING ERROR PLEASE TRY LATER OR CONTACT EFX   - CS: MODEL SERVER ERROR PLEASE TRY AGAIN LATER OR CONTACT EFX   - CT: INTERNAL CUSTOMER ID ERROR   - CZ: RETRY TRANSACTION - IF ERROR CONTINUES, CONTACT EQUIFAX
    consumerCreditReportRejectsDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportRejects
instance A.FromJSON ConsumerCreditReportRejects where
  parseJSON = A.withObject "ConsumerCreditReportRejects" $ \o ->
    ConsumerCreditReportRejects
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportRejects
instance A.ToJSON ConsumerCreditReportRejects where
  toJSON ConsumerCreditReportRejects {..} =
    A.object
      [ "code" .= consumerCreditReportRejectsCode,
        "description" .= consumerCreditReportRejectsDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportRejects' (by applying it's required fields, if any)
mkConsumerCreditReportRejects ::
  ConsumerCreditReportRejects
mkConsumerCreditReportRejects =
  ConsumerCreditReportRejects
    { consumerCreditReportRejectsCode = Nothing,
      consumerCreditReportRejectsDescription = Nothing
    }

-- ** ConsumerCreditReportReturnCode1

-- | ConsumerCreditReportReturnCode1
-- Return code 1
data ConsumerCreditReportReturnCode1 = ConsumerCreditReportReturnCode1
  { -- | "code" - Code value
    consumerCreditReportReturnCode1Code :: !(Maybe Text),
    -- | "description" - Description for the given code
    consumerCreditReportReturnCode1Description :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportReturnCode1
instance A.FromJSON ConsumerCreditReportReturnCode1 where
  parseJSON = A.withObject "ConsumerCreditReportReturnCode1" $ \o ->
    ConsumerCreditReportReturnCode1
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportReturnCode1
instance A.ToJSON ConsumerCreditReportReturnCode1 where
  toJSON ConsumerCreditReportReturnCode1 {..} =
    A.object
      [ "code" .= consumerCreditReportReturnCode1Code,
        "description" .= consumerCreditReportReturnCode1Description
      ]

-- | Construct a value of type 'ConsumerCreditReportReturnCode1' (by applying it's required fields, if any)
mkConsumerCreditReportReturnCode1 ::
  ConsumerCreditReportReturnCode1
mkConsumerCreditReportReturnCode1 =
  ConsumerCreditReportReturnCode1
    { consumerCreditReportReturnCode1Code = Nothing,
      consumerCreditReportReturnCode1Description = Nothing
    }

-- ** ConsumerCreditReportReturnCode2

-- | ConsumerCreditReportReturnCode2
-- Return code 2
data ConsumerCreditReportReturnCode2 = ConsumerCreditReportReturnCode2
  { -- | "code" - Code value
    consumerCreditReportReturnCode2Code :: !(Maybe Text),
    -- | "description" - Description for the given code
    consumerCreditReportReturnCode2Description :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportReturnCode2
instance A.FromJSON ConsumerCreditReportReturnCode2 where
  parseJSON = A.withObject "ConsumerCreditReportReturnCode2" $ \o ->
    ConsumerCreditReportReturnCode2
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportReturnCode2
instance A.ToJSON ConsumerCreditReportReturnCode2 where
  toJSON ConsumerCreditReportReturnCode2 {..} =
    A.object
      [ "code" .= consumerCreditReportReturnCode2Code,
        "description" .= consumerCreditReportReturnCode2Description
      ]

-- | Construct a value of type 'ConsumerCreditReportReturnCode2' (by applying it's required fields, if any)
mkConsumerCreditReportReturnCode2 ::
  ConsumerCreditReportReturnCode2
mkConsumerCreditReportReturnCode2 =
  ConsumerCreditReportReturnCode2
    { consumerCreditReportReturnCode2Code = Nothing,
      consumerCreditReportReturnCode2Description = Nothing
    }

-- ** ConsumerCreditReportReturnCode3

-- | ConsumerCreditReportReturnCode3
-- Return code 3
data ConsumerCreditReportReturnCode3 = ConsumerCreditReportReturnCode3
  { -- | "code" - Code value
    consumerCreditReportReturnCode3Code :: !(Maybe Text),
    -- | "description" - Description for the given code
    consumerCreditReportReturnCode3Description :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportReturnCode3
instance A.FromJSON ConsumerCreditReportReturnCode3 where
  parseJSON = A.withObject "ConsumerCreditReportReturnCode3" $ \o ->
    ConsumerCreditReportReturnCode3
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportReturnCode3
instance A.ToJSON ConsumerCreditReportReturnCode3 where
  toJSON ConsumerCreditReportReturnCode3 {..} =
    A.object
      [ "code" .= consumerCreditReportReturnCode3Code,
        "description" .= consumerCreditReportReturnCode3Description
      ]

-- | Construct a value of type 'ConsumerCreditReportReturnCode3' (by applying it's required fields, if any)
mkConsumerCreditReportReturnCode3 ::
  ConsumerCreditReportReturnCode3
mkConsumerCreditReportReturnCode3 =
  ConsumerCreditReportReturnCode3
    { consumerCreditReportReturnCode3Code = Nothing,
      consumerCreditReportReturnCode3Description = Nothing
    }

-- ** ConsumerCreditReportReturnCode4

-- | ConsumerCreditReportReturnCode4
-- Return code 4
data ConsumerCreditReportReturnCode4 = ConsumerCreditReportReturnCode4
  { -- | "code" - Code value
    consumerCreditReportReturnCode4Code :: !(Maybe Text),
    -- | "description" - Description for the given code
    consumerCreditReportReturnCode4Description :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportReturnCode4
instance A.FromJSON ConsumerCreditReportReturnCode4 where
  parseJSON = A.withObject "ConsumerCreditReportReturnCode4" $ \o ->
    ConsumerCreditReportReturnCode4
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportReturnCode4
instance A.ToJSON ConsumerCreditReportReturnCode4 where
  toJSON ConsumerCreditReportReturnCode4 {..} =
    A.object
      [ "code" .= consumerCreditReportReturnCode4Code,
        "description" .= consumerCreditReportReturnCode4Description
      ]

-- | Construct a value of type 'ConsumerCreditReportReturnCode4' (by applying it's required fields, if any)
mkConsumerCreditReportReturnCode4 ::
  ConsumerCreditReportReturnCode4
mkConsumerCreditReportReturnCode4 =
  ConsumerCreditReportReturnCode4
    { consumerCreditReportReturnCode4Code = Nothing,
      consumerCreditReportReturnCode4Description = Nothing
    }

-- ** ConsumerCreditReportRiskBasedPricingOrModel

-- | ConsumerCreditReportRiskBasedPricingOrModel
data ConsumerCreditReportRiskBasedPricingOrModel = ConsumerCreditReportRiskBasedPricingOrModel
  { -- | "percentage" - Percentage of the U.S. population that the Consumers Score for this model scores
    consumerCreditReportRiskBasedPricingOrModelPercentage :: !(Maybe Text),
    -- | "lowRange" - Dodd Frank Wall Street Lowest Score available on the model requested
    consumerCreditReportRiskBasedPricingOrModelLowRange :: !(Maybe Text),
    -- | "highRange" - Dodd Frank Wall Street Highest Score available on the model requested
    consumerCreditReportRiskBasedPricingOrModelHighRange :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportRiskBasedPricingOrModel
instance A.FromJSON ConsumerCreditReportRiskBasedPricingOrModel where
  parseJSON = A.withObject "ConsumerCreditReportRiskBasedPricingOrModel" $ \o ->
    ConsumerCreditReportRiskBasedPricingOrModel
      <$> (o .:? "percentage")
      <*> (o .:? "lowRange")
      <*> (o .:? "highRange")

-- | ToJSON ConsumerCreditReportRiskBasedPricingOrModel
instance A.ToJSON ConsumerCreditReportRiskBasedPricingOrModel where
  toJSON ConsumerCreditReportRiskBasedPricingOrModel {..} =
    A.object
      [ "percentage" .= consumerCreditReportRiskBasedPricingOrModelPercentage,
        "lowRange" .= consumerCreditReportRiskBasedPricingOrModelLowRange,
        "highRange" .= consumerCreditReportRiskBasedPricingOrModelHighRange
      ]

-- | Construct a value of type 'ConsumerCreditReportRiskBasedPricingOrModel' (by applying it's required fields, if any)
mkConsumerCreditReportRiskBasedPricingOrModel ::
  ConsumerCreditReportRiskBasedPricingOrModel
mkConsumerCreditReportRiskBasedPricingOrModel =
  ConsumerCreditReportRiskBasedPricingOrModel
    { consumerCreditReportRiskBasedPricingOrModelPercentage = Nothing,
      consumerCreditReportRiskBasedPricingOrModelLowRange = Nothing,
      consumerCreditReportRiskBasedPricingOrModelHighRange = Nothing
    }

-- ** ConsumerCreditReportScoreNumberOrMarketMaxIndustryCode

-- | ConsumerCreditReportScoreNumberOrMarketMaxIndustryCode
data ConsumerCreditReportScoreNumberOrMarketMaxIndustryCode = ConsumerCreditReportScoreNumberOrMarketMaxIndustryCode
  { -- | "code"
    consumerCreditReportScoreNumberOrMarketMaxIndustryCodeCode :: !(Maybe Text),
    -- | "description" - Either the number of model segments being returned or MarketMax 4.0 industry Code
    consumerCreditReportScoreNumberOrMarketMaxIndustryCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportScoreNumberOrMarketMaxIndustryCode
instance A.FromJSON ConsumerCreditReportScoreNumberOrMarketMaxIndustryCode where
  parseJSON = A.withObject "ConsumerCreditReportScoreNumberOrMarketMaxIndustryCode" $ \o ->
    ConsumerCreditReportScoreNumberOrMarketMaxIndustryCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportScoreNumberOrMarketMaxIndustryCode
instance A.ToJSON ConsumerCreditReportScoreNumberOrMarketMaxIndustryCode where
  toJSON ConsumerCreditReportScoreNumberOrMarketMaxIndustryCode {..} =
    A.object
      [ "code" .= consumerCreditReportScoreNumberOrMarketMaxIndustryCodeCode,
        "description" .= consumerCreditReportScoreNumberOrMarketMaxIndustryCodeDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportScoreNumberOrMarketMaxIndustryCode' (by applying it's required fields, if any)
mkConsumerCreditReportScoreNumberOrMarketMaxIndustryCode ::
  ConsumerCreditReportScoreNumberOrMarketMaxIndustryCode
mkConsumerCreditReportScoreNumberOrMarketMaxIndustryCode =
  ConsumerCreditReportScoreNumberOrMarketMaxIndustryCode
    { consumerCreditReportScoreNumberOrMarketMaxIndustryCodeCode = Nothing,
      consumerCreditReportScoreNumberOrMarketMaxIndustryCodeDescription = Nothing
    }

-- ** ConsumerCreditReportSubjectName

-- | ConsumerCreditReportSubjectName
-- Subject's full name
data ConsumerCreditReportSubjectName = ConsumerCreditReportSubjectName
  { -- | "firstName" - Subject&#39;s first name
    consumerCreditReportSubjectNameFirstName :: !(Maybe Text),
    -- | "lastName" - Subject&#39;s last name
    consumerCreditReportSubjectNameLastName :: !(Maybe Text),
    -- | "middleName" - Subject&#39;s middle name
    consumerCreditReportSubjectNameMiddleName :: !(Maybe Text),
    -- | "suffix" - Subject&#39;s suffix name
    consumerCreditReportSubjectNameSuffix :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportSubjectName
instance A.FromJSON ConsumerCreditReportSubjectName where
  parseJSON = A.withObject "ConsumerCreditReportSubjectName" $ \o ->
    ConsumerCreditReportSubjectName
      <$> (o .:? "firstName")
      <*> (o .:? "lastName")
      <*> (o .:? "middleName")
      <*> (o .:? "suffix")

-- | ToJSON ConsumerCreditReportSubjectName
instance A.ToJSON ConsumerCreditReportSubjectName where
  toJSON ConsumerCreditReportSubjectName {..} =
    A.object
      [ "firstName" .= consumerCreditReportSubjectNameFirstName,
        "lastName" .= consumerCreditReportSubjectNameLastName,
        "middleName" .= consumerCreditReportSubjectNameMiddleName,
        "suffix" .= consumerCreditReportSubjectNameSuffix
      ]

-- | Construct a value of type 'ConsumerCreditReportSubjectName' (by applying it's required fields, if any)
mkConsumerCreditReportSubjectName ::
  ConsumerCreditReportSubjectName
mkConsumerCreditReportSubjectName =
  ConsumerCreditReportSubjectName
    { consumerCreditReportSubjectNameFirstName = Nothing,
      consumerCreditReportSubjectNameLastName = Nothing,
      consumerCreditReportSubjectNameMiddleName = Nothing,
      consumerCreditReportSubjectNameSuffix = Nothing
    }

-- ** ConsumerCreditReportTelephoneNumberType

-- | ConsumerCreditReportTelephoneNumberType
-- Types of telephone numbers
data ConsumerCreditReportTelephoneNumberType = ConsumerCreditReportTelephoneNumberType
  { -- | "code" - Code value
    consumerCreditReportTelephoneNumberTypeCode :: !(Maybe Text),
    -- | "description" -  - C: Cellular - D: Daytime - E: Evening - P: Pager
    consumerCreditReportTelephoneNumberTypeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportTelephoneNumberType
instance A.FromJSON ConsumerCreditReportTelephoneNumberType where
  parseJSON = A.withObject "ConsumerCreditReportTelephoneNumberType" $ \o ->
    ConsumerCreditReportTelephoneNumberType
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportTelephoneNumberType
instance A.ToJSON ConsumerCreditReportTelephoneNumberType where
  toJSON ConsumerCreditReportTelephoneNumberType {..} =
    A.object
      [ "code" .= consumerCreditReportTelephoneNumberTypeCode,
        "description" .= consumerCreditReportTelephoneNumberTypeDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportTelephoneNumberType' (by applying it's required fields, if any)
mkConsumerCreditReportTelephoneNumberType ::
  ConsumerCreditReportTelephoneNumberType
mkConsumerCreditReportTelephoneNumberType =
  ConsumerCreditReportTelephoneNumberType
    { consumerCreditReportTelephoneNumberTypeCode = Nothing,
      consumerCreditReportTelephoneNumberTypeDescription = Nothing
    }

-- ** ConsumerCreditReportTelephoneNumbers

-- | ConsumerCreditReportTelephoneNumbers
-- Contact's telephone information
data ConsumerCreditReportTelephoneNumbers = ConsumerCreditReportTelephoneNumbers
  { -- | "telephoneNumberType"
    consumerCreditReportTelephoneNumbersTelephoneNumberType :: !(Maybe ConsumerCreditReportTelephoneNumberType),
    -- | "countryCode" - the telephone&#39;s country code
    consumerCreditReportTelephoneNumbersCountryCode :: !(Maybe Text),
    -- | "telephoneNumber" - Telephone number including a valid area code
    consumerCreditReportTelephoneNumbersTelephoneNumber :: !(Maybe Text),
    -- | "extension" - Telephone extension if it&#39;s present
    consumerCreditReportTelephoneNumbersExtension :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportTelephoneNumbers
instance A.FromJSON ConsumerCreditReportTelephoneNumbers where
  parseJSON = A.withObject "ConsumerCreditReportTelephoneNumbers" $ \o ->
    ConsumerCreditReportTelephoneNumbers
      <$> (o .:? "telephoneNumberType")
      <*> (o .:? "countryCode")
      <*> (o .:? "telephoneNumber")
      <*> (o .:? "extension")

-- | ToJSON ConsumerCreditReportTelephoneNumbers
instance A.ToJSON ConsumerCreditReportTelephoneNumbers where
  toJSON ConsumerCreditReportTelephoneNumbers {..} =
    A.object
      [ "telephoneNumberType" .= consumerCreditReportTelephoneNumbersTelephoneNumberType,
        "countryCode" .= consumerCreditReportTelephoneNumbersCountryCode,
        "telephoneNumber" .= consumerCreditReportTelephoneNumbersTelephoneNumber,
        "extension" .= consumerCreditReportTelephoneNumbersExtension
      ]

-- | Construct a value of type 'ConsumerCreditReportTelephoneNumbers' (by applying it's required fields, if any)
mkConsumerCreditReportTelephoneNumbers ::
  ConsumerCreditReportTelephoneNumbers
mkConsumerCreditReportTelephoneNumbers =
  ConsumerCreditReportTelephoneNumbers
    { consumerCreditReportTelephoneNumbersTelephoneNumberType = Nothing,
      consumerCreditReportTelephoneNumbersCountryCode = Nothing,
      consumerCreditReportTelephoneNumbersTelephoneNumber = Nothing,
      consumerCreditReportTelephoneNumbersExtension = Nothing
    }

-- ** ConsumerCreditReportTypeCode

-- | ConsumerCreditReportTypeCode
-- The type of identification
data ConsumerCreditReportTypeCode = ConsumerCreditReportTypeCode
  { -- | "code" - Code value
    consumerCreditReportTypeCodeCode :: !(Maybe Text),
    -- | "description" -  - C: S.I.N. - S:  SSN - T: TAX ID
    consumerCreditReportTypeCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportTypeCode
instance A.FromJSON ConsumerCreditReportTypeCode where
  parseJSON = A.withObject "ConsumerCreditReportTypeCode" $ \o ->
    ConsumerCreditReportTypeCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportTypeCode
instance A.ToJSON ConsumerCreditReportTypeCode where
  toJSON ConsumerCreditReportTypeCode {..} =
    A.object
      [ "code" .= consumerCreditReportTypeCodeCode,
        "description" .= consumerCreditReportTypeCodeDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportTypeCode' (by applying it's required fields, if any)
mkConsumerCreditReportTypeCode ::
  ConsumerCreditReportTypeCode
mkConsumerCreditReportTypeCode =
  ConsumerCreditReportTypeCode
    { consumerCreditReportTypeCodeCode = Nothing,
      consumerCreditReportTypeCodeDescription = Nothing
    }

-- ** ConsumerCreditReportTypeOfAddress

-- | ConsumerCreditReportTypeOfAddress
-- Type of address
data ConsumerCreditReportTypeOfAddress = ConsumerCreditReportTypeOfAddress
  { -- | "code" - Code value
    consumerCreditReportTypeOfAddressCode :: !(Maybe Text),
    -- | "description" - Description for the given code
    consumerCreditReportTypeOfAddressDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON ConsumerCreditReportTypeOfAddress
instance A.FromJSON ConsumerCreditReportTypeOfAddress where
  parseJSON = A.withObject "ConsumerCreditReportTypeOfAddress" $ \o ->
    ConsumerCreditReportTypeOfAddress
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON ConsumerCreditReportTypeOfAddress
instance A.ToJSON ConsumerCreditReportTypeOfAddress where
  toJSON ConsumerCreditReportTypeOfAddress {..} =
    A.object
      [ "code" .= consumerCreditReportTypeOfAddressCode,
        "description" .= consumerCreditReportTypeOfAddressDescription
      ]

-- | Construct a value of type 'ConsumerCreditReportTypeOfAddress' (by applying it's required fields, if any)
mkConsumerCreditReportTypeOfAddress ::
  ConsumerCreditReportTypeOfAddress
mkConsumerCreditReportTypeOfAddress =
  ConsumerCreditReportTypeOfAddress
    { consumerCreditReportTypeOfAddressCode = Nothing,
      consumerCreditReportTypeOfAddressDescription = Nothing
    }

-- ** CreditReportRequest

-- | CreditReportRequest
data CreditReportRequest = CreditReportRequest
  { -- | /Required/ "consumers"
    creditReportRequestConsumers :: !(CreditReportRequestConsumers),
    -- | "externalDataSources"
    creditReportRequestExternalDataSources :: !(Maybe CreditReportRequestExternalDataSources),
    -- | "customerReferenceIdentifier" - Unique identifier provided by customer
    creditReportRequestCustomerReferenceIdentifier :: !(Maybe Text),
    -- | /Required/ "customerConfiguration"
    creditReportRequestCustomerConfiguration :: !(CreditReportRequestCustomerConfiguration)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CreditReportRequest
instance A.FromJSON CreditReportRequest where
  parseJSON = A.withObject "CreditReportRequest" $ \o ->
    CreditReportRequest
      <$> (o .: "consumers")
      <*> (o .:? "externalDataSources")
      <*> (o .:? "customerReferenceIdentifier")
      <*> (o .: "customerConfiguration")

-- | ToJSON CreditReportRequest
instance A.ToJSON CreditReportRequest where
  toJSON CreditReportRequest {..} =
    A.object
      [ "consumers" .= creditReportRequestConsumers,
        "externalDataSources" .= creditReportRequestExternalDataSources,
        "customerReferenceIdentifier" .= creditReportRequestCustomerReferenceIdentifier,
        "customerConfiguration" .= creditReportRequestCustomerConfiguration
      ]

-- | Construct a value of type 'CreditReportRequest' (by applying it's required fields, if any)
mkCreditReportRequest ::
  -- | 'creditReportRequestConsumers'
  CreditReportRequestConsumers ->
  -- | 'creditReportRequestCustomerConfiguration'
  CreditReportRequestCustomerConfiguration ->
  CreditReportRequest
mkCreditReportRequest creditReportRequestConsumers creditReportRequestCustomerConfiguration =
  CreditReportRequest
    { creditReportRequestConsumers,
      creditReportRequestExternalDataSources = Nothing,
      creditReportRequestCustomerReferenceIdentifier = Nothing,
      creditReportRequestCustomerConfiguration
    }

-- ** CreditReportRequestConsumers

-- | CreditReportRequestConsumers
data CreditReportRequestConsumers = CreditReportRequestConsumers
  { -- | /Required/ "name" - Consumer name
    creditReportRequestConsumersName :: !([CreditReportRequestConsumersName]),
    -- | "socialNum" - Social Security Number
    creditReportRequestConsumersSocialNum :: !(Maybe [CreditReportRequestConsumersSocialNum]),
    -- | "dateOfBirth" - Date of Birth
    creditReportRequestConsumersDateOfBirth :: !(Maybe Date),
    -- | "age" - Age
    creditReportRequestConsumersAge :: !(Maybe Text),
    -- | "addresses" - Address information. A maximum of 2 addresses can be sent per inquiry. If socialNum is not provided, the houseNumber, streetName, city and state are required
    creditReportRequestConsumersAddresses :: !(Maybe [AddressRequest]),
    -- | "phoneNumbers"
    creditReportRequestConsumersPhoneNumbers :: !(Maybe [CreditReportRequestConsumersPhoneNumbers]),
    -- | "employments"
    creditReportRequestConsumersEmployments :: !(Maybe CreditReportRequestConsumersEmployments)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CreditReportRequestConsumers
instance A.FromJSON CreditReportRequestConsumers where
  parseJSON = A.withObject "CreditReportRequestConsumers" $ \o ->
    CreditReportRequestConsumers
      <$> (o .: "name")
      <*> (o .:? "socialNum")
      <*> (o .:? "dateOfBirth")
      <*> (o .:? "age")
      <*> (o .:? "addresses")
      <*> (o .:? "phoneNumbers")
      <*> (o .:? "employments")

-- | ToJSON CreditReportRequestConsumers
instance A.ToJSON CreditReportRequestConsumers where
  toJSON CreditReportRequestConsumers {..} =
    A.object
      [ "name" .= creditReportRequestConsumersName,
        "socialNum" .= creditReportRequestConsumersSocialNum,
        "dateOfBirth" .= creditReportRequestConsumersDateOfBirth,
        "age" .= creditReportRequestConsumersAge,
        "addresses" .= creditReportRequestConsumersAddresses,
        "phoneNumbers" .= creditReportRequestConsumersPhoneNumbers,
        "employments" .= creditReportRequestConsumersEmployments
      ]

-- | Construct a value of type 'CreditReportRequestConsumers' (by applying it's required fields, if any)
mkCreditReportRequestConsumers ::
  -- | 'creditReportRequestConsumersName': Consumer name
  [CreditReportRequestConsumersName] ->
  CreditReportRequestConsumers
mkCreditReportRequestConsumers creditReportRequestConsumersName =
  CreditReportRequestConsumers
    { creditReportRequestConsumersName,
      creditReportRequestConsumersSocialNum = Nothing,
      creditReportRequestConsumersDateOfBirth = Nothing,
      creditReportRequestConsumersAge = Nothing,
      creditReportRequestConsumersAddresses = Nothing,
      creditReportRequestConsumersPhoneNumbers = Nothing,
      creditReportRequestConsumersEmployments = Nothing
    }

-- ** CreditReportRequestConsumersEmployments

-- | CreditReportRequestConsumersEmployments
data CreditReportRequestConsumersEmployments = CreditReportRequestConsumersEmployments
  { -- | "occupation" - Occupation
    creditReportRequestConsumersEmploymentsOccupation :: !(Maybe Text),
    -- | "employerName" - Employer
    creditReportRequestConsumersEmploymentsEmployerName :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CreditReportRequestConsumersEmployments
instance A.FromJSON CreditReportRequestConsumersEmployments where
  parseJSON = A.withObject "CreditReportRequestConsumersEmployments" $ \o ->
    CreditReportRequestConsumersEmployments
      <$> (o .:? "occupation")
      <*> (o .:? "employerName")

-- | ToJSON CreditReportRequestConsumersEmployments
instance A.ToJSON CreditReportRequestConsumersEmployments where
  toJSON CreditReportRequestConsumersEmployments {..} =
    A.object
      [ "occupation" .= creditReportRequestConsumersEmploymentsOccupation,
        "employerName" .= creditReportRequestConsumersEmploymentsEmployerName
      ]

-- | Construct a value of type 'CreditReportRequestConsumersEmployments' (by applying it's required fields, if any)
mkCreditReportRequestConsumersEmployments ::
  CreditReportRequestConsumersEmployments
mkCreditReportRequestConsumersEmployments =
  CreditReportRequestConsumersEmployments
    { creditReportRequestConsumersEmploymentsOccupation = Nothing,
      creditReportRequestConsumersEmploymentsEmployerName = Nothing
    }

-- ** CreditReportRequestConsumersName

-- | CreditReportRequestConsumersName
data CreditReportRequestConsumersName = CreditReportRequestConsumersName
  { -- | /Required/ "identifier" - Record identifier
    creditReportRequestConsumersNameIdentifier :: !(Text),
    -- | /Required/ "firstName" - First name
    creditReportRequestConsumersNameFirstName :: !(Text),
    -- | /Required/ "lastName" - Last name
    creditReportRequestConsumersNameLastName :: !(Text),
    -- | "middleName" - Middle name or initial
    creditReportRequestConsumersNameMiddleName :: !(Maybe Text),
    -- | "suffix" - Suffix
    creditReportRequestConsumersNameSuffix :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CreditReportRequestConsumersName
instance A.FromJSON CreditReportRequestConsumersName where
  parseJSON = A.withObject "CreditReportRequestConsumersName" $ \o ->
    CreditReportRequestConsumersName
      <$> (o .: "identifier")
      <*> (o .: "firstName")
      <*> (o .: "lastName")
      <*> (o .:? "middleName")
      <*> (o .:? "suffix")

-- | ToJSON CreditReportRequestConsumersName
instance A.ToJSON CreditReportRequestConsumersName where
  toJSON CreditReportRequestConsumersName {..} =
    A.object
      [ "identifier" .= creditReportRequestConsumersNameIdentifier,
        "firstName" .= creditReportRequestConsumersNameFirstName,
        "lastName" .= creditReportRequestConsumersNameLastName,
        "middleName" .= creditReportRequestConsumersNameMiddleName,
        "suffix" .= creditReportRequestConsumersNameSuffix
      ]

-- | Construct a value of type 'CreditReportRequestConsumersName' (by applying it's required fields, if any)
mkCreditReportRequestConsumersName ::
  -- | 'creditReportRequestConsumersNameIdentifier': Record identifier
  Text ->
  -- | 'creditReportRequestConsumersNameFirstName': First name
  Text ->
  -- | 'creditReportRequestConsumersNameLastName': Last name
  Text ->
  CreditReportRequestConsumersName
mkCreditReportRequestConsumersName creditReportRequestConsumersNameIdentifier creditReportRequestConsumersNameFirstName creditReportRequestConsumersNameLastName =
  CreditReportRequestConsumersName
    { creditReportRequestConsumersNameIdentifier,
      creditReportRequestConsumersNameFirstName,
      creditReportRequestConsumersNameLastName,
      creditReportRequestConsumersNameMiddleName = Nothing,
      creditReportRequestConsumersNameSuffix = Nothing
    }

-- ** CreditReportRequestConsumersPhoneNumbers

-- | CreditReportRequestConsumersPhoneNumbers
data CreditReportRequestConsumersPhoneNumbers = CreditReportRequestConsumersPhoneNumbers
  { -- | /Required/ "identifier"
    creditReportRequestConsumersPhoneNumbersIdentifier :: !(Text),
    -- | /Required/ "number"
    creditReportRequestConsumersPhoneNumbersNumber :: !(Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CreditReportRequestConsumersPhoneNumbers
instance A.FromJSON CreditReportRequestConsumersPhoneNumbers where
  parseJSON = A.withObject "CreditReportRequestConsumersPhoneNumbers" $ \o ->
    CreditReportRequestConsumersPhoneNumbers
      <$> (o .: "identifier")
      <*> (o .: "number")

-- | ToJSON CreditReportRequestConsumersPhoneNumbers
instance A.ToJSON CreditReportRequestConsumersPhoneNumbers where
  toJSON CreditReportRequestConsumersPhoneNumbers {..} =
    A.object
      [ "identifier" .= creditReportRequestConsumersPhoneNumbersIdentifier,
        "number" .= creditReportRequestConsumersPhoneNumbersNumber
      ]

-- | Construct a value of type 'CreditReportRequestConsumersPhoneNumbers' (by applying it's required fields, if any)
mkCreditReportRequestConsumersPhoneNumbers ::
  -- | 'creditReportRequestConsumersPhoneNumbersIdentifier'
  Text ->
  -- | 'creditReportRequestConsumersPhoneNumbersNumber'
  Text ->
  CreditReportRequestConsumersPhoneNumbers
mkCreditReportRequestConsumersPhoneNumbers creditReportRequestConsumersPhoneNumbersIdentifier creditReportRequestConsumersPhoneNumbersNumber =
  CreditReportRequestConsumersPhoneNumbers
    { creditReportRequestConsumersPhoneNumbersIdentifier,
      creditReportRequestConsumersPhoneNumbersNumber
    }

-- ** CreditReportRequestConsumersSocialNum

-- | CreditReportRequestConsumersSocialNum
data CreditReportRequestConsumersSocialNum = CreditReportRequestConsumersSocialNum
  { -- | /Required/ "identifier" - Record identifier
    creditReportRequestConsumersSocialNumIdentifier :: !(Text),
    -- | /Required/ "number" - Social Security Number (SSN)
    creditReportRequestConsumersSocialNumNumber :: !(Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CreditReportRequestConsumersSocialNum
instance A.FromJSON CreditReportRequestConsumersSocialNum where
  parseJSON = A.withObject "CreditReportRequestConsumersSocialNum" $ \o ->
    CreditReportRequestConsumersSocialNum
      <$> (o .: "identifier")
      <*> (o .: "number")

-- | ToJSON CreditReportRequestConsumersSocialNum
instance A.ToJSON CreditReportRequestConsumersSocialNum where
  toJSON CreditReportRequestConsumersSocialNum {..} =
    A.object
      [ "identifier" .= creditReportRequestConsumersSocialNumIdentifier,
        "number" .= creditReportRequestConsumersSocialNumNumber
      ]

-- | Construct a value of type 'CreditReportRequestConsumersSocialNum' (by applying it's required fields, if any)
mkCreditReportRequestConsumersSocialNum ::
  -- | 'creditReportRequestConsumersSocialNumIdentifier': Record identifier
  Text ->
  -- | 'creditReportRequestConsumersSocialNumNumber': Social Security Number (SSN)
  Text ->
  CreditReportRequestConsumersSocialNum
mkCreditReportRequestConsumersSocialNum creditReportRequestConsumersSocialNumIdentifier creditReportRequestConsumersSocialNumNumber =
  CreditReportRequestConsumersSocialNum
    { creditReportRequestConsumersSocialNumIdentifier,
      creditReportRequestConsumersSocialNumNumber
    }

-- ** CreditReportRequestCustomerConfiguration

-- | CreditReportRequestCustomerConfiguration
-- Configurations related to the credit report being requested
data CreditReportRequestCustomerConfiguration = CreditReportRequestCustomerConfiguration
  { -- | "equifaxUSConsumerCreditReport"
    creditReportRequestCustomerConfigurationEquifaxUsConsumerCreditReport :: !(Maybe CustomerConfiguration)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CreditReportRequestCustomerConfiguration
instance A.FromJSON CreditReportRequestCustomerConfiguration where
  parseJSON = A.withObject "CreditReportRequestCustomerConfiguration" $ \o ->
    CreditReportRequestCustomerConfiguration
      <$> (o .:? "equifaxUSConsumerCreditReport")

-- | ToJSON CreditReportRequestCustomerConfiguration
instance A.ToJSON CreditReportRequestCustomerConfiguration where
  toJSON CreditReportRequestCustomerConfiguration {..} =
    A.object
      [ "equifaxUSConsumerCreditReport" .= creditReportRequestCustomerConfigurationEquifaxUsConsumerCreditReport
      ]

-- | Construct a value of type 'CreditReportRequestCustomerConfiguration' (by applying it's required fields, if any)
mkCreditReportRequestCustomerConfiguration ::
  CreditReportRequestCustomerConfiguration
mkCreditReportRequestCustomerConfiguration =
  CreditReportRequestCustomerConfiguration
    { creditReportRequestCustomerConfigurationEquifaxUsConsumerCreditReport = Nothing
    }

-- ** CreditReportRequestExternalDataSources

-- | CreditReportRequestExternalDataSources
data CreditReportRequestExternalDataSources = CreditReportRequestExternalDataSources
  { -- | "alternateDataSources"
    creditReportRequestExternalDataSourcesAlternateDataSources :: !(Maybe CreditReportRequestExternalDataSourcesAlternateDataSources)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CreditReportRequestExternalDataSources
instance A.FromJSON CreditReportRequestExternalDataSources where
  parseJSON = A.withObject "CreditReportRequestExternalDataSources" $ \o ->
    CreditReportRequestExternalDataSources
      <$> (o .:? "alternateDataSources")

-- | ToJSON CreditReportRequestExternalDataSources
instance A.ToJSON CreditReportRequestExternalDataSources where
  toJSON CreditReportRequestExternalDataSources {..} =
    A.object
      [ "alternateDataSources" .= creditReportRequestExternalDataSourcesAlternateDataSources
      ]

-- | Construct a value of type 'CreditReportRequestExternalDataSources' (by applying it's required fields, if any)
mkCreditReportRequestExternalDataSources ::
  CreditReportRequestExternalDataSources
mkCreditReportRequestExternalDataSources =
  CreditReportRequestExternalDataSources
    { creditReportRequestExternalDataSourcesAlternateDataSources = Nothing
    }

-- ** CreditReportRequestExternalDataSourcesAlternateDataSources

-- | CreditReportRequestExternalDataSourcesAlternateDataSources
data CreditReportRequestExternalDataSourcesAlternateDataSources = CreditReportRequestExternalDataSourcesAlternateDataSources
  { -- | /Required/ "consumerReportIndicator"
    creditReportRequestExternalDataSourcesAlternateDataSourcesConsumerReportIndicator :: !(Bool),
    -- | "customerOrchestrationCode"
    creditReportRequestExternalDataSourcesAlternateDataSourcesCustomerOrchestrationCode :: !(Maybe Text),
    -- | "customerOrganizationCode"
    creditReportRequestExternalDataSourcesAlternateDataSourcesCustomerOrganizationCode :: !(Maybe Text),
    -- | "dataProviderTag"
    creditReportRequestExternalDataSourcesAlternateDataSourcesDataProviderTag :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CreditReportRequestExternalDataSourcesAlternateDataSources
instance A.FromJSON CreditReportRequestExternalDataSourcesAlternateDataSources where
  parseJSON = A.withObject "CreditReportRequestExternalDataSourcesAlternateDataSources" $ \o ->
    CreditReportRequestExternalDataSourcesAlternateDataSources
      <$> (o .: "consumerReportIndicator")
      <*> (o .:? "customerOrchestrationCode")
      <*> (o .:? "customerOrganizationCode")
      <*> (o .:? "dataProviderTag")

-- | ToJSON CreditReportRequestExternalDataSourcesAlternateDataSources
instance A.ToJSON CreditReportRequestExternalDataSourcesAlternateDataSources where
  toJSON CreditReportRequestExternalDataSourcesAlternateDataSources {..} =
    A.object
      [ "consumerReportIndicator" .= creditReportRequestExternalDataSourcesAlternateDataSourcesConsumerReportIndicator,
        "customerOrchestrationCode" .= creditReportRequestExternalDataSourcesAlternateDataSourcesCustomerOrchestrationCode,
        "customerOrganizationCode" .= creditReportRequestExternalDataSourcesAlternateDataSourcesCustomerOrganizationCode,
        "dataProviderTag" .= creditReportRequestExternalDataSourcesAlternateDataSourcesDataProviderTag
      ]

-- | Construct a value of type 'CreditReportRequestExternalDataSourcesAlternateDataSources' (by applying it's required fields, if any)
mkCreditReportRequestExternalDataSourcesAlternateDataSources ::
  -- | 'creditReportRequestExternalDataSourcesAlternateDataSourcesConsumerReportIndicator'
  Bool ->
  CreditReportRequestExternalDataSourcesAlternateDataSources
mkCreditReportRequestExternalDataSourcesAlternateDataSources creditReportRequestExternalDataSourcesAlternateDataSourcesConsumerReportIndicator =
  CreditReportRequestExternalDataSourcesAlternateDataSources
    { creditReportRequestExternalDataSourcesAlternateDataSourcesConsumerReportIndicator,
      creditReportRequestExternalDataSourcesAlternateDataSourcesCustomerOrchestrationCode = Nothing,
      creditReportRequestExternalDataSourcesAlternateDataSourcesCustomerOrganizationCode = Nothing,
      creditReportRequestExternalDataSourcesAlternateDataSourcesDataProviderTag = Nothing
    }

-- ** CreditReportResponse

-- | CreditReportResponse
data CreditReportResponse = CreditReportResponse
  { -- | "status" - Transaction status. It could include some comments related to the transaction
    creditReportResponseStatus :: !(Maybe Text),
    -- | "consumers"
    creditReportResponseConsumers :: !(Maybe ConsumerCreditReport)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CreditReportResponse
instance A.FromJSON CreditReportResponse where
  parseJSON = A.withObject "CreditReportResponse" $ \o ->
    CreditReportResponse
      <$> (o .:? "status")
      <*> (o .:? "consumers")

-- | ToJSON CreditReportResponse
instance A.ToJSON CreditReportResponse where
  toJSON CreditReportResponse {..} =
    A.object
      [ "status" .= creditReportResponseStatus,
        "consumers" .= creditReportResponseConsumers
      ]

-- | Construct a value of type 'CreditReportResponse' (by applying it's required fields, if any)
mkCreditReportResponse ::
  CreditReportResponse
mkCreditReportResponse =
  CreditReportResponse
    { creditReportResponseStatus = Nothing,
      creditReportResponseConsumers = Nothing
    }

-- ** CreditorClassificationCode

-- | CreditorClassificationCode
-- A general type of business for the original creditor and is only applicable for trades reported by Debt Buyers
data CreditorClassificationCode = CreditorClassificationCode
  { -- | "code" - Code value
    creditorClassificationCodeCode :: !(Maybe Text),
    -- | "description" - Business type of original creditor   - 01: RETAIL   - 02: MEDICAL/HEALTH CARE   - 03: OIL COMPANY   - 04: GOVERNMENT   - 05: PERSONAL SERVICES   - 06: INSURANCE   - 07: EDUCATIONAL   - 08: BANKING   - 09: RENTAL/LEASING   - 10: UTILITIES   - 11: CABLE/CELLULAR   - 12: FINANCIAL   - 13: CREDIT UNION   - 14: AUTOMOTIVE   - 15: CHECK GUARANTEE
    creditorClassificationCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CreditorClassificationCode
instance A.FromJSON CreditorClassificationCode where
  parseJSON = A.withObject "CreditorClassificationCode" $ \o ->
    CreditorClassificationCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON CreditorClassificationCode
instance A.ToJSON CreditorClassificationCode where
  toJSON CreditorClassificationCode {..} =
    A.object
      [ "code" .= creditorClassificationCodeCode,
        "description" .= creditorClassificationCodeDescription
      ]

-- | Construct a value of type 'CreditorClassificationCode' (by applying it's required fields, if any)
mkCreditorClassificationCode ::
  CreditorClassificationCode
mkCreditorClassificationCode =
  CreditorClassificationCode
    { creditorClassificationCodeCode = Nothing,
      creditorClassificationCodeDescription = Nothing
    }

-- ** CustomerConfiguration

-- | CustomerConfiguration
-- Configuration related to the customer request
data CustomerConfiguration = CustomerConfiguration
  { -- | /Required/ "memberNumber" - This is your Equifax Customer Number. This number is used to both access and invoice for Equifax data, products and services. Please contact your Equifax Sales Associate for additional information and activation.
    customerConfigurationMemberNumber :: !(Text),
    -- | /Required/ "securityCode" - Security code
    customerConfigurationSecurityCode :: !(Text),
    -- | "codeDescriptionRequired" - Request code descriptions
    customerConfigurationCodeDescriptionRequired :: !(Maybe Bool),
    -- | "endUserInformation"
    customerConfigurationEndUserInformation :: !(Maybe CustomerConfigurationEndUserInformation),
    -- | "productCodes" - Codes related to the optional Equifax products \\: Please contact your Equifax Sales Associate for additional information and activation of the desired optional services. Product code values include:   - 01: Equifax Fraud Advisor 2.0 and up to 4 warning codes with Consumer report   - N1: Equifax Fraud Advisor 2.0 and up to 4 warning codes without Consumer report   - 03: Equifax ID Advisor Plus Raw Data returned with Consumer report   - N3: Equifax ID Advisor Plus Raw Data returned without Consumer report   - 08: Fraud Advisor 2.0 &#x3D; Fraud Advisor with ID Advisor Plus Raw Data returned on high \\# risk group only (scores of 1-5) with Consumer report   - N8: Fraud Advisor 2.0 &#x3D; Fraud Advisor with ID Advisor Plus Raw Data returned on high \\# risk group only (1-5) without Consumer report   - 10: Fraud Advisor 2.0 &#x3D; Fraud Advisor with ID Advisor Plus Raw Data returned on all \\# risk groups (scores of 1-9) with Consumer report   - NA: Fraud Advisor 2.0 &#x3D; Fraud Advisor with ID Advisor Plus Raw Data returned on all \\# risk groups (scores of 1-9) without Consumer report   - MM: MarketMax with a Consumer Report   - NZ: MarketMax without a Consumer Report   - 31: ID Score® - Risk with Consumer report   - 32: ID Score® - Risk without Consumer report
    customerConfigurationProductCodes :: !(Maybe [Text]),
    -- | "productInformation"
    customerConfigurationProductInformation :: !(Maybe CustomerConfigurationProductInformation),
    -- | "models" - Model Score
    customerConfigurationModels :: !(Maybe [CustomerConfigurationModels]),
    -- | "customerCode" - Assigned customer code
    customerConfigurationCustomerCode :: !(Maybe Text),
    -- | "multipleReportIndicator" - Indicates if the report allows more than 1 credit report   - 1: one report   - F: multiple reports (Puerto Rico only)
    customerConfigurationMultipleReportIndicator :: !(Maybe Text),
    -- | "ECOAInquiryType" - Type of inquiry
    customerConfigurationEcoaInquiryType :: !(Maybe Text),
    -- | "optionalFeatureCode" - The optional features requested in the credit report. Please contact your Equifax Sales Associate for additional information and activation Optional feature code:   - B: Military Lending Act with Credit Data   - D: ON-LINE DIRECTORY or ON-LINE DIRECTORY w/Address   - G: Dimensions Data   - M: Return Risk-Based Pricing score information in the FICO and Model Segments   - Q: Return Risk-Based Pricing score information in the FICO segment only   - V: Enhanced Delinquency Alert System (EDAS) &amp; FICO Score based on Equifax Data   - X: FICO Score based on Equifax Data   - Z: Enhanced Delinquency Alert System (EDAS)   - &amp;: FraudIQ Synthetic ID Alerts
    customerConfigurationOptionalFeatureCode :: !(Maybe [Text]),
    -- | "vendorIdentificationCode" - Required for all third-party channel partners and vendors who support end-customer access to Equifax products and services
    customerConfigurationVendorIdentificationCode :: !(Maybe Text),
    -- | "riskModelCodeOnly" - It can be one of the following indicators:     Pre-screen of One model request  - ^: For a single prescreen model          - %: For multiple prescreen models  In-Person rules require that 3 or more items in the request match to a consumer&#39;s file to be considered a hit/match.  - P: In Person rules apply based on the state code in the request          - Q: In Person rules apply based on the state code in the Current Address on the file  Mortgage Reissue   - M: if Mortgage Reissue is requested this indicator is required. Used by the mortgage industry when a consumer’s credit report is reissued to another company for additional services.
    customerConfigurationRiskModelCodeOnly :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CustomerConfiguration
instance A.FromJSON CustomerConfiguration where
  parseJSON = A.withObject "CustomerConfiguration" $ \o ->
    CustomerConfiguration
      <$> (o .: "memberNumber")
      <*> (o .: "securityCode")
      <*> (o .:? "codeDescriptionRequired")
      <*> (o .:? "endUserInformation")
      <*> (o .:? "productCodes")
      <*> (o .:? "productInformation")
      <*> (o .:? "models")
      <*> (o .:? "customerCode")
      <*> (o .:? "multipleReportIndicator")
      <*> (o .:? "ECOAInquiryType")
      <*> (o .:? "optionalFeatureCode")
      <*> (o .:? "vendorIdentificationCode")
      <*> (o .:? "riskModelCodeOnly")

-- | ToJSON CustomerConfiguration
instance A.ToJSON CustomerConfiguration where
  toJSON CustomerConfiguration {..} =
    A.object
      [ "memberNumber" .= customerConfigurationMemberNumber,
        "securityCode" .= customerConfigurationSecurityCode,
        "codeDescriptionRequired" .= customerConfigurationCodeDescriptionRequired,
        "endUserInformation" .= customerConfigurationEndUserInformation,
        "productCodes" .= customerConfigurationProductCodes,
        "productInformation" .= customerConfigurationProductInformation,
        "models" .= customerConfigurationModels,
        "customerCode" .= customerConfigurationCustomerCode,
        "multipleReportIndicator" .= customerConfigurationMultipleReportIndicator,
        "ECOAInquiryType" .= customerConfigurationEcoaInquiryType,
        "optionalFeatureCode" .= customerConfigurationOptionalFeatureCode,
        "vendorIdentificationCode" .= customerConfigurationVendorIdentificationCode,
        "riskModelCodeOnly" .= customerConfigurationRiskModelCodeOnly
      ]

-- | Construct a value of type 'CustomerConfiguration' (by applying it's required fields, if any)
mkCustomerConfiguration ::
  -- | 'customerConfigurationMemberNumber': This is your Equifax Customer Number. This number is used to both access and invoice for Equifax data, products and services. Please contact your Equifax Sales Associate for additional information and activation.
  Text ->
  -- | 'customerConfigurationSecurityCode': Security code
  Text ->
  CustomerConfiguration
mkCustomerConfiguration customerConfigurationMemberNumber customerConfigurationSecurityCode =
  CustomerConfiguration
    { customerConfigurationMemberNumber,
      customerConfigurationSecurityCode,
      customerConfigurationCodeDescriptionRequired = Nothing,
      customerConfigurationEndUserInformation = Nothing,
      customerConfigurationProductCodes = Nothing,
      customerConfigurationProductInformation = Nothing,
      customerConfigurationModels = Nothing,
      customerConfigurationCustomerCode = Nothing,
      customerConfigurationMultipleReportIndicator = Nothing,
      customerConfigurationEcoaInquiryType = Nothing,
      customerConfigurationOptionalFeatureCode = Nothing,
      customerConfigurationVendorIdentificationCode = Nothing,
      customerConfigurationRiskModelCodeOnly = Nothing
    }

-- ** CustomerConfigurationEndUserInformation

-- | CustomerConfigurationEndUserInformation
-- End user information: Customers using an \"IG\", \"IL\", \"IZ\" or \"RT\" Industry Code are only required to send the appropriate Permissible Purpose Code. Customers using a \"ZB\" or \"ZT\" Industry Code must include both the \"End Users Name\" and the applicable Permissible Purpose code.
data CustomerConfigurationEndUserInformation = CustomerConfigurationEndUserInformation
  { -- | /Required/ "endUsersName" - Company name of the final recipient of the consumer report making the request
    customerConfigurationEndUserInformationEndUsersName :: !(Text),
    -- | /Required/ "permissiblePurposeCode" - Code to audit the purposes for which Equifax consumer information is furnished thus providing continued compliance with the FCRA   - 01: Intends to use the information as a potential investor servicer or current insurer in connection with a valuation of or assessment of the credit or prepayment risks.   - 03: In accordance with written instructions of the consumer to whom it relates.   - 04: In connection with a collection transaction involving a credit account of the consumer.   - 05: In response to an agency administering a state plan under Section 454 of the Social Security Act (42 U.S.C. 654) for use to set an initial or modified child support award.   - 06: In accordance with written instructions of the consumer through a reseller.   - 07: In response to a request by the head of a state or local child support enforcement agency (or a state or local government official authorized by the head of such an agency) that has met all requirements of Section 604(a)(4)(ABCD).   - 08: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer. For use only when the transaction cannot be described with a more specific code.   - 09: For employment purposes (Only PERSONA is available with this code)   - 10: In connection with a determination of eligibility for a license or other benefit granted by a governmental instrument required by law to consider financial responsibility or status.   - 11: In connection with the underwriting of insurance.   - 12: In connection with the review of existing policy holders for insurance underwriting purposes.   - 13: A legitimate business need to review an account to determine whether the consumer continues to meet the terms of the account.   - 14: In response to the order of a court having jurisdiction or a subpoena issued by a federal grand jury.   - 15: In connection with a tenant screen application involving the consumer.   - 16: For use by a governmental agency pursuant to FCRA Section 608.   - 17: To protect against or prevent actual or potential fraud unauthorized transactions claims or other liability.   - 18: For required institutional risk control or for resolving consumer disputes or inquiries.   - 19: Due to holding a legal or beneficial interest relating to the consumer.   - 20: To law enforcement agencies or for an investigation on a matter related to public safety.   - 21: As necessary to effect administer or enforce a transaction; to underwrite insurance at the consumer’s request for reinsurance purposes or for the following purposes related to the consumer’s insurance;  account administration reporting investigating fraud prevention premium payment processing claim processing benefit administration or research projects.   - 22: To persons acting in a fiduciary or representative capacity on behalf of and with the consent of the consumer.   - 23: As necessary to effect administer or enforce a transaction requested or authorized by the consumer including location for collection of a delinquent account.   - 24: In conjunction with access to a commercial file on a sole proprietorship.   - 25: In conjunction with access to a commercial file on a corporation where specific consumer consent is given.   - 26: In connection with a credit transaction involving the extension of credit to or review or collection of an account of the consumer where the medical information to be furnished is relevant to process or effect the transaction and specific consumer consent was provided for the furnishing of the consumer report that describes the use of which the medical information will be furnished.   - 27: For employment purposes where the medical information to be furnished is relevant to process or effect the transaction and specific consumer consent was provided for the furnishing of the consumer report that describes the use for which the medical information will be furnished.    - 28: In connection with the underwriting of insurance. Specific consumer consent was given for the release of medical information contained within the consumer report.   - 29: In connection with a transaction where the credit file including any medical information in it is only to be provided directly to the individual consumer to whom the information relates and specific consumer consent was received for the receipt and furnishing of the consumer report including medical information to the consumer.   - 51: In accordance with written instructions of the consumer providing consent for use related to bankruptcy filing purposes.   - 52: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to an automobile or truck.   - 53: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to automotive repair.   - 54: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to automotive parts tires etc.   - 55: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to a boat or recreational vehicle.   - 56: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to farm equipment.   - 57: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to a mortgage loan origination.   - 58: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to a mortgage loan refinancing.   - 59: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to a home equity loan line of credit.   - 60: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to a personal loan.   - 61: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to a credit card.   - 62: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to home furnishings.   - 63: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to general contracting / home improvement.   - 64: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to air conditioning / heating / plumbing or electrical.   - 65: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to lumber / building materials / hardware.   - 66: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to hospitalization / medical care / dental care.   - 67: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to personal services.   - 68: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to home heating oil / fuel.   - 69: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to telephone / electrical / gas / water utilities or household garbage removal.   - 70: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to wholesale goods.   - 71: For the purpose of providing a consumer with a copy of his/her consumer report or credit score upon the consumer’s request.   - 72: For the purpose of administering a credit file or credit score monitoring service to which the consumer has subscribed.   - 73: For use by a housing counseling agency where the consumer has provided his / her specific consent.
    customerConfigurationEndUserInformationPermissiblePurposeCode :: !(Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CustomerConfigurationEndUserInformation
instance A.FromJSON CustomerConfigurationEndUserInformation where
  parseJSON = A.withObject "CustomerConfigurationEndUserInformation" $ \o ->
    CustomerConfigurationEndUserInformation
      <$> (o .: "endUsersName")
      <*> (o .: "permissiblePurposeCode")

-- | ToJSON CustomerConfigurationEndUserInformation
instance A.ToJSON CustomerConfigurationEndUserInformation where
  toJSON CustomerConfigurationEndUserInformation {..} =
    A.object
      [ "endUsersName" .= customerConfigurationEndUserInformationEndUsersName,
        "permissiblePurposeCode" .= customerConfigurationEndUserInformationPermissiblePurposeCode
      ]

-- | Construct a value of type 'CustomerConfigurationEndUserInformation' (by applying it's required fields, if any)
mkCustomerConfigurationEndUserInformation ::
  -- | 'customerConfigurationEndUserInformationEndUsersName': Company name of the final recipient of the consumer report making the request
  Text ->
  -- | 'customerConfigurationEndUserInformationPermissiblePurposeCode': Code to audit the purposes for which Equifax consumer information is furnished thus providing continued compliance with the FCRA   - 01: Intends to use the information as a potential investor servicer or current insurer in connection with a valuation of or assessment of the credit or prepayment risks.   - 03: In accordance with written instructions of the consumer to whom it relates.   - 04: In connection with a collection transaction involving a credit account of the consumer.   - 05: In response to an agency administering a state plan under Section 454 of the Social Security Act (42 U.S.C. 654) for use to set an initial or modified child support award.   - 06: In accordance with written instructions of the consumer through a reseller.   - 07: In response to a request by the head of a state or local child support enforcement agency (or a state or local government official authorized by the head of such an agency) that has met all requirements of Section 604(a)(4)(ABCD).   - 08: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer. For use only when the transaction cannot be described with a more specific code.   - 09: For employment purposes (Only PERSONA is available with this code)   - 10: In connection with a determination of eligibility for a license or other benefit granted by a governmental instrument required by law to consider financial responsibility or status.   - 11: In connection with the underwriting of insurance.   - 12: In connection with the review of existing policy holders for insurance underwriting purposes.   - 13: A legitimate business need to review an account to determine whether the consumer continues to meet the terms of the account.   - 14: In response to the order of a court having jurisdiction or a subpoena issued by a federal grand jury.   - 15: In connection with a tenant screen application involving the consumer.   - 16: For use by a governmental agency pursuant to FCRA Section 608.   - 17: To protect against or prevent actual or potential fraud unauthorized transactions claims or other liability.   - 18: For required institutional risk control or for resolving consumer disputes or inquiries.   - 19: Due to holding a legal or beneficial interest relating to the consumer.   - 20: To law enforcement agencies or for an investigation on a matter related to public safety.   - 21: As necessary to effect administer or enforce a transaction; to underwrite insurance at the consumer’s request for reinsurance purposes or for the following purposes related to the consumer’s insurance;  account administration reporting investigating fraud prevention premium payment processing claim processing benefit administration or research projects.   - 22: To persons acting in a fiduciary or representative capacity on behalf of and with the consent of the consumer.   - 23: As necessary to effect administer or enforce a transaction requested or authorized by the consumer including location for collection of a delinquent account.   - 24: In conjunction with access to a commercial file on a sole proprietorship.   - 25: In conjunction with access to a commercial file on a corporation where specific consumer consent is given.   - 26: In connection with a credit transaction involving the extension of credit to or review or collection of an account of the consumer where the medical information to be furnished is relevant to process or effect the transaction and specific consumer consent was provided for the furnishing of the consumer report that describes the use of which the medical information will be furnished.   - 27: For employment purposes where the medical information to be furnished is relevant to process or effect the transaction and specific consumer consent was provided for the furnishing of the consumer report that describes the use for which the medical information will be furnished.    - 28: In connection with the underwriting of insurance. Specific consumer consent was given for the release of medical information contained within the consumer report.   - 29: In connection with a transaction where the credit file including any medical information in it is only to be provided directly to the individual consumer to whom the information relates and specific consumer consent was received for the receipt and furnishing of the consumer report including medical information to the consumer.   - 51: In accordance with written instructions of the consumer providing consent for use related to bankruptcy filing purposes.   - 52: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to an automobile or truck.   - 53: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to automotive repair.   - 54: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to automotive parts tires etc.   - 55: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to a boat or recreational vehicle.   - 56: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to farm equipment.   - 57: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to a mortgage loan origination.   - 58: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to a mortgage loan refinancing.   - 59: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to a home equity loan line of credit.   - 60: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to a personal loan.   - 61: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to a credit card.   - 62: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to home furnishings.   - 63: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to general contracting / home improvement.   - 64: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to air conditioning / heating / plumbing or electrical.   - 65: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to lumber / building materials / hardware.   - 66: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to hospitalization / medical care / dental care.   - 67: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to personal services.   - 68: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to home heating oil / fuel.   - 69: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to telephone / electrical / gas / water utilities or household garbage removal.   - 70: In connection with a credit transaction involving the consumer and for the extension of credit or review or collection of an account of the consumer related to wholesale goods.   - 71: For the purpose of providing a consumer with a copy of his/her consumer report or credit score upon the consumer’s request.   - 72: For the purpose of administering a credit file or credit score monitoring service to which the consumer has subscribed.   - 73: For use by a housing counseling agency where the consumer has provided his / her specific consent.
  Text ->
  CustomerConfigurationEndUserInformation
mkCustomerConfigurationEndUserInformation customerConfigurationEndUserInformationEndUsersName customerConfigurationEndUserInformationPermissiblePurposeCode =
  CustomerConfigurationEndUserInformation
    { customerConfigurationEndUserInformationEndUsersName,
      customerConfigurationEndUserInformationPermissiblePurposeCode
    }

-- ** CustomerConfigurationModels

-- | CustomerConfigurationModels
data CustomerConfigurationModels = CustomerConfigurationModels
  { -- | "identifier" - Model number
    customerConfigurationModelsIdentifier :: !(Maybe Text),
    -- | "modelField"
    customerConfigurationModelsModelField :: !(Maybe [Text])
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CustomerConfigurationModels
instance A.FromJSON CustomerConfigurationModels where
  parseJSON = A.withObject "CustomerConfigurationModels" $ \o ->
    CustomerConfigurationModels
      <$> (o .:? "identifier")
      <*> (o .:? "modelField")

-- | ToJSON CustomerConfigurationModels
instance A.ToJSON CustomerConfigurationModels where
  toJSON CustomerConfigurationModels {..} =
    A.object
      [ "identifier" .= customerConfigurationModelsIdentifier,
        "modelField" .= customerConfigurationModelsModelField
      ]

-- | Construct a value of type 'CustomerConfigurationModels' (by applying it's required fields, if any)
mkCustomerConfigurationModels ::
  CustomerConfigurationModels
mkCustomerConfigurationModels =
  CustomerConfigurationModels
    { customerConfigurationModelsIdentifier = Nothing,
      customerConfigurationModelsModelField = Nothing
    }

-- ** CustomerConfigurationProductInformation

-- | CustomerConfigurationProductInformation
data CustomerConfigurationProductInformation = CustomerConfigurationProductInformation
  { -- | "driverLicenseNumber"
    customerConfigurationProductInformationDriverLicenseNumber :: !(Maybe [CustomerConfigurationProductInformationDriverLicenseNumber]),
    -- | "coApplicantDateOfBirth" - Co-applicant&#39;s birth date
    customerConfigurationProductInformationCoApplicantDateOfBirth :: !(Maybe Date)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CustomerConfigurationProductInformation
instance A.FromJSON CustomerConfigurationProductInformation where
  parseJSON = A.withObject "CustomerConfigurationProductInformation" $ \o ->
    CustomerConfigurationProductInformation
      <$> (o .:? "driverLicenseNumber")
      <*> (o .:? "coApplicantDateOfBirth")

-- | ToJSON CustomerConfigurationProductInformation
instance A.ToJSON CustomerConfigurationProductInformation where
  toJSON CustomerConfigurationProductInformation {..} =
    A.object
      [ "driverLicenseNumber" .= customerConfigurationProductInformationDriverLicenseNumber,
        "coApplicantDateOfBirth" .= customerConfigurationProductInformationCoApplicantDateOfBirth
      ]

-- | Construct a value of type 'CustomerConfigurationProductInformation' (by applying it's required fields, if any)
mkCustomerConfigurationProductInformation ::
  CustomerConfigurationProductInformation
mkCustomerConfigurationProductInformation =
  CustomerConfigurationProductInformation
    { customerConfigurationProductInformationDriverLicenseNumber = Nothing,
      customerConfigurationProductInformationCoApplicantDateOfBirth = Nothing
    }

-- ** CustomerConfigurationProductInformationDriverLicenseNumber

-- | CustomerConfigurationProductInformationDriverLicenseNumber
data CustomerConfigurationProductInformationDriverLicenseNumber = CustomerConfigurationProductInformationDriverLicenseNumber
  { -- | "identifier" - Owner of the drivers license
    customerConfigurationProductInformationDriverLicenseNumberIdentifier :: !(Maybe Text),
    -- | "driverLicenseNumber" - Subject&#39;s drivers license number
    customerConfigurationProductInformationDriverLicenseNumberDriverLicenseNumber :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON CustomerConfigurationProductInformationDriverLicenseNumber
instance A.FromJSON CustomerConfigurationProductInformationDriverLicenseNumber where
  parseJSON = A.withObject "CustomerConfigurationProductInformationDriverLicenseNumber" $ \o ->
    CustomerConfigurationProductInformationDriverLicenseNumber
      <$> (o .:? "identifier")
      <*> (o .:? "driverLicenseNumber")

-- | ToJSON CustomerConfigurationProductInformationDriverLicenseNumber
instance A.ToJSON CustomerConfigurationProductInformationDriverLicenseNumber where
  toJSON CustomerConfigurationProductInformationDriverLicenseNumber {..} =
    A.object
      [ "identifier" .= customerConfigurationProductInformationDriverLicenseNumberIdentifier,
        "driverLicenseNumber" .= customerConfigurationProductInformationDriverLicenseNumberDriverLicenseNumber
      ]

-- | Construct a value of type 'CustomerConfigurationProductInformationDriverLicenseNumber' (by applying it's required fields, if any)
mkCustomerConfigurationProductInformationDriverLicenseNumber ::
  CustomerConfigurationProductInformationDriverLicenseNumber
mkCustomerConfigurationProductInformationDriverLicenseNumber =
  CustomerConfigurationProductInformationDriverLicenseNumber
    { customerConfigurationProductInformationDriverLicenseNumberIdentifier = Nothing,
      customerConfigurationProductInformationDriverLicenseNumberDriverLicenseNumber = Nothing
    }

-- ** Trade

-- | Trade
data Trade = Trade
  { -- | "automatedUpdateIndicator" - Automated Update Indicator
    tradeAutomatedUpdateIndicator :: !(Maybe Text),
    -- | "monthsReviewed" - How many months the trade was reviewed
    tradeMonthsReviewed :: !(Maybe Text),
    -- | "accountDesignator"
    tradeAccountDesignator :: !(Maybe AccountDesignatorCode),
    -- | "accountNumber" - Account number
    tradeAccountNumber :: !(Maybe Text),
    -- | "thirtyDayCounter" - Number of times the consumer has been 30 days delinquent in payment
    tradeThirtyDayCounter :: !(Maybe Int),
    -- | "sixtyDayCounter" - Number of times the consumer has been 60 days delinquent in payment
    tradeSixtyDayCounter :: !(Maybe Int),
    -- | "ninetyDayCounter" - Number of times the consumer has been 90+ days delinquent in payment
    tradeNinetyDayCounter :: !(Maybe Int),
    -- | "previousHighRate1" - First highest rate that occurred outside of the timeframe of the payment history that has beed requested (Valid Rates\\: 2-5, 8 and 9)
    tradePreviousHighRate1 :: !(Maybe Int),
    -- | "previousHighDate1" - Date in format MMYYYY where MM is the Month and YYYY is the year
    tradePreviousHighDate1 :: !(Maybe Text),
    -- | "previousHighRate2" - Second highest rate that occurred outside of the timeframe of the payment history that has beed requested (Valid Rates\\: 2-5, 8 and 9)
    tradePreviousHighRate2 :: !(Maybe Int),
    -- | "previousHighDate2" - Date in format MMYYYY where MM is the Month and YYYY is the year
    tradePreviousHighDate2 :: !(Maybe Text),
    -- | "previousHighRate3" - Third highest rate that occurred outside of the timeframe of the payment history that has beed requested (Valid Rates\\: 2-5, 8 and 9)
    tradePreviousHighRate3 :: !(Maybe Int),
    -- | "previousHighDate3" - Date in format MMYYYY where MM is the Month and YYYY is the year
    tradePreviousHighDate3 :: !(Maybe Text),
    -- | "24MonthPaymentHistory"
    trade24monthPaymentHistory :: !(Maybe [Trade24MonthPaymentHistory]),
    -- | "customerName" - Customer name.
    tradeCustomerName :: !(Maybe Text),
    -- | "dateReported" - Represents the \&quot;as of\&quot; date of the most recent update received from the data furnisher. Accounts may continue to be updated by the data furnisher even after they are closed, paid out or become severely delinquent (charge off, repossession, etc.).
    tradeDateReported :: !(Maybe Date),
    -- | "dateOpened" - Date account originally opened
    tradeDateOpened :: !(Maybe Date),
    -- | "highCredit" - Highest outstanding balance or original amount
    tradeHighCredit :: !(Maybe Int),
    -- | "creditLimit" - Highest available credit limit
    tradeCreditLimit :: !(Maybe Int),
    -- | "balance" - Account balance
    tradeBalance :: !(Maybe Int),
    -- | "pastDueAmount" - Amount past due on an account (late)
    tradePastDueAmount :: !(Maybe Int),
    -- | "portfolioTypeCode"
    tradePortfolioTypeCode :: !(Maybe TradePortfolioTypeCode),
    -- | "rateStatusCode"
    tradeRateStatusCode :: !(Maybe TradeRateStatusCode),
    -- | "rate"
    tradeRate :: !(Maybe TradeRate),
    -- | "lastActivityDate" - Contains the date of last activity
    tradeLastActivityDate :: !(Maybe Text),
    -- | "narrativeCodes"
    tradeNarrativeCodes :: !(Maybe [A.Value]),
    -- | "rawNarrativeCodes" - Raw codes for the narratives
    tradeRawNarrativeCodes :: !(Maybe [Text]),
    -- | "accountTypeCode"
    tradeAccountTypeCode :: !(Maybe AccountTypeCode),
    -- | "lastPaymentDate" - Date of the most recent payment.
    tradeLastPaymentDate :: !(Maybe Date),
    -- | "closedDate" - Contains the date the account was closed
    tradeClosedDate :: !(Maybe Date),
    -- | "dateMajorDelinquencyFirstReported" - If current Rate/Status code is 6, 7, 8, 9, M, Z or if trade contains narrative code 081 (foreclosure), this date will reflect the first time that Rate/Status or narrative code was reported.
    tradeDateMajorDelinquencyFirstReported :: !(Maybe Date),
    -- | "actualPaymentAmount" - Payment actually received for a reporting period
    tradeActualPaymentAmount :: !(Maybe Int),
    -- | "scheduledPaymentAmount" - Contractual amount due for a payment period. (The figure in this field should be the monthly amount due regardless of the actual payment frequency.)
    tradeScheduledPaymentAmount :: !(Maybe Int),
    -- | "termsFrequencyCode"
    tradeTermsFrequencyCode :: !(Maybe TradeTermsFrequencyCode),
    -- | "termsDurationCode"
    tradeTermsDurationCode :: !(Maybe TradeTermsDurationCode),
    -- | "purchasedFromOrSoldCreditorIndicator"
    tradePurchasedFromOrSoldCreditorIndicator :: !(Maybe TradePurchasedFromOrSoldCreditorIndicator),
    -- | "purchasedFromOrSoldCreditorName" - Denotes who the account was either purchased from or sold to or the Original Creditor’s name
    tradePurchasedFromOrSoldCreditorName :: !(Maybe Text),
    -- | "creditorClassificationCode"
    tradeCreditorClassificationCode :: !(Maybe CreditorClassificationCode),
    -- | "activityDesignatorCode"
    tradeActivityDesignatorCode :: !(Maybe TradeActivityDesignatorCode),
    -- | "originalChargeOffAmount" - Amount originally charged to loss by the creditor
    tradeOriginalChargeOffAmount :: !(Maybe Int),
    -- | "deferredPaymentStartDate" - Contains the date the first payment is due for deferred loans
    tradeDeferredPaymentStartDate :: !(Maybe Date),
    -- | "ballonPaymentAmount" - Amount of the balloon payment
    tradeBallonPaymentAmount :: !(Maybe Int),
    -- | "ballonPaymentDueDate" - Contains the date the balloon payment is due
    tradeBallonPaymentDueDate :: !(Maybe Date),
    -- | "mortgageIDNumber" - Number assigned to a mortgage loan that remains constant throughout the life of the loan. The MIN indicates that the loan is registered with the Mortgage Electronic Registration Systems, Inc., the electronic registry for tracking the ownership of mortgage rights.
    tradeMortgageIdNumber :: !(Maybe Text),
    -- | "paymentHistory1to24"
    tradePaymentHistory1to24 :: !(Maybe [TradePaymentHistory1to24]),
    -- | "paymentHistory25to36"
    tradePaymentHistory25to36 :: !(Maybe [TradePaymentHistory25to36]),
    -- | "paymentHistory37to48"
    tradePaymentHistory37to48 :: !(Maybe [TradePaymentHistory37to48]),
    -- | "previousHighRatePaymentHistory"
    tradePreviousHighRatePaymentHistory :: !(Maybe Text),
    -- | "previousHighDatePaymentHistory" - Date in format MMYYYY where MM is the Month and YYYY is the year
    tradePreviousHighDatePaymentHistory :: !(Maybe Text),
    -- | "dimensionsDataStartDate" - Date in format MMYYYY where MM is the Month and YYYY is the year
    tradeDimensionsDataStartDate :: !(Maybe Text),
    -- | "dimensionsNumberOfMonths" - Number of months of Dimensions data requested
    tradeDimensionsNumberOfMonths :: !(Maybe Text),
    -- | "dimension" - Information over the most recent 24 months of historical data. There may be gaps of historical Dimensions data if that month (or field) is not available Dimensions Data is an optional feature offered by Equifax. Please contact your Equifax Sales Associate for additional information and activation.
    tradeDimension :: !(Maybe [TradeDimension])
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON Trade
instance A.FromJSON Trade where
  parseJSON = A.withObject "Trade" $ \o ->
    Trade
      <$> (o .:? "automatedUpdateIndicator")
      <*> (o .:? "monthsReviewed")
      <*> (o .:? "accountDesignator")
      <*> (o .:? "accountNumber")
      <*> (o .:? "thirtyDayCounter")
      <*> (o .:? "sixtyDayCounter")
      <*> (o .:? "ninetyDayCounter")
      <*> (o .:? "previousHighRate1")
      <*> (o .:? "previousHighDate1")
      <*> (o .:? "previousHighRate2")
      <*> (o .:? "previousHighDate2")
      <*> (o .:? "previousHighRate3")
      <*> (o .:? "previousHighDate3")
      <*> (o .:? "24MonthPaymentHistory")
      <*> (o .:? "customerName")
      <*> (o .:? "dateReported")
      <*> (o .:? "dateOpened")
      <*> (o .:? "highCredit")
      <*> (o .:? "creditLimit")
      <*> (o .:? "balance")
      <*> (o .:? "pastDueAmount")
      <*> (o .:? "portfolioTypeCode")
      <*> (o .:? "rateStatusCode")
      <*> (o .:? "rate")
      <*> (o .:? "lastActivityDate")
      <*> (o .:? "narrativeCodes")
      <*> (o .:? "rawNarrativeCodes")
      <*> (o .:? "accountTypeCode")
      <*> (o .:? "lastPaymentDate")
      <*> (o .:? "closedDate")
      <*> (o .:? "dateMajorDelinquencyFirstReported")
      <*> (o .:? "actualPaymentAmount")
      <*> (o .:? "scheduledPaymentAmount")
      <*> (o .:? "termsFrequencyCode")
      <*> (o .:? "termsDurationCode")
      <*> (o .:? "purchasedFromOrSoldCreditorIndicator")
      <*> (o .:? "purchasedFromOrSoldCreditorName")
      <*> (o .:? "creditorClassificationCode")
      <*> (o .:? "activityDesignatorCode")
      <*> (o .:? "originalChargeOffAmount")
      <*> (o .:? "deferredPaymentStartDate")
      <*> (o .:? "ballonPaymentAmount")
      <*> (o .:? "ballonPaymentDueDate")
      <*> (o .:? "mortgageIDNumber")
      <*> (o .:? "paymentHistory1to24")
      <*> (o .:? "paymentHistory25to36")
      <*> (o .:? "paymentHistory37to48")
      <*> (o .:? "previousHighRatePaymentHistory")
      <*> (o .:? "previousHighDatePaymentHistory")
      <*> (o .:? "dimensionsDataStartDate")
      <*> (o .:? "dimensionsNumberOfMonths")
      <*> (o .:? "dimension")

-- | ToJSON Trade
instance A.ToJSON Trade where
  toJSON Trade {..} =
    A.object
      [ "automatedUpdateIndicator" .= tradeAutomatedUpdateIndicator,
        "monthsReviewed" .= tradeMonthsReviewed,
        "accountDesignator" .= tradeAccountDesignator,
        "accountNumber" .= tradeAccountNumber,
        "thirtyDayCounter" .= tradeThirtyDayCounter,
        "sixtyDayCounter" .= tradeSixtyDayCounter,
        "ninetyDayCounter" .= tradeNinetyDayCounter,
        "previousHighRate1" .= tradePreviousHighRate1,
        "previousHighDate1" .= tradePreviousHighDate1,
        "previousHighRate2" .= tradePreviousHighRate2,
        "previousHighDate2" .= tradePreviousHighDate2,
        "previousHighRate3" .= tradePreviousHighRate3,
        "previousHighDate3" .= tradePreviousHighDate3,
        "24MonthPaymentHistory" .= trade24monthPaymentHistory,
        "customerName" .= tradeCustomerName,
        "dateReported" .= tradeDateReported,
        "dateOpened" .= tradeDateOpened,
        "highCredit" .= tradeHighCredit,
        "creditLimit" .= tradeCreditLimit,
        "balance" .= tradeBalance,
        "pastDueAmount" .= tradePastDueAmount,
        "portfolioTypeCode" .= tradePortfolioTypeCode,
        "rateStatusCode" .= tradeRateStatusCode,
        "rate" .= tradeRate,
        "lastActivityDate" .= tradeLastActivityDate,
        "narrativeCodes" .= tradeNarrativeCodes,
        "rawNarrativeCodes" .= tradeRawNarrativeCodes,
        "accountTypeCode" .= tradeAccountTypeCode,
        "lastPaymentDate" .= tradeLastPaymentDate,
        "closedDate" .= tradeClosedDate,
        "dateMajorDelinquencyFirstReported" .= tradeDateMajorDelinquencyFirstReported,
        "actualPaymentAmount" .= tradeActualPaymentAmount,
        "scheduledPaymentAmount" .= tradeScheduledPaymentAmount,
        "termsFrequencyCode" .= tradeTermsFrequencyCode,
        "termsDurationCode" .= tradeTermsDurationCode,
        "purchasedFromOrSoldCreditorIndicator" .= tradePurchasedFromOrSoldCreditorIndicator,
        "purchasedFromOrSoldCreditorName" .= tradePurchasedFromOrSoldCreditorName,
        "creditorClassificationCode" .= tradeCreditorClassificationCode,
        "activityDesignatorCode" .= tradeActivityDesignatorCode,
        "originalChargeOffAmount" .= tradeOriginalChargeOffAmount,
        "deferredPaymentStartDate" .= tradeDeferredPaymentStartDate,
        "ballonPaymentAmount" .= tradeBallonPaymentAmount,
        "ballonPaymentDueDate" .= tradeBallonPaymentDueDate,
        "mortgageIDNumber" .= tradeMortgageIdNumber,
        "paymentHistory1to24" .= tradePaymentHistory1to24,
        "paymentHistory25to36" .= tradePaymentHistory25to36,
        "paymentHistory37to48" .= tradePaymentHistory37to48,
        "previousHighRatePaymentHistory" .= tradePreviousHighRatePaymentHistory,
        "previousHighDatePaymentHistory" .= tradePreviousHighDatePaymentHistory,
        "dimensionsDataStartDate" .= tradeDimensionsDataStartDate,
        "dimensionsNumberOfMonths" .= tradeDimensionsNumberOfMonths,
        "dimension" .= tradeDimension
      ]

-- | Construct a value of type 'Trade' (by applying it's required fields, if any)
mkTrade ::
  Trade
mkTrade =
  Trade
    { tradeAutomatedUpdateIndicator = Nothing,
      tradeMonthsReviewed = Nothing,
      tradeAccountDesignator = Nothing,
      tradeAccountNumber = Nothing,
      tradeThirtyDayCounter = Nothing,
      tradeSixtyDayCounter = Nothing,
      tradeNinetyDayCounter = Nothing,
      tradePreviousHighRate1 = Nothing,
      tradePreviousHighDate1 = Nothing,
      tradePreviousHighRate2 = Nothing,
      tradePreviousHighDate2 = Nothing,
      tradePreviousHighRate3 = Nothing,
      tradePreviousHighDate3 = Nothing,
      trade24monthPaymentHistory = Nothing,
      tradeCustomerName = Nothing,
      tradeDateReported = Nothing,
      tradeDateOpened = Nothing,
      tradeHighCredit = Nothing,
      tradeCreditLimit = Nothing,
      tradeBalance = Nothing,
      tradePastDueAmount = Nothing,
      tradePortfolioTypeCode = Nothing,
      tradeRateStatusCode = Nothing,
      tradeRate = Nothing,
      tradeLastActivityDate = Nothing,
      tradeNarrativeCodes = Nothing,
      tradeRawNarrativeCodes = Nothing,
      tradeAccountTypeCode = Nothing,
      tradeLastPaymentDate = Nothing,
      tradeClosedDate = Nothing,
      tradeDateMajorDelinquencyFirstReported = Nothing,
      tradeActualPaymentAmount = Nothing,
      tradeScheduledPaymentAmount = Nothing,
      tradeTermsFrequencyCode = Nothing,
      tradeTermsDurationCode = Nothing,
      tradePurchasedFromOrSoldCreditorIndicator = Nothing,
      tradePurchasedFromOrSoldCreditorName = Nothing,
      tradeCreditorClassificationCode = Nothing,
      tradeActivityDesignatorCode = Nothing,
      tradeOriginalChargeOffAmount = Nothing,
      tradeDeferredPaymentStartDate = Nothing,
      tradeBallonPaymentAmount = Nothing,
      tradeBallonPaymentDueDate = Nothing,
      tradeMortgageIdNumber = Nothing,
      tradePaymentHistory1to24 = Nothing,
      tradePaymentHistory25to36 = Nothing,
      tradePaymentHistory37to48 = Nothing,
      tradePreviousHighRatePaymentHistory = Nothing,
      tradePreviousHighDatePaymentHistory = Nothing,
      tradeDimensionsDataStartDate = Nothing,
      tradeDimensionsNumberOfMonths = Nothing,
      tradeDimension = Nothing
    }

-- ** Trade24MonthPaymentHistory

-- | Trade24MonthPaymentHistory
data Trade24MonthPaymentHistory = Trade24MonthPaymentHistory
  { -- | "code"
    trade24MonthPaymentHistoryCode :: !(Maybe Text),
    -- | "description" - The most recent payment history on the trade for the last 24 months It&#39;s an optional feature offered by Equifax. Please contact your Equifax Sales Associate for additional information and activation.
    trade24MonthPaymentHistoryDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON Trade24MonthPaymentHistory
instance A.FromJSON Trade24MonthPaymentHistory where
  parseJSON = A.withObject "Trade24MonthPaymentHistory" $ \o ->
    Trade24MonthPaymentHistory
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON Trade24MonthPaymentHistory
instance A.ToJSON Trade24MonthPaymentHistory where
  toJSON Trade24MonthPaymentHistory {..} =
    A.object
      [ "code" .= trade24MonthPaymentHistoryCode,
        "description" .= trade24MonthPaymentHistoryDescription
      ]

-- | Construct a value of type 'Trade24MonthPaymentHistory' (by applying it's required fields, if any)
mkTrade24MonthPaymentHistory ::
  Trade24MonthPaymentHistory
mkTrade24MonthPaymentHistory =
  Trade24MonthPaymentHistory
    { trade24MonthPaymentHistoryCode = Nothing,
      trade24MonthPaymentHistoryDescription = Nothing
    }

-- ** TradeActivityDesignatorCode

-- | TradeActivityDesignatorCode
-- Describes the final state of the account.
data TradeActivityDesignatorCode = TradeActivityDesignatorCode
  { -- | "code" - Code value
    tradeActivityDesignatorCodeCode :: !(Maybe Text),
    -- | "description" - - B: Paid and Closed - C: Closed - D: Transfer/Sold/Paid - L: Lost/Stolen - P: Paid - R: Refinanced - T: Transfer/Sold
    tradeActivityDesignatorCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON TradeActivityDesignatorCode
instance A.FromJSON TradeActivityDesignatorCode where
  parseJSON = A.withObject "TradeActivityDesignatorCode" $ \o ->
    TradeActivityDesignatorCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON TradeActivityDesignatorCode
instance A.ToJSON TradeActivityDesignatorCode where
  toJSON TradeActivityDesignatorCode {..} =
    A.object
      [ "code" .= tradeActivityDesignatorCodeCode,
        "description" .= tradeActivityDesignatorCodeDescription
      ]

-- | Construct a value of type 'TradeActivityDesignatorCode' (by applying it's required fields, if any)
mkTradeActivityDesignatorCode ::
  TradeActivityDesignatorCode
mkTradeActivityDesignatorCode =
  TradeActivityDesignatorCode
    { tradeActivityDesignatorCodeCode = Nothing,
      tradeActivityDesignatorCodeDescription = Nothing
    }

-- ** TradeDimension

-- | TradeDimension
data TradeDimension = TradeDimension
  { -- | "dimensionsBalance" - Balance during the month being reported
    tradeDimensionDimensionsBalance :: !(Maybe Int),
    -- | "dimensionsActualPaymentAmount" - Payment actually received for a reporting period
    tradeDimensionDimensionsActualPaymentAmount :: !(Maybe Int),
    -- | "dimensionsScheduledPaymentAmount" - Contractual amount due for a payment period. (The figure in this field should be the monthly amount due regardless of the actual payment frequency.)
    tradeDimensionDimensionsScheduledPaymentAmount :: !(Maybe Int),
    -- | "dimensionsLastPaymentDate" - Date of the most recent payment
    tradeDimensionDimensionsLastPaymentDate :: !(Maybe Date),
    -- | "dimensionsHighCredit" - Highest outstanding balance or original amount
    tradeDimensionDimensionsHighCredit :: !(Maybe Int),
    -- | "dimensionsCreditLimit" - Highest available credit amount
    tradeDimensionDimensionsCreditLimit :: !(Maybe Int),
    -- | "dimensionsPastDueAmount" - Current amount overdue on a trade
    tradeDimensionDimensionsPastDueAmount :: !(Maybe Int),
    -- | "dimensionsNarrativeCodes"
    tradeDimensionDimensionsNarrativeCodes :: !(Maybe [A.Value]),
    -- | "dimensionsRawNarrativeCodes" - Raw Dimensions Data naratives. It contains up to 4 narratives
    tradeDimensionDimensionsRawNarrativeCodes :: !(Maybe [Text]),
    -- | "dimensionsAccountDesignatorCode"
    tradeDimensionDimensionsAccountDesignatorCode :: !(Maybe AccountDesignatorCode),
    -- | "dimensionsAccountTypeCode"
    tradeDimensionDimensionsAccountTypeCode :: !(Maybe AccountTypeCode)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON TradeDimension
instance A.FromJSON TradeDimension where
  parseJSON = A.withObject "TradeDimension" $ \o ->
    TradeDimension
      <$> (o .:? "dimensionsBalance")
      <*> (o .:? "dimensionsActualPaymentAmount")
      <*> (o .:? "dimensionsScheduledPaymentAmount")
      <*> (o .:? "dimensionsLastPaymentDate")
      <*> (o .:? "dimensionsHighCredit")
      <*> (o .:? "dimensionsCreditLimit")
      <*> (o .:? "dimensionsPastDueAmount")
      <*> (o .:? "dimensionsNarrativeCodes")
      <*> (o .:? "dimensionsRawNarrativeCodes")
      <*> (o .:? "dimensionsAccountDesignatorCode")
      <*> (o .:? "dimensionsAccountTypeCode")

-- | ToJSON TradeDimension
instance A.ToJSON TradeDimension where
  toJSON TradeDimension {..} =
    A.object
      [ "dimensionsBalance" .= tradeDimensionDimensionsBalance,
        "dimensionsActualPaymentAmount" .= tradeDimensionDimensionsActualPaymentAmount,
        "dimensionsScheduledPaymentAmount" .= tradeDimensionDimensionsScheduledPaymentAmount,
        "dimensionsLastPaymentDate" .= tradeDimensionDimensionsLastPaymentDate,
        "dimensionsHighCredit" .= tradeDimensionDimensionsHighCredit,
        "dimensionsCreditLimit" .= tradeDimensionDimensionsCreditLimit,
        "dimensionsPastDueAmount" .= tradeDimensionDimensionsPastDueAmount,
        "dimensionsNarrativeCodes" .= tradeDimensionDimensionsNarrativeCodes,
        "dimensionsRawNarrativeCodes" .= tradeDimensionDimensionsRawNarrativeCodes,
        "dimensionsAccountDesignatorCode" .= tradeDimensionDimensionsAccountDesignatorCode,
        "dimensionsAccountTypeCode" .= tradeDimensionDimensionsAccountTypeCode
      ]

-- | Construct a value of type 'TradeDimension' (by applying it's required fields, if any)
mkTradeDimension ::
  TradeDimension
mkTradeDimension =
  TradeDimension
    { tradeDimensionDimensionsBalance = Nothing,
      tradeDimensionDimensionsActualPaymentAmount = Nothing,
      tradeDimensionDimensionsScheduledPaymentAmount = Nothing,
      tradeDimensionDimensionsLastPaymentDate = Nothing,
      tradeDimensionDimensionsHighCredit = Nothing,
      tradeDimensionDimensionsCreditLimit = Nothing,
      tradeDimensionDimensionsPastDueAmount = Nothing,
      tradeDimensionDimensionsNarrativeCodes = Nothing,
      tradeDimensionDimensionsRawNarrativeCodes = Nothing,
      tradeDimensionDimensionsAccountDesignatorCode = Nothing,
      tradeDimensionDimensionsAccountTypeCode = Nothing
    }

-- ** TradePaymentHistory1to24

-- | TradePaymentHistory1to24
data TradePaymentHistory1to24 = TradePaymentHistory1to24
  { -- | "code"
    tradePaymentHistory1to24Code :: !(Maybe Text),
    -- | "description" - The valid values for the standard 24, 36 and 48 Month Payment History are:    - Blank: not populated based on the Date Open (payment history will only be populated for each of the months that the account has been open)   - E: Zero balance and current account    - \\*: Rate/Status was not available for that month  - 2 – 6, 8 and 9 (See Rate/Status Codes for values)  - 6: Valid value for Payment History
    tradePaymentHistory1to24Description :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON TradePaymentHistory1to24
instance A.FromJSON TradePaymentHistory1to24 where
  parseJSON = A.withObject "TradePaymentHistory1to24" $ \o ->
    TradePaymentHistory1to24
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON TradePaymentHistory1to24
instance A.ToJSON TradePaymentHistory1to24 where
  toJSON TradePaymentHistory1to24 {..} =
    A.object
      [ "code" .= tradePaymentHistory1to24Code,
        "description" .= tradePaymentHistory1to24Description
      ]

-- | Construct a value of type 'TradePaymentHistory1to24' (by applying it's required fields, if any)
mkTradePaymentHistory1to24 ::
  TradePaymentHistory1to24
mkTradePaymentHistory1to24 =
  TradePaymentHistory1to24
    { tradePaymentHistory1to24Code = Nothing,
      tradePaymentHistory1to24Description = Nothing
    }

-- ** TradePaymentHistory25to36

-- | TradePaymentHistory25to36
data TradePaymentHistory25to36 = TradePaymentHistory25to36
  { -- | "code"
    tradePaymentHistory25to36Code :: !(Maybe Text),
    -- | "description" - The valid values for the standard 24, 36 and 48 Month Payment History are:  - Blank: not populated based on the Date Open (payment history will only be populated for each of the months that the account has been open)  - E: Zero balance and current account  - \\*: Rate/Status was not available for that month  - 2 - 6, 8 and 9 (See Rate/Status Codes for values)  - 6: Valid value for Payment History
    tradePaymentHistory25to36Description :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON TradePaymentHistory25to36
instance A.FromJSON TradePaymentHistory25to36 where
  parseJSON = A.withObject "TradePaymentHistory25to36" $ \o ->
    TradePaymentHistory25to36
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON TradePaymentHistory25to36
instance A.ToJSON TradePaymentHistory25to36 where
  toJSON TradePaymentHistory25to36 {..} =
    A.object
      [ "code" .= tradePaymentHistory25to36Code,
        "description" .= tradePaymentHistory25to36Description
      ]

-- | Construct a value of type 'TradePaymentHistory25to36' (by applying it's required fields, if any)
mkTradePaymentHistory25to36 ::
  TradePaymentHistory25to36
mkTradePaymentHistory25to36 =
  TradePaymentHistory25to36
    { tradePaymentHistory25to36Code = Nothing,
      tradePaymentHistory25to36Description = Nothing
    }

-- ** TradePaymentHistory37to48

-- | TradePaymentHistory37to48
data TradePaymentHistory37to48 = TradePaymentHistory37to48
  { -- | "code"
    tradePaymentHistory37to48Code :: !(Maybe Text),
    -- | "description" - The valid values for the standard 24, 36 and 48 Month Payment History are:  - Blank: not populated based on the Date Open (payment history will only be populated for each of the months that the account has been open)  - E: Zero balance and current account  - \\*: Rate/Status was not available for that month  - 2 – 6, 8 and 9 (See Rate/Status Codes for values)  - 6: Valid value for Payment History
    tradePaymentHistory37to48Description :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON TradePaymentHistory37to48
instance A.FromJSON TradePaymentHistory37to48 where
  parseJSON = A.withObject "TradePaymentHistory37to48" $ \o ->
    TradePaymentHistory37to48
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON TradePaymentHistory37to48
instance A.ToJSON TradePaymentHistory37to48 where
  toJSON TradePaymentHistory37to48 {..} =
    A.object
      [ "code" .= tradePaymentHistory37to48Code,
        "description" .= tradePaymentHistory37to48Description
      ]

-- | Construct a value of type 'TradePaymentHistory37to48' (by applying it's required fields, if any)
mkTradePaymentHistory37to48 ::
  TradePaymentHistory37to48
mkTradePaymentHistory37to48 =
  TradePaymentHistory37to48
    { tradePaymentHistory37to48Code = Nothing,
      tradePaymentHistory37to48Description = Nothing
    }

-- ** TradePortfolioTypeCode

-- | TradePortfolioTypeCode
-- Describes the payment arrangement of the account (revolving, open, installment, line of credit or mortgage)
data TradePortfolioTypeCode = TradePortfolioTypeCode
  { -- | "code" - Code value
    tradePortfolioTypeCodeCode :: !(Maybe Text),
    -- | "description" - Portfolio Type Codes:   - C: Line of Credit (payment amounts based on the outstanding balance)   - I: Installment (fixed number of payments)   - M: Mortgage (fixed number of payments – usually for real estate)   - O: Open Account (entire balance is due upon demand)   - R: Revolving (payment amounts based on the outstanding balance)   - Blank: No Portfolio Type available
    tradePortfolioTypeCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON TradePortfolioTypeCode
instance A.FromJSON TradePortfolioTypeCode where
  parseJSON = A.withObject "TradePortfolioTypeCode" $ \o ->
    TradePortfolioTypeCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON TradePortfolioTypeCode
instance A.ToJSON TradePortfolioTypeCode where
  toJSON TradePortfolioTypeCode {..} =
    A.object
      [ "code" .= tradePortfolioTypeCodeCode,
        "description" .= tradePortfolioTypeCodeDescription
      ]

-- | Construct a value of type 'TradePortfolioTypeCode' (by applying it's required fields, if any)
mkTradePortfolioTypeCode ::
  TradePortfolioTypeCode
mkTradePortfolioTypeCode =
  TradePortfolioTypeCode
    { tradePortfolioTypeCodeCode = Nothing,
      tradePortfolioTypeCodeDescription = Nothing
    }

-- ** TradePurchasedFromOrSoldCreditorIndicator

-- | TradePurchasedFromOrSoldCreditorIndicator
-- Purchased From/Sold To/Original Creditor Name is the purchaser, seller or original creditor
data TradePurchasedFromOrSoldCreditorIndicator = TradePurchasedFromOrSoldCreditorIndicator
  { -- | "code" - Code value
    tradePurchasedFromOrSoldCreditorIndicatorCode :: !(Maybe Text),
    -- | "description" - Purchased From/Sold To/Original Creditor Values   - O: Original Creditor   - P: Purchased From   - S: Sold To
    tradePurchasedFromOrSoldCreditorIndicatorDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON TradePurchasedFromOrSoldCreditorIndicator
instance A.FromJSON TradePurchasedFromOrSoldCreditorIndicator where
  parseJSON = A.withObject "TradePurchasedFromOrSoldCreditorIndicator" $ \o ->
    TradePurchasedFromOrSoldCreditorIndicator
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON TradePurchasedFromOrSoldCreditorIndicator
instance A.ToJSON TradePurchasedFromOrSoldCreditorIndicator where
  toJSON TradePurchasedFromOrSoldCreditorIndicator {..} =
    A.object
      [ "code" .= tradePurchasedFromOrSoldCreditorIndicatorCode,
        "description" .= tradePurchasedFromOrSoldCreditorIndicatorDescription
      ]

-- | Construct a value of type 'TradePurchasedFromOrSoldCreditorIndicator' (by applying it's required fields, if any)
mkTradePurchasedFromOrSoldCreditorIndicator ::
  TradePurchasedFromOrSoldCreditorIndicator
mkTradePurchasedFromOrSoldCreditorIndicator =
  TradePurchasedFromOrSoldCreditorIndicator
    { tradePurchasedFromOrSoldCreditorIndicatorCode = Nothing,
      tradePurchasedFromOrSoldCreditorIndicatorDescription = Nothing
    }

-- ** TradeRate

-- | TradeRate
data TradeRate = TradeRate
  { -- | "code"
    tradeRateCode :: !(Maybe Int),
    -- | "description"
    tradeRateDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON TradeRate
instance A.FromJSON TradeRate where
  parseJSON = A.withObject "TradeRate" $ \o ->
    TradeRate
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON TradeRate
instance A.ToJSON TradeRate where
  toJSON TradeRate {..} =
    A.object
      [ "code" .= tradeRateCode,
        "description" .= tradeRateDescription
      ]

-- | Construct a value of type 'TradeRate' (by applying it's required fields, if any)
mkTradeRate ::
  TradeRate
mkTradeRate =
  TradeRate
    { tradeRateCode = Nothing,
      tradeRateDescription = Nothing
    }

-- ** TradeRateStatusCode

-- | TradeRateStatusCode
-- Current status or rating of the account
data TradeRateStatusCode = TradeRateStatusCode
  { -- | "code" - Code value
    tradeRateStatusCodeCode :: !(Maybe Text),
    -- | "description" -  - 0: Too new to rate; Approved but not used    : - 1: Pays account as agreed    : - 2: Not more than two payments past due    : - 3: Not more than three payments past due    : - 4: Not more than four payments past due    : - 5: At least 120 days or more than four payments past due    : - 6: Collection account (Enhanced Trade Only)    : - 7: Included in Chapter 13    : - 8: Repossession    : - 9: Charge-off - Blank: No rate reported
    tradeRateStatusCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON TradeRateStatusCode
instance A.FromJSON TradeRateStatusCode where
  parseJSON = A.withObject "TradeRateStatusCode" $ \o ->
    TradeRateStatusCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON TradeRateStatusCode
instance A.ToJSON TradeRateStatusCode where
  toJSON TradeRateStatusCode {..} =
    A.object
      [ "code" .= tradeRateStatusCodeCode,
        "description" .= tradeRateStatusCodeDescription
      ]

-- | Construct a value of type 'TradeRateStatusCode' (by applying it's required fields, if any)
mkTradeRateStatusCode ::
  TradeRateStatusCode
mkTradeRateStatusCode =
  TradeRateStatusCode
    { tradeRateStatusCodeCode = Nothing,
      tradeRateStatusCodeDescription = Nothing
    }

-- ** TradeTermsDurationCode

-- | TradeTermsDurationCode
-- Amount of time to repay the loan
data TradeTermsDurationCode = TradeTermsDurationCode
  { -- | "code" - Code value
    tradeTermsDurationCodeCode :: !(Maybe Text),
    -- | "description" - Terms duration codes    - D: Days   - M: Months   - Y: Years
    tradeTermsDurationCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON TradeTermsDurationCode
instance A.FromJSON TradeTermsDurationCode where
  parseJSON = A.withObject "TradeTermsDurationCode" $ \o ->
    TradeTermsDurationCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON TradeTermsDurationCode
instance A.ToJSON TradeTermsDurationCode where
  toJSON TradeTermsDurationCode {..} =
    A.object
      [ "code" .= tradeTermsDurationCodeCode,
        "description" .= tradeTermsDurationCodeDescription
      ]

-- | Construct a value of type 'TradeTermsDurationCode' (by applying it's required fields, if any)
mkTradeTermsDurationCode ::
  TradeTermsDurationCode
mkTradeTermsDurationCode =
  TradeTermsDurationCode
    { tradeTermsDurationCodeCode = Nothing,
      tradeTermsDurationCodeDescription = Nothing
    }

-- ** TradeTermsFrequencyCode

-- | TradeTermsFrequencyCode
-- Reflects how often payments are due
data TradeTermsFrequencyCode = TradeTermsFrequencyCode
  { -- | "code" - Code value
    tradeTermsFrequencyCodeCode :: !(Maybe Text),
    -- | "description" - - B: Biweekly (due every 2 weeks) - D: Deferred - E: Semi-monthly (due twice a month) - L: Bi-monthly (due every 2 months) - M: Monthly (due every month) - P: Single Payment Loan - Q: Quarterly (due every 3 months) - S: Semi-annually (due twice a year) - T: Tri-annually (due every 4 months) - W: Weekly (due every week) - Y: Annually (due every year)
    tradeTermsFrequencyCodeDescription :: !(Maybe Text)
  }
  deriving (P.Show, P.Eq, P.Typeable)

-- | FromJSON TradeTermsFrequencyCode
instance A.FromJSON TradeTermsFrequencyCode where
  parseJSON = A.withObject "TradeTermsFrequencyCode" $ \o ->
    TradeTermsFrequencyCode
      <$> (o .:? "code")
      <*> (o .:? "description")

-- | ToJSON TradeTermsFrequencyCode
instance A.ToJSON TradeTermsFrequencyCode where
  toJSON TradeTermsFrequencyCode {..} =
    A.object
      [ "code" .= tradeTermsFrequencyCodeCode,
        "description" .= tradeTermsFrequencyCodeDescription
      ]

-- | Construct a value of type 'TradeTermsFrequencyCode' (by applying it's required fields, if any)
mkTradeTermsFrequencyCode ::
  TradeTermsFrequencyCode
mkTradeTermsFrequencyCode =
  TradeTermsFrequencyCode
    { tradeTermsFrequencyCodeCode = Nothing,
      tradeTermsFrequencyCodeDescription = Nothing
    }

-- * Enums

-- ** E'AddressType

-- | Enum of 'Text' .
-- The address type:   - current: Current Address. A maximum of 1 current Address can be returned per report   - former: Former Address. A maximum of 1 former Address can be returned per report   - additional: Additional Address. A maximum of 8 additional Addresses can be returned per report
data E'AddressType
  = -- | @"current"@
    E'AddressType'Current
  | -- | @"former"@
    E'AddressType'Former
  | -- | @"additional"@
    E'AddressType'Additional
  deriving (P.Show, P.Eq, P.Typeable, P.Ord, P.Bounded, P.Enum)

instance A.ToJSON E'AddressType where toJSON = A.toJSON . fromE'AddressType

instance A.FromJSON E'AddressType where parseJSON o = P.either P.fail (pure . P.id) . toE'AddressType =<< A.parseJSON o

instance WH.ToHttpApiData E'AddressType where toQueryParam = WH.toQueryParam . fromE'AddressType

instance WH.FromHttpApiData E'AddressType where parseQueryParam o = WH.parseQueryParam o >>= P.left T.pack . toE'AddressType

instance MimeRender MimeMultipartFormData E'AddressType where mimeRender _ = mimeRenderDefaultMultipartFormData

-- | unwrap 'E'AddressType' enum
fromE'AddressType :: E'AddressType -> Text
fromE'AddressType = \case
  E'AddressType'Current -> "current"
  E'AddressType'Former -> "former"
  E'AddressType'Additional -> "additional"

-- | parse 'E'AddressType' enum
toE'AddressType :: Text -> P.Either String E'AddressType
toE'AddressType = \case
  "current" -> P.Right E'AddressType'Current
  "former" -> P.Right E'AddressType'Former
  "additional" -> P.Right E'AddressType'Additional
  s -> P.Left $ "toE'AddressType: enum parse failure: " P.++ P.show s

-- ** E'ErrorType

-- | Enum of 'Text' .
-- Error type
data E'ErrorType
  = -- | @"CERR"@
    E'ErrorType'CERR
  | -- | @"MERR"@
    E'ErrorType'MERR
  deriving (P.Show, P.Eq, P.Typeable, P.Ord, P.Bounded, P.Enum)

instance A.ToJSON E'ErrorType where toJSON = A.toJSON . fromE'ErrorType

instance A.FromJSON E'ErrorType where parseJSON o = P.either P.fail (pure . P.id) . toE'ErrorType =<< A.parseJSON o

instance WH.ToHttpApiData E'ErrorType where toQueryParam = WH.toQueryParam . fromE'ErrorType

instance WH.FromHttpApiData E'ErrorType where parseQueryParam o = WH.parseQueryParam o >>= P.left T.pack . toE'ErrorType

instance MimeRender MimeMultipartFormData E'ErrorType where mimeRender _ = mimeRenderDefaultMultipartFormData

-- | unwrap 'E'ErrorType' enum
fromE'ErrorType :: E'ErrorType -> Text
fromE'ErrorType = \case
  E'ErrorType'CERR -> "CERR"
  E'ErrorType'MERR -> "MERR"

-- | parse 'E'ErrorType' enum
toE'ErrorType :: Text -> P.Either String E'ErrorType
toE'ErrorType = \case
  "CERR" -> P.Right E'ErrorType'CERR
  "MERR" -> P.Right E'ErrorType'MERR
  s -> P.Left $ "toE'ErrorType: enum parse failure: " P.++ P.show s

-- ** E'FirstNameMatchFlag

-- | Enum of 'Text' .
-- Flag indicates if the subject's first name matches
data E'FirstNameMatchFlag
  = -- | @"Y"@
    E'FirstNameMatchFlag'Y
  | -- | @"N"@
    E'FirstNameMatchFlag'N
  deriving (P.Show, P.Eq, P.Typeable, P.Ord, P.Bounded, P.Enum)

instance A.ToJSON E'FirstNameMatchFlag where toJSON = A.toJSON . fromE'FirstNameMatchFlag

instance A.FromJSON E'FirstNameMatchFlag where parseJSON o = P.either P.fail (pure . P.id) . toE'FirstNameMatchFlag =<< A.parseJSON o

instance WH.ToHttpApiData E'FirstNameMatchFlag where toQueryParam = WH.toQueryParam . fromE'FirstNameMatchFlag

instance WH.FromHttpApiData E'FirstNameMatchFlag where parseQueryParam o = WH.parseQueryParam o >>= P.left T.pack . toE'FirstNameMatchFlag

instance MimeRender MimeMultipartFormData E'FirstNameMatchFlag where mimeRender _ = mimeRenderDefaultMultipartFormData

-- | unwrap 'E'FirstNameMatchFlag' enum
fromE'FirstNameMatchFlag :: E'FirstNameMatchFlag -> Text
fromE'FirstNameMatchFlag = \case
  E'FirstNameMatchFlag'Y -> "Y"
  E'FirstNameMatchFlag'N -> "N"

-- | parse 'E'FirstNameMatchFlag' enum
toE'FirstNameMatchFlag :: Text -> P.Either String E'FirstNameMatchFlag
toE'FirstNameMatchFlag = \case
  "Y" -> P.Right E'FirstNameMatchFlag'Y
  "N" -> P.Right E'FirstNameMatchFlag'N
  s -> P.Left $ "toE'FirstNameMatchFlag: enum parse failure: " P.++ P.show s

-- ** E'ImpactedDataIndicator

-- | Enum of 'Text' .
-- Are you impacted by the Equifax Breach? - Y: SSN likely impacted - N: SSN unlikely impacted - U: SSN impact cannot be determined
data E'ImpactedDataIndicator
  = -- | @"Y"@
    E'ImpactedDataIndicator'Y
  | -- | @"N"@
    E'ImpactedDataIndicator'N
  | -- | @"U"@
    E'ImpactedDataIndicator'U
  deriving (P.Show, P.Eq, P.Typeable, P.Ord, P.Bounded, P.Enum)

instance A.ToJSON E'ImpactedDataIndicator where toJSON = A.toJSON . fromE'ImpactedDataIndicator

instance A.FromJSON E'ImpactedDataIndicator where parseJSON o = P.either P.fail (pure . P.id) . toE'ImpactedDataIndicator =<< A.parseJSON o

instance WH.ToHttpApiData E'ImpactedDataIndicator where toQueryParam = WH.toQueryParam . fromE'ImpactedDataIndicator

instance WH.FromHttpApiData E'ImpactedDataIndicator where parseQueryParam o = WH.parseQueryParam o >>= P.left T.pack . toE'ImpactedDataIndicator

instance MimeRender MimeMultipartFormData E'ImpactedDataIndicator where mimeRender _ = mimeRenderDefaultMultipartFormData

-- | unwrap 'E'ImpactedDataIndicator' enum
fromE'ImpactedDataIndicator :: E'ImpactedDataIndicator -> Text
fromE'ImpactedDataIndicator = \case
  E'ImpactedDataIndicator'Y -> "Y"
  E'ImpactedDataIndicator'N -> "N"
  E'ImpactedDataIndicator'U -> "U"

-- | parse 'E'ImpactedDataIndicator' enum
toE'ImpactedDataIndicator :: Text -> P.Either String E'ImpactedDataIndicator
toE'ImpactedDataIndicator = \case
  "Y" -> P.Right E'ImpactedDataIndicator'Y
  "N" -> P.Right E'ImpactedDataIndicator'N
  "U" -> P.Right E'ImpactedDataIndicator'U
  s -> P.Left $ "toE'ImpactedDataIndicator: enum parse failure: " P.++ P.show s

-- ** E'Type

-- | Enum of 'Text' .
-- Determine what type of model is
data E'Type
  = -- | @"EDAS"@
    E'Type'EDAS
  | -- | @"FICO"@
    E'Type'FICO
  | -- | @"MARKETMAX"@
    E'Type'MARKETMAX
  | -- | @"IDSCORE"@
    E'Type'IDSCORE
  | -- | @"MODEL"@
    E'Type'MODEL
  | -- | @"RBP"@
    E'Type'RBP
  | -- | @"DODDFRANK"@
    E'Type'DODDFRANK
  deriving (P.Show, P.Eq, P.Typeable, P.Ord, P.Bounded, P.Enum)

instance A.ToJSON E'Type where toJSON = A.toJSON . fromE'Type

instance A.FromJSON E'Type where parseJSON o = P.either P.fail (pure . P.id) . toE'Type =<< A.parseJSON o

instance WH.ToHttpApiData E'Type where toQueryParam = WH.toQueryParam . fromE'Type

instance WH.FromHttpApiData E'Type where parseQueryParam o = WH.parseQueryParam o >>= P.left T.pack . toE'Type

instance MimeRender MimeMultipartFormData E'Type where mimeRender _ = mimeRenderDefaultMultipartFormData

-- | unwrap 'E'Type' enum
fromE'Type :: E'Type -> Text
fromE'Type = \case
  E'Type'EDAS -> "EDAS"
  E'Type'FICO -> "FICO"
  E'Type'MARKETMAX -> "MARKETMAX"
  E'Type'IDSCORE -> "IDSCORE"
  E'Type'MODEL -> "MODEL"
  E'Type'RBP -> "RBP"
  E'Type'DODDFRANK -> "DODDFRANK"

-- | parse 'E'Type' enum
toE'Type :: Text -> P.Either String E'Type
toE'Type = \case
  "EDAS" -> P.Right E'Type'EDAS
  "FICO" -> P.Right E'Type'FICO
  "MARKETMAX" -> P.Right E'Type'MARKETMAX
  "IDSCORE" -> P.Right E'Type'IDSCORE
  "MODEL" -> P.Right E'Type'MODEL
  "RBP" -> P.Right E'Type'RBP
  "DODDFRANK" -> P.Right E'Type'DODDFRANK
  s -> P.Left $ "toE'Type: enum parse failure: " P.++ P.show s
