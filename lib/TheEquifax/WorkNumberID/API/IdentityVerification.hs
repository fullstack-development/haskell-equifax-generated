{-
   The Work Number ID API

   # Introduction The Work Number&reg; ID verifies that the applicant-provided Name and SSN match. By doing so, TWN ID helps mitigate the expense of manual review. Customers use TWN ID during the application process to make prompt, more informed decisions.  # Getting started 1. **<a href=\"/user/user-apps\" target=\"_blank\">Subscribe</a>** to get API credentials. 2. **<a href=\"/oauth\" target=\"_blank\">Get an access token</a>** using the credentials. 3. **[Identity verification](#tag/Identity-verification)** 

   OpenAPI Version: 3.0.0
   The Work Number ID API API version: v1
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : WorkNumberID.API.IdentityVerification
-}

{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MonoLocalBinds #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE OverloadedStrings #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-binds -fno-warn-unused-imports #-}

module TheEquifax.WorkNumberID.API.IdentityVerification where

import TheEquifax.Core
import TheEquifax.Core.Auth (AuthEquaifaxOAuth20Token)
import TheEquifax.Core.MimeTypes
import TheEquifax.WorkNumberID.Model as M

import qualified Data.Aeson as A
import qualified Data.ByteString as B
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Typeable, TypeRep, typeOf, typeRep)
import qualified Data.Foldable as P
import qualified Data.Map as Map
import qualified Data.Maybe as P
import qualified Data.Proxy as P (Proxy(..))
import qualified Data.Set as Set
import qualified Data.String as P
import qualified Data.Text as T
import qualified Data.Text.Encoding as T
import qualified Data.Text.Lazy as TL
import qualified Data.Text.Lazy.Encoding as TL
import qualified Data.Time as TI
import qualified Network.HTTP.Client.MultipartFormData as NH
import qualified Network.HTTP.Media as ME
import qualified Network.HTTP.Types as NH
import qualified Web.FormUrlEncoded as WH
import qualified Web.HttpApiData as WH

import Data.Text (Text)
import GHC.Base ((<|>))

import Prelude ((==),(/=),($), (.),(<$>),(<*>),(>>=),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

-- * Operations


-- ** IdentityVerification

-- *** verifyApplicantsIdentity

-- | @POST \/identity-verifications@
-- 
-- The Work Number&reg; ID verifies that the applicant-provided Name and SSN match. This service requires an OAuth access token that can be obtained by first making the OAuth 2.0 Access Token call.
-- 
-- AuthMethod: 'AuthBasicOAuth20'
-- 
verifyApplicantsIdentity
  :: (Consumes VerifyApplicantsIdentity MimeJSON, MimeRender MimeJSON IdentityVerificationRequest)
  => IdentityVerificationRequest -- ^ "request"
  -> TheEquifaxRequest VerifyApplicantsIdentity MimeJSON IdentityVerificationResponse MimeAny -- MimeAny here because otherwise the request fails
verifyApplicantsIdentity request =
  _mkRequest "POST" ["/business/verifications/twn/v1/identity-verifications"]
    `_hasAuthType` (P.Proxy :: P.Proxy AuthEquaifaxOAuth20Token)
    `setBodyParam` request

data VerifyApplicantsIdentity 
instance HasBodyParam VerifyApplicantsIdentity IdentityVerificationRequest 

-- | @application/json@
instance Consumes VerifyApplicantsIdentity MimeJSON

-- | @application/json@
instance Produces VerifyApplicantsIdentity MimeAny -- MimeAny here because otherwise the request fails

